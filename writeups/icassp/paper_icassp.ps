%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: paper_icassp.dvi
%%CreationDate: Mon Oct  6 02:19:23 2014
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Italic Times-Roman CMSY10
%%+ Times-BoldItalic CMMI10 CMR10 CMMI7 CMR7 CMEX10 MSBM10 CMSY7 CMBX10
%%+ CMBX7 CMMI5 CMR5 CMSY5
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/texbin/dvips paper_icassp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.10.06:0219
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 455 2011-01-30 11:19:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.07, 2009/04/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep div cvi def
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  XA Shift sub YA Shift sub moveto 
  gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
  Symbol show grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  showpoints 
    { ] aload /Points ED } 
    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    0 exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop 0 Lineto
      n { 2 copy moveto pop 0 Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop 0
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    startAngle rotate Symbol show 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} 
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
    Symbol show 
    grestore
  }
  pathforall 
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 350 2010-06-18 05:18:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.02, 2010/06/08
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 490 2011-04-23 09:25:30Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.01, 2011/04/23
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 440 2010-12-28 21:06:39Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.12, 2010/04/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY5
%!PS-AdobeFont-1.0: CMSY5 003.002
%%Title: CMSY5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY5 known{/CMSY5 findfont dup/UniqueID known{dup
/UniqueID get 5096646 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY5 def
/FontBBox {21 -944 1448 791 }readonly def
/UniqueID 5096646 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY5.) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D77D0DAC26A1FA54
D2471EE9BE33D2E87853491D634A3F05B7672519E09291AC2D08D95BFB80CABC
FA89042E94FED8DC9929ECEFAF741D273687B2127F5B80ED7D16F146894841D5
1A80D8085E27114AC35CD5E578760D8982CF4D8587FD3385FE50E21A253A37E2
AB628DF3500FD2C21BCCBC8C0B6AD3AE21DE63AE6586DB06B3FB1966625EBF52
90FEBA873F819AB480FF994D80C01DE1E2F28C665E74FACFF98B2972CCCAD279
96F2EFF1113CDA922985E095249765989A4C6A92A76340DCFA07AFF34AC5E177
09B739A72D0D1EAE1A6164F3AA0DF1651EFED335B68C8465E1A61025235D4A5A
C3661B9C0456C35C770242149B3B98A29784BF71030C7DBB2C13958E5CC263AE
FEAEB9FBA84E06D772E94A494B60E32AB8FF862E57175DB17F6162DFFED60EF2
D46FB78237E778C7321ED79FAC137945A46B2D90B778DA46308899577BC7844E
3E09303AB2DD1F64D58756DAD62ADE22C62DE6C9BDA77CB12B1FCE3374CFA442
E0CABC7C9AE699CD955077A7268FA0FD3FF5EEDE605990F0DF0078799F5CED44
6ABDB2E7D9214BECB8B2CBCF328F7F5B8F346B55C9BA5C785A252DA59602B6DF
186D23D5D90556EB52D7C0B44E4A9A189C180FA213E12E9838F0B2902779E289
3E2B7DF45A01F36D88C9CB814AE5D41064030D37393DDD7D5974C1A27EBEC064
B0403898996140AB14E6EF1B48D555A1C4DE29AD0C5D284988B92917442D2C61
3B15E55CD91837B0496FEBB51486CEA7DFD9787AEB484BE887111903124340C0
EB034A75292E59CC038E75E1DDB0027407492EEF92D70E0303BD7B2703E131FE
BA91B289003B7E5BF85D2E5E130CB37949AEE51EA57FD424402B0BEEDEDEB5C3
E23643F3100312F94C157C98939EA2312B11DE0A683D4018FFBA2864626C9449
0D656EB0C79246A7F5ACDF442A55C9188D8F3FA64A9B6BFACD8F81D7546E0CD4
3C5CC653CE9514306439AA2BD2FF2B965EA69A30331E8D65056D919476867463
97DAFADD16BF9366E95C7C4276093B639541F7AFC9AF745260685D84DD3095D4
1B925540372ABFB68CEF211D65756FE0E99733B5DB40D5A42016E8715208D4B0
7A120EEB34147BD179FAFA94D0880121D1C6B27F94965ECC1A93D1B73AC1B3B7
191B7B3CD4F2E0E52A3893255C4B3F1A70A0ED36DAD262538E02E8A227F6D6A1
8A047A91ED6409F1E0D9B40698C817918AA47B95A082E3394AC42DE93BF9CB28
68E63F3363FDCDB014E89990C50210750E8442D9555B0A796B243AB03190B2BD
57C39F233318B6474F1B3CCE31C21BEF68FF5E3F866789041910B1B11ACEB75F
146BB1A162AEFB268700C2DFBD9752BCF6F136ACAE815C0AA4147AA2CE61D282
1BA716B693E2F713D0653B17C9381DA86E1CFCDD1B1FB9A72ABDA1AB2BCAD30E
A4EAB601BE3F8EB95B32DCF5DD114683AA64E14F9A958D16CC6DAC7DC3ED651D
603959B0265FD36F8DA41F3173A708D88C73EEA1533CE48C2AB26B4DB7CFA662
A8A463CC178C31D342EF907B3B44751859F2BD510F1CA93D61AD39E8E5D7785D
D465C47F3EDFAC22DC2B5DD93B2F752EB5482E138A0A1E5CD62747E0F524E29C
A56E58A6BA543CB3AE051F4D90891B65712B63DB197E60275EAF5975007D09B7
95F916615F97C50D8FDCFB67F1B677DC5139E6F46ABA079AC552F27F507CAE8E
E5C04D31ECDD6CF5E8A447846375C1748651245EB9C780D87FFF162AEBCC9E0B
155B318CBF420DF0CFBAA5669C2DBC81B55B5042514B05B7B82FCC827E21462B
BC8F8FA96E2CC4441E07E0901EA72495013400453E49B7D243FEF528E4078AB6
49277EE77C81B9167D2EE1961AE265A8C01F7562ECDC47D9FEC391097474EF8E
54A5A7FE6C98A81ED29D42A3D54326219F638C92AF8A087607CA2A2A80CB1183
8571CD40199FBDB9D70AD83979C739F533359FB2DF0AC4AE3A0E9DFE735ADE9D
6E29B3F6DB9A5B11418E9C860EFDBCB0E49BB900BBCC85860100F1FFA5AC07B5
14F37C5AE5E1A35168BC48BA7012A297C7771789302AF44765A6DBCFDD418172
62DF3A4785385CC9D055A9B4FFF373041D9F5E9DA83BC1C5F3265E49BA624B82
F15BC17B135D8723324865A9CCDD2EF3A0F64C17914F9B238C946FBCABD92B30
AF90191996ABF2E4972AA9D0EF7B64AD0126D07714D4059CE032905BDF877D7C
3440C374D7B5D0073E13ECDF3DEF2938EAC1908CC60D0E5EF5F52AE8A1B0BD34
8A454CDA66E7340783A7152CCD74EAAD4112C7D70F3C867E140988BB610CCA20
F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA91
86B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5C0C3E39199FF6
4DC35B155A759CBFAA96409BAFC7EDFF03D2671F0396641446605843CA4AA36A
15070DE52DDBFF487C5398CF7604DE843F32CAB26A96F8A9DCD03F3DCAA57E47
6F0D36CDA34B96B7F4986275D79A1BC1954D2BC0BE1509709E40FF23B84F8D65
3DE1D1D8A2AD94AE3DE202D62993EC4BC5AF66CE512EFFE7CF39028BCEC1667D
8782111D9D503BFA45E4960E6197D8CB5697B1662BD2D991532074AF5491DDC3
2EC52B4E5AF9B2DAA5D5E4CB644BED25DACC3F445E4C7D58A1E9737F4EC04A79
238E3578311D88EE6D067725C580A146FF150871FAB2B366B5AFE5CE3B386EF2
EFB540348505A1749BB34586851FB2FEDA92ECC395B618911E1D00B427251B05
15B9E42AC1F0F239827B938EAB8CD20FF9705F4D7FB5F5F911CED9EE8FDABE8B
3C3442DC3B716C3686E1B0573EAE3905C3964ACB336FA3C38B17F229EA10F036
ADDE7FA5CFC01FAAD33F75A125F52AD395C7DBD3AB6F2321D7B5B55F0ED237CC
61FA8278FFF9956C64B8ACBE357D4603CC4599BFA198AEC01E4F4AE047754C16
E155C8FD09C996D9B5EECDB243FA48B0CED1F0882103729EAECDDB9523D6BC22
0AA1545814579043F0DDA2D7F015E56C399EA3C644A15BA6B144361449609C40
A4986E00918A7B44BB06E7090F73FFBE4EE3E051121939EAB0349EE84715DE36
FB187C50AFD74C44C25BE4B7037466CD60F211FFD7044245159505196B0E181C
0177F14D0B486CDFB767708C171FE513AAFA2B60665CA55B1E5F9E0304B63666
3BF44EC4F5B7DA58891081F78B37BE8453E86AF3557B97D8B4969CCDE2DFD255
91FB4D9CD41E5F931751BDF7FC8C700C633470064C0BB00FE5745918A69CE430
D86FE46DEC014C019C06621B2EC6C3F196A8A5E1E613AD8B28A9D0B981C11A29
4AD11CD3A46D089F8EF7D8298971A5F9F6F139CA794AB4BF0AAB2D4D428A8E4D
B80EC134CC7CD74D3F08E7BC8AC5B1846E1E5DBFA97AE4DB885286C7D06B4CF8
948E889ED85E8703CB97D7AE19E1201EEA205157BEEFAA3E17B8BDDFD01BDB17
691010A662280C279942158F68BD351B235EA4EBE24D54C0055A19A3F230F353
77202A1D7BE371010624CB741D4BA2E690B33FE582D666E9788A3E3348A0E100
2843E0B2FDEE05DF75F4D49DFE2B69BE79E97DA1B3638289395444F1CF6CDAB5
5E6EEBB6F907807B913290C25D8AA546B121EA90DD113588011DBF01B7F88AA9
B9CA9731532478D3BA57786817C1D31D8C51C307D7F500F1B58C2CEC9594E5C4
E5E7239D90C8B5B4A81F95C048272A2C05EF0613463E4094E922F7326815EF3E
6E82D5A36840A76B1BB25185CD66B05FF2D140E0F22CFF73EB3F57732E935BA6
8C64BB6809E1B45089273527834789637621793414B6853A1C301612920E3F91
458D043CC1B6CDA271864FD4CCE585FDF025FAD217F975FC36FAF8B79A6551DE
AC3863E25DE972E2A4AD997E77A2C05A1A14152BCFDEAF40072A0AD952A3944B
AB12D66ED3C408DD104B8638D67417D2A95A87E226A03C28181047CF5BE58409
7D07D2529BF867BB61ACFD68F817BCA73815F787162614EB926563EE2F8629FA
6BEBC05465458A03C2A8673A3CFF7552855E082A7B5C2D4101A1B96449071485
279C1EC56610507DF786427B4E4D949BDC9127C2802451F3B21D60D5827E5B7D
0A683F4402725547EEBE27C38839876A3B1B7FE0D7107D6E2292631D1B9EFC79
87D05342972EEE2C413568BA971AF56A2D4D89C7C0D0120AD504D444655CFF3C
957D5EF19169401CAAA2C4C144FF87AC7DD3451A63CE796B8F6C600F913F55A5
A74B928AD676ED097740BDA578DA299F42CB7B7334BD2281E403129866031EEA
1219E7F9BBA230D049EEF401CEB412BF7FB58FB2F9B7D1E47F0D774956B803E2
872A7A5A38E5B7EC4A225C73522EFCE6E98E3EDA3BB402BC5BBBA209074BD2A8
C856290D01A092160E8FB0D9EF324776AD39D7016C63A500D0839E670009F4C0
20F033554B6B7CCAB7BF60494431E4F2755E4CD966ADC7A078D434FA59E5E49B
9903F4E722ED169CC3D0FADE874E3141CD47C69BAFA3183BEA4F37B388F4F48B
7D143D4B79CC5E701EEB350447D9600D39A7C03A25B5B8B6A5A7284A8DB4969C
CDE2C99C39EC07BD8559A45CB5AF23B849C1826713828F43DF265068950DDADF
3B584B90748657609A89008187BDE4286F95694D01760260274A23A41FA66A78
773902ADDAD18F98F045FF7D20AD20EB685C145D44237EDA272619EA9AB71497
DC8BBE9EEED31EA77C9410FE650C65A6CA71F0E72E7D83BBCC0A59DCEDA6399D
64A8F4865811A637838445D84D97204CA7A918DD476471A598D7536276C0F0D1
F0A88D8BCCA56409342C1FF678CFF90FC7B287C36CE682E1B200B54B2CCB12DB
D1DC9BB4E1CDE2B9B6BD4B80DC226E10FCF20A9E7878A16EDFF37FB874E4868B
A9F1C452EAA7126E81763A2DE2B502132046322BE26140F04FEB0E7167920679
FE8618E1AC5C03360AD3D8B5E913E1CF0C1BE9E446DFB050C3978165838278DD
23D17DFDC85DC7B168F173D0945D110976084CB27B6F8AB2D22410DB05BD345D
E4E38CC7EDCBAE36CCBAC590DA5C12D969D51B847A1460F4FAEE7D648818D26F
20FFE485D842C2088258F4F0B1FDCA46A7110645C25E3A31C4E6986C220985A5
DECCA30BAA3A4B5CE0152B8A9D68B1FD67F21050A87BDAE6B665036B9C73953A
11B16AA3285456220D09A03DCD8402C06A2BB18717B1AEA7594F748817176E12
87E685FE70E28C0382EAE8948A6E9FC2F46E2B70DAB208611DFD5A5D97D39CCA
8F9AD9A171DF53CAA6E3E5AE87257561BE15E3BB21779397A30AD4B22A1A1EBA
4B7235F59EEEC1FAB7294D521EC1E36723A4D7BA007DA4239C05F0E6DE546D5C
7A58CCD00F6AC96C20B7182CCCE3E5937D7A64F7CCD52A107BB8092D5F95A8A0
589B2DC542511DC89A0EEEF23E711C7444BDF95F64CF486F158CA162138A36DF
5400A5D03AE62A945373E95840F6D6C7BCCC4FE65382584A4DB36D23FBA6562E
1F3AFCDEF27AED61245EF880426B14B3DB5D9731039FB98F2F51094CD7D5EC78
1F8B03F07064CED40D139BD04C868B1E51A994731EDBA98E7D678A07F7AF6E56
92586848C58ABFEF378F5C1B4C3E20BA860BC7310B9AC48F2143B5495F9B3A35
85C9AD5AFEB23DF6376EE78BCCE054C8FAA925965E38EEA6F68CE1B5329D9DD4
DAB3F3342C6E6D9E0C70E63989DE8DD2D3C4C671233888ABF56C58F69D29A742
B5AF39EBF1092C2C4A906B872310DE0E83372B1C7F6E295D8DFFEFF960DC0F4D
83D7878BD8918B9BDFA17889D52AAF362B6162C07810672E23F66F8CF3BDBD6F
0E016C4FBC8CBAA796057A6B9BDE3233909694110279F81259A5E628FBDF6159
CA0CD6997EBD34C3038A02FA4B422A98AAF4297B998685D7080EAEBC22E27900
8B0178A75E5E52363A2E56507B3E44A6F9A9DD81886317A07B4823558D3690C9
8C722915FEFFED7F6CFF4E94DA744562835E29C97333CFE50D49A5EDB886F4D5
279DD9CD35C15656F9329CA06A0CE1BD5986784A910EC3DC7AB1A068C8ED4829
DDBC83091AAF21092234F614A6CA2C4A854B5049B5622BEBBA68AFC0AF9C6686
74555347CD055BB13B5CD7B5B6954A5794AFCFAF9AAA3682C7333564660E7C1A
8FB3DACF1ABACC3D68C26D07060C7D5B9AE9C9377A771C3BCD317F0ECE3CED11
C0438A29708D99A1F3C02E67AA1D7BB57AA7D8C64A2028349BDDD4BF6DB3139E
C1BB6D7D906699484EE2A5D83296BEE09644B62EB10658E06E4176C1E5E7BC4F
36F3454F2DE69F0C5B51FD5874F67287294399923B19A40CBCA4B580BCDA347A
9AFB7AE64C8E9070D5586086E6F42EDB8C0E9729649CDAF7C0337BE5E670DB9B
D5C038262B65603C1CB1BD00D4ECE2BDAE5B77A8A129DDD79DC7D080AA89B7D7
439A03568C2C826EF23C2ED7160B2F8F14C05F444E364DDE247748541CE7E265
1414B5A15E7152C6E9056B0CD43421D4AA5EBF1EC2CC70516F920F08B0CDC38C
DF480EEAF04D7F12638C9CF8DC4F827DB07256F4432345FCDA86CFCB637D04D8
931A81D2DC47674AB435738871A65422D3FD46DFAE9049F27DF0DE33A0E3207F
A6832153135BBE5A283CDFF46ABC74C78B3320EAB1E881E59E07C3134F3830B0
8216AAD3995D3F8F6CC988C73B2B7A5B79E81C6E8377FFBDAB29B4CB6317B118
84A437E14B0B213BE7ED610E9469405AB950965B2CFBD4CF0B3415BC9638771D
C2D8265D4FF0018FCD3851E645A82C179FB4995A337C0A854999E0D91EE8C98A
A9EB781A0DEAFAE1D666D2F5813BB2E79C232E5C96C686D414921DCF8EAD4C7D
06F79EF5078C77556346283940EAEE347B06F756A800FEB7656DC02597A674DB
6F8BAC8751BA046D7040B5BA0AC766522FF9657F71C7C89DC93E92000A00120F
301DE3ADB5D7D62B57E0824B9BBED388A5CF1B39B034AE2E44BE27CC0F5F0223
2A219166697692167403DC2083384A698551FBE48BEC89629820596FD569543E
75174901415C56DCBCA012694D671655AA84A8D8307B34066F1AC149C8B4BE3F
578F57A39B93DC454580C44B12D6D1BC653CCEACE809E5F3F7406B9F4A868D68
ED4C5C23D7B2497668D718621A94AF4938A16FDACFC6E3B216BB615324375050
24A7466E820435B11E93E91F673D609932BE884AA1CDB9D433A40D189A668498
A1B708DA358F56A1F2CE297C61D9AC19ABF79539914749E5DEE0FD0DC998F4D8
1A4CD93D0A06E68CC764308BCE69D4D53FB2F0AB742D7E9618321EE87EB1DEBF
14561A916C8D58B9C6AFE80D586F5FCAC3C6489038178E77B515108E48C7AF9A
AC9C3F93598A28CD03864C6A65659E8E6C782F50ECFBE2C27678ABF0978877FF
C685386DF9D9D8F51EB5AA618D2B3F63FC6A0D6107469DA479D540447D785235
2FBD6C4054C30D02DF3D2732031297F53AFC937F6CEEE01B2EF34D59FD0EBD21
854C5CAD32C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E7627355D
5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B5109EE341F55C551DA50
31E2EC3BCB7A79CA3F737D3CC23200160C76E29B9A5740BCFA0355AFE7930076
1F621C801268E18B83A108068B8DB4ACF7079069AD73E37ACB779490900CB770
326BA14A6CB1E7FF537AB11F432809968CC441F418AD1A36075D948D487C55B3
C6FC12080681BC9685764E9348B28A29E6FA025EBE0C175AAA6CD60CE6E2417D
FAE5E146264FDFFE499FF7B6F04466BF3406D2AF6DE542862EB51614000D9B0F
0C630C2955964D0D808C8C65211DA05FF14547308FADEAD9A907B1944DBCAAE4
DAE093FAF4AE1AC91793F025C0F0C1E74DE7817154052436A369CF7F52E05841
5778334C75C7ADDF2B7C1D996C18E65366EC4F8F085AF9DE24D54FF213C73716
0C383C2741EC725E1FD07F83ED9BED3CEBA6BBF54C5CAC897D17E19F62A11AA9
B3D13D0649DE56955AF9924057555D8DD002A3E510703A9742F8C5D2AF2F1B19
F52F38F6EC4AB6CB0234AF158FB8F0089FE5FA699473609E4DFC2A90705A8512
5861B1347D37480ECEA70DF671DBE8696C5957818BA618D1AC24C441B47F0352
E7F937E5902B0FC5270C5F787FCE8ABF7119F741B36E5F9B70B1DD2CBC5FA90D
F3B40316B2097211A07DE9CF2DC319BAFF663638F729648AF7AFD39B5C9CC5BA
49A6FEA0CF977DBB7D1B2CDEF5CB6F745DE93CB22D86E47337CD0C6E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/UniqueID 5000788 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E948890C25563CB26A068ABABD94F3D42213218F2ACBB2F5B317311474B222
BE1844548554B37C97284940D5B7AF9E4CBD884D4994A76CC1ABF8E6AB0676A4
0A8130F05B0ABAC088FE4F9FB536924A55451C8772B29087B8E5E649DA3B449B
4A055214DF69D0218549440B3665E4D20C5A8660B3E0C3ABBA3426E7820E1A94
5D273A6ACB263765D340333B5CD8D1282FD5B0F5BD4D40DA12A5CF44075F33F9
BCC0B4C20EADE30D0ABB3562C00540200F10840375F983A6164552AE036D3093
A5356EDCF93C32DA144B43073308EBC75FCF69553358597EBA96149759D262DF
CD5671D9666C708D60B7AF987EEBB36F9EF27997C256BBEA31710649E75089FF
284FE9441A327129E5F6E9364CBB2CA20F417FCD6682C95A0A69C760A1C7C80B
9FECACB06D839936A5C38FF717026025787349524C635FD7B729B457251C7129
689AABC24AE22C90AA37B13791AB7AAFF29D6DBC991842EA880FCCEB0BB04266
44308F00754CC0CBA9CC0A97E74FE428BC04B2A7A92847B0D1CD9FB54DC33514
F4C499697AB9EEEE6AF1AE86A443C8678D7B97D26AF3345016DB96B378D70C76
171BF4C398670CACDE8725D9E0110842B6514DF91A51B54006A327D5C8EF3B8D
9CB65D21F3AABB8C0875D3274A09BB492CBD3103EA18C598A758D1859CB780AF
10E80B3F16E6DE90992BD7AED054E12407CCE01C4E738C4A70B48545C4AE0CE7
38CE458533BB509DA48925CA08904DA3B781A278B512E16241DDC32705E4042E
C8F1E4C5DA658892E92B60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.0: CMMI5 003.002
%%Title: CMMI5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI5 known{/CMMI5 findfont dup/UniqueID known{dup
/UniqueID get 5087380 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI5 def
/FontBBox {37 -250 1349 750 }readonly def
/UniqueID 5087380 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI5.) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /gamma put
dup 104 /h put
dup 105 /i put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB9CDB3B91E19AA95
B6070999687CD39CE05B0501BC0F19F4FCE5E19BCAB1989C541A47F00C4947E1
FD7D566D95445A20A22834570ECFD7F17970BBB274C172956BD6458D36A306AA
51AA40FA84AB99AB3D1C47256A2DC605467A7F2C77963B2D31C2CD1971FF9627
23D5B9CE163D84AD3071314F555A564CC82CFB80B05E31708542DAC587837E6A
8708B83AA4527ED523623419123FB743F544A691FF62C172E6FC42F1EA9D96F2
023DE87858FDA38BF3FD9E2AAC5F05FEBD28A5DE1E97FB1B03F6D7BCF64ACBD5
20083E062A50A1B86CD28E5DA789361A19511275636562527DA0CB8A62C0CF8D
8A46EA3505E7C597428C86B3B05FFFCDA0492897AC6C6F689ECDF468F49463DC
F193DE83E34D73E48D23ED37CC1BAC6D1CF6BFF1C6A0165B21B844326B418575
18E1D044C1864B27AF65AB4A031C767FB91D2CFAA1729386A7C1621D859572FC
B604B35455D870D5A757DB7BF44D9D079F4F70FC669A96A0A1080F3297B6353C
6161E0E815C054EB6709752A8C104D177FDB4962B988270E9538E944E2FF6717
6389DBFE95B71E95EC57335EEF4F3E8E7B041690F54039D546937028BD0E8740
A9F8719E08AD387878420EBF7D8D1807B6A594E98E27BE8C6314BACE9CEC94C7
D57CB34AA7DFD06477D62C981D9D686255817A22E3F49DDD47B28FE7CEBCDA0B
30515EE8EC56542A3E3E68B990E5BE8FD65B953A0EEE2B066FEA586C75E4978F
0A0357C0C37397AA22B9EC8D9081B44C71CDE7991903DD5E071B87D081A57064
A143042086EEBF8640F36E61D8A0052C726C25F1B3CCCC6A58868E00C30D5CD2
034835FBF999CCCCE1CA0ADCE3A4EE4A36475FF6D00E1D7A8ED65CB0213FCC76
AB7DA81B9A97FEF3A51754A48C76E80198A2475DB6047623FCBF2CDC827229A5
C1DD7E79197C29CFF591EAE9547A1B21D381FA04D80E87F41C9A00A71B5424CC
D7550DFE38CC7BF2B11B810FF09DDC48046BEAF8EDE7CBF8847DA0BD5FAC93DE
09EA6AE97B193E9A31F1174C337C72F4CE28CD59ACDE969712C57701EF3C48E1
38C650DA766470DBA252DD9FA657F7738D31A864E26A89C0618EB611B36B321D
C48CD0F10C4157E210657C6CEA4BE0DA047F414C16F18B8A49E4E783164A83F5
E59040752152EC549ABC2F840ED955F90188E8F91E4F4533CB5F42478029B90D
76A996EB3D99BDF9E1B3019AFC030536449C04275DD78343702CC302461DDAE0
9CE2AAB36414A34066ED793CA7313767AA897AFFF6676E1AD5D4E3CB3C3A66B8
C5E91C170C41B7233D544D8EC3FB6E7E6EBF4E1CFBE49E3F00732256EB2495AA
9D206A20E902CFC57ECA3CD1DF324C834C75DE927C473650E4FFB299509557C5
9313ED07F343B6B4FD9F3DBDA9B3242756575AF54DEAA7C6DB9F1B9E1128989B
312A505411EE636BEBE0823610CFCC7D347185E09CC8A1A78CAF7F20C9668C91
0DAC60D889D17BFF3B7AD694F587ADCBD4E48F36DFA34FE98CB2E8A17929A683
0B66E005FAC311AAFA9814DC9CB2DE3059E0966106CFDDB18035EB255906F843
C8473B5E66E8FB4582FB72BDA4F4EE7A8F3A178F02EF1264C0692D7CBA2B1906
DC27331F86B6D88D3233FD74CA88D7041B4A2025A7024F467B64222ACAA24DBE
112C83886821994044EE5800F1F81F7F58ACEB07D15E22D38EBEA6F5C4F7896C
BA2EC301F8FD150832966A0C46EB35ED3EFD0192351AFD1FB9C394454BB1FB79
2BB86FFF5B846F412C1D28C560C00B1FE876684EC864EA6F88E7B095CBAB2B26
29EB6928961BC58633B7D5A5746996C3DAA6FCBBD2D42D59C1273B786511AF00
B60B0E04C7365E4AAC4AC20288ABDBF0A704B6F7CA2D9FC65CE4AF36A5CC463F
F97844B79F772F1E0C6F4A6DCD7AAEEF16A4ED9CAB55E692586C5C9DE8701A3B
111D15F99AD44A3F375E7C4A531020E9AD5CD77212BAF0F9516B7E865F5F5042
50524EE6502209FA562C94AEA4555F868C9FF68368EC6C2E52253E0C882132CD
DDBB83AF15DF29B2DCF516A004DB97AA9487EC2CB1B772E8C84DB1B82841CE64
D4D10FDAB7E162E079FCBB9D4670AB4D2F9128E48183A3884EB8C74DEF7F0E70
A587A300CE834A739244A237936A78D31617E4F8D298EEF7A783BC573BF464E2
9FD1F0592DBA4400AC25327DEC2F28F8EE0CBD17F012E9E15FFA98CF1F1F9265
C2E4B8F3ACEC102196B4F9F973D747979E38DA36558D6CEFF3538CA7E1427352
CFCFA0DDE3C02A42FA39CEA5DEEEC5F3F7FE7C1B1AD98D51446772195F08FBBC
D8CF46DFAF7D78A43B70F9B660406BC43FBD32374C022C3A58CB24CC43ADBD80
4E7AD6C418FE43DE31176B9128496C331085DBF6FA883042168C0FAFAA9DC403
7ABBACC2B18922C4458B49FCF241C0399E969937A2779184DEC8AD5AC3266E40
3E81D9B9AC5A06F9DE81785668B2CCB9BAA20F89120C9EB9A5F4CDADE6F67C61
C5E89C6014F4772FC208723146587687F8E14F4E63F2FC952D2F9143275F168D
B51AE0A66333D957C9D5D7253A2362C30A0219219BCBC770D9FCBAF0F7F45FBF
E85CAFD899BBC1EDDC416ACD9A7F83711BDEE28A683900E672453F4527F44816
1F284A4C488DE221333EC9249D1C70C3FA41F37924B813A3C54BE3206349D955
8FBC6AA9115F9061C9674958D40EA2426CBCA704E0AB35190F473C72086A2B2E
DCD7E6C1CA9BD9D7C0C2879E414EA6C61923A60FDDB53957680DD30951CD3B0A
6B743B1E7952601F61D4413C3A7BDA4CC1C65DA9D453704A1333512560B2EF09
C2D6D34B5AD4AFECB4A07A7DE5122ECEAF0CACFCF48E78F440071570E3F171D9
96E2C6169DDC77A3B9A61D5188428B035F8128BA909C26B448B6C95FEB52707F
AE0687C3987F75F1BF90A7F61D0C492C49457B59271BCE48F3FEE78E12D3271A
F5A91389DF2ED566990BEA84AB699B3651B2E81975620CEB607E2882F7D29ED3
A4279439107AF9AEBEE47CE85DE5CE9595A96A118ACF1EB1E935E2251E0E7F1E
D675E5D89D501C9CC98EB274B6B00B718D3EC50EFA7E170F2DEA2A2D2C8B5760
E85A1AD504660A93140BBAC19A48B456B3FA48E05776CE9DC05426520692922C
4AE3FBFBBBA2C4EA2B92663E8D316B9D5E733E0F2FA092F24AFC98B5D69063E9
8AC28D6EF97D3674C04176197050E49709D7558F7A32843A2278160DFAF9CEA3
9A0A8907B19379083365EF866E2272A9ED2B662614C57F81DDB145E9D460A572
C573296761CF028B0CC562B5C73B1933F0F78935DB0771D1780C698A874290CF
4F3D2D0C000B9A4077156A0B15F6FA23CF70586D3E341796ED8BD13BE5CE69DA
D169579BE16C6BB5D74224F380490855229FA64A762AC6BBD0D06ECC13E57E56
FCE574D51744431CBC8A369698B3F9BE35B7C1BFC59FCF08C04E3554703230F1
2ED2DC4459A256FCA63A759407CFC0B4D8950852BD11D9D631DD0B1EA09178EC
B5C85FE885F3E048355859AE345B73EA0C9FF89DDC31A7839C86CE36FB7C9C65
33257339FE7DE8F9826AAD599B41B8AF40F47BEA4399B65B7E114FAF14B9347E
4627B501AE9905A4EF4483551D8D5B5F291CCC25506E38A5DA92E127FECFAFBB
F6BE02A63DC1B5090A11CE8700402A53B9DB788ABD4910DCB8F1D0C9FAD68668
0045C5EF2F0F5205F4A4CC2DCF43479DF053E2DCBAD3AD3EE779129E7CF4DE95
34D03F05FBC72CC02C5E1BF394AC39530D93C70739799B7E2FC84D99EF7E636B
900185158DA3427B30E7EBA29CE9657D3103060934EB58A514F6CC06CA0EF378
2447416AD37A066B63F2BBD53B06BAC2C915AD28CAD86AB1725BDCBC12D0368B
0F0DB1885ADA0B4214F59DFD86F15210763091E3E5E7925A39F7C58DEA801563
198D8146DCEEB18EDE7EFEBC5610208CDF7D42B23E15AA911BDE63C0EBB78D9A
DA13B882064E1861DA9B4688A242559ABB1BA404A516A4C7357D18E4C7AC7D41
878E2D8682B032DCAC20FC72BC0D18F9783E9094F59D3A35A977CAE583B5E517
4E8A8C991E5311533BFD4FD0B9B7DC8F129705509D194DA9F18135E7B87DDADD
D06929F6D65C8AB18895447C4E542CAC2FA8DA064681418E49807CE61DB77720
4D7538917F5D113CFABEB51A0E633DA5ADE4D3A09462D2E4C11125A31C3ABCB8
D2905C09E4E91D11B92F405696A4F1996282F44F34A19748121C0E86C3DB2CF9
30073205E35702C191BCC6005822AFAE9EB440CC7739C51D391807AA5FC768E3
928AE0860D52535397395FC31BAD93D8887146E6BAC26891DF852FC5E277C3CC
45A9784386BE5A1926AF84E7F3BF380A5ADF32D73CA695FF1B78215F2D2349D2
B1C3AEB04DB8B11A611682E7F4FEDF08716A801D84D47FCBB5FD4E9AF027635A
74E8C12F7AC159840DD60728DF43615BBCDF8EF80B1D761D34ACCD561F5AA2B3
15BC21A4856032E4F9005F93F7FB3CA7613C32E67D74796C5C819457378FD94B
89E45341CC2B774F16C035079A741B0D2D54B43FDCF69DBC30DE45BB3695AEB9
CDA1C7EDEDBDEAE0079C5FF03BC855E5F5235CDD99A915CFC78373A4604E8E66
3426FE7AD92B8FA0FB0CFCD773434B5C624CF3DA9F77315F0C58D42CE9180BB5
2D2B7DA554300CD38C592CE35966B1EA45638CF064AAB4CCDB2CF3ACE7A816B8
360F2F5D7EF9A36DFF363B87541744CF36ACA31F9B17872C96B8214740C7C0F0
0E251B4B3306C443487F71ED324B4896231B91F909CF28AEB3409DE1094E6483
E851326B4CE4E56DF03A929913926A8D4C52C7DF7A6F7EA62BD9343AAABE9BA5
403678ADBD2C125B5DAA08EC695F6448373355FF5B91A4FF16596A5D172BB3FF
7CF9AF0B6A744A2451C7399E969E6E5A9784B9195A497B43304111165973EE28
3EDA3949E5D891E1EA363F8A8EF4ACDC82CD14BB931480409A5EBEED54CF8284
55FD70C98822BD9A31523A3C6A6F26B0216C07B6D63D3CFFAD15A1B83BE55D9B
4008654433D80F11754E4B4B09FB22569164A8DE5669629E07ED1ECBFE365287
690C6F21274ED9DE2156D06AEA66A323450B29E4AA42CCC9C9261DD499FD33E4
A974570C690D2C0A1367A7487D57427C01203D2939E89A1F18A4ADE84313A2DA
B12EE671E3B42F44F6B32E12F4F2E51479FA3420A3A13087D9BA76BB1756AFBE
C4654792600D79BF52A32EC8E02587753351AE7F192D08B7EA9314FE4CEA31BD
8646E59F96765073ED1E3788C8DC7C0AA2892CA25E5641B338F5F207D37B2757
C7FE8E52649C38062566E420F8F0A6B83043F758DE906CF91413718028C9675F
5E0F7D09633361EE152116C675BC3A90D807D3A19B848DD34BE3BEF950287C7F
021E231262ED6A134208AE2FCB90B7436614D8BD33226D8D519F8F3F494ACBCE
32527307BA114CF02BC765387DF54BC1E231CE3F51D09F7A9178FE80A62D8371
533508ACF5C454CC72400B444D177A36B9A096489CA2761F1CF1F7C788A9F7BD
334A5C24AE6A648EDC740E36B28D6752EEDB64ACAD640CDD66CB98448C7CE7B9
8EA7CEF9E2A80EB270A22ECE1EAD0FA85EF5E0C83AF23F0B4E4669AB41A6B427
3928CA4421E216A4346FDCAE5D1349809C97D059A2CB6BEBED01CE0BA1754863
100D49634FB84A06CEE283104046A90396245601756BC39A63460C2660F54589
5A690DDE53BFEEEB398355E0FCBCFE9CFC664195CFE5BC9C4905700FB9FECB7C
6E644861E81E0C0581130D253D861801958F04A543EF20C99B52E246139B8D7F
B7C78E1E658701FFDAE6ACD2A7E79FD434B1CE834DC7F98D16048A2964EBCEF4
BDACEA4E6FB6EAB3A270FDA758BE633995D1A39EE148ADF8A169173F877089E9
1A560D068ED72051FE7FE1D6C3BAC81EF265950598475B84AF1486CFC55D5903
3BE1479996B48A6E9ED904C66700DF63029ECD9BF1794BA67A7C0A005B00DF52
8A6A0374F4E65CEBC1CFDDFCE3EE53B57D78203D72A0FD5F9699277126B4A5E0
70B9CF50FB9A46D0685B563CDAA61EE9903F0079B22ECC56F0BDA3F1930FC6E4
637DF29BA68C83DE60EC2AAADF31CB46F337126706EEFFA0E8DDC29E5488C2C3
E89CE98157CF908EB04C55ADC7FE853E152E0D963915F5104834A9F73E0EFFF0
BA20972EDA0F691CBFFF3B0D379B0FC55B77E4891B7B8372F5F79662E610AC3A
7A02E99A18D5E87E519C45CB8CA3AFB38A74AC99214C1A182437C15F57963CA1
60709AE4D7A9527518FC6EB1ACB5220932C53F8C1A0DEA53B1716A105922A90F
10E116FDEBCB7491DA52872EA22B8280595120AF86B49759E5D61FF3B39D310A
68685F464915FD4B9A19F7F797BE424748C94F4636B2AA06C07C4A4CBC634CF3
04E5B400E7E4F0419B112DDFAA0C4758560F83D80A525C09B67B5906D65FAF7F
6E5D42E5D0AA0EAB4C189E34CD1AF532F27AFF45FB1B954B3DCBCF75EE60A9F5
018F023784C394FFB581FBCFF4DAD820EC8C64F08360B26A89657FD7F50AFDEE
FE8179573A3CF350FB4D216AD4BBF496AD7A9191941040560854A5A22F2DD997
0B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B88271093BDE64DDA024D67F098D
6C1998506DDFF7907AF00E4A13A0E7C93046411CF6B38DB4AC2A8A0B67A027E7
96725D60A0A50B983A1541C18EC1999A99D7AEE5688407D62BAD5B13725AD3CD
0243D3EF4FDD9E409795D8022D4063BA844909C67ACF82AA9CED304D5F84A9BD
1EA3C7F5D2A7BF70766158BFA2BF63B3078593F3EEEDD0B6083B6858AB0E3925
8588CCB7BBA9438DBD430AD29F127063AF4B9F05EE48507ED3CA9D232187D3F3
ECF6B44F723CA243C91BFA6CBAC2D055A7DE56C0038114145FAA7D6D35070A07
5B65B916EBDF3A8A76849653DFAE3CAF9561D85CCEC1974DCDECC6592040CC64
5745DFBA8D9BADBD4EE85AE9662F32185133FF9A7E44D66410BDE8B1BB1873F5
DEC1D8341D039537358F7EC07365A462A58013C7072979A427CDC52AFFFCE7E5
4D922702976973206C0EE5806C33706C59C7361AD626D6CE7D73B3F566F01F27
AA275388FCE7FD284B031E6E262C2511B3FB2D6B93E53332C2ECF4BF165C03C3
1E16D2FD363B562B17AF600E4EFFAE42CACA979C6CBD4B624732090878288562
D28DA255FF658D7B2BF12E71C704E590188B62B57234540987FAAA373A4E6266
1D72C99948D78EE0BA5F56079E2B75EF5612495DB6ECBE036E13DCC1B79D14C9
5F085D1CBCF29D52C7CCB0AAE0CBC720E909CF719DE6804AB3A2164CC5D2621F
DED2AD5EDC14F9CCECA26EFB9D9803197435588CB476680F7FAE7B8634DB18F3
061C5289F14D2E2136783C42F2AB2ED12973BC60AFBA29150C76C118E72CB788
E61E561574114577F8D14ABC37C23445297753EB71A3C330F984885006154BA3
E1A07EAA256B8E5F5EB5139762EB0F4A641B648B0D781DB48A55B5D15489BAE4
7835562F4B0158AA1C2FD39A76A40238DAC16668DEC357DA709888966E72E933
1F68EA16A3221BE420EBD5CD48F491BEAEFC0E9A77A1670363452518416CB3FF
BAD590D0A3E461EAD5BEBE6EE7B2A42697CFFEB22C6BF46BBD3EA9155A30AA89
7FD1F319335E45B9E6977E4D6AE67993F7BD617356C8476B612AC5F8103603CE
A940D6978F7FB59FF1123D8C3C49A4D94B1EBA8D4CFE205EB0352BD1CB601CDC
9581B8ED3B44B090C731EBB86157498AC7037239F9FFA8261CA99CBF3D382D49
F0117EBF3D9A4DEFC8E6FF39C3F4022F8E1AE5C8B8A9DDBC74642AB0267EBB3B
DACC6B7C00AB6BC3EFF9588CAAD1E91DE71B0B7CC7787D549409481AC250F039
9CCEB878D275E2E346171058EC303E62B84EA810FCEBB2916BE110C37AE06BE7
70561CD930E8AE76E353293F9F839797A135916197A48D453611484DA293AAA3
39402546DB208EFC3CE2DA145B6B40DA1DF5E911DD91EC9F234AE3452CEB3D20
4B6D79703CA2EA91AC3B5951B557D62C7728D6E3F13BE05939C2A6F9F170560C
0AB39BFD238A0859BA570499CAAA419F561C1C0BCB99679553C2535B4FDDE702
D31E2527083154CA648611692A2D022AA1E2C6D5FA580B6E77C2EEB26C6A643E
7C1D168DF865B4775BE5F71D4603C1BAB86B4BBE77B855707A6B4A6C3D5C74C5
2D718A2D86B0C9E91D82C2AEB7166DDE523F70B48D37C52368A01241FCE8B63A
EDEEC917A3C5481118EBD4082FF15FD4D2BE60F57D29418B6B3C5F03D5EA9470
34BF163C67D62FE7359ED7D6632610F0C415EF01B721C7EA2AA27E04BC1184F7
D29B33736C033F3AB2351BAD214D3153A8B56AC1F060222DD0D1599235993179
C9E51D5A3BE628F499A322BDFDA607197ECE2D245D29A9A07BCCF9CCE57375B1
3A60F64FF5DB6B0CD1DCAA984E9FD604067F2C8C9312CD558BF47B16E93639FB
A02B7E33C027A641CDC3888E1FEAD08B37C941A264D0EFE651042E65769CABE5
18DF0EBBE1BC4709BBA63EFBB1A6C77693542DBF102635D239FB2EBBF89D893C
2CC0F30F25F1F7830B71885CC7F423DFC43147FED87A50E655AFA08CBA37D03F
A26E91465C33D894CD48212590E9147158CD1D4960130EDA8DE72D953286A517
B34F61AD8C65D5E6B6AA2CA91556F9DAC877E5875DE78EDADDB801128715F00A
8CED77E52C67CF059C718DC437B2879094B5BEAC70FAD6A9D155CCEAC8B22896
7FCB61331146E59D67B8A7D6AFB41A56BDF07E257EAE3728D18D3A50586904FE
86F905B2C0BFA6A0598433A274527C8D7D4EB20565DBE313547D9A82E3F8BC47
BBB67B4B1DF2175002D9613E0F77FCC401EE0AA499FBBE8F789D6CD43F9E74EB
CBCE69AA28E0A8AB581C12FEF54B0F927465A0A4D58491B6E3492CE7764549D9
B633C94A0A6715309F2A80D9F0AD10CEECE448EB4FAD77C9786DDF6F504F14DD
921D8EC83097AAD0975A6BDC3890919340729C54079C7BB2D717D87375B7C276
C1834145F08CC2D0BFECC94889DBA6D42C6F9176340AF6575B0B1A199B75BB78
C33E6F5121E80D56884F311A6EB39A5A8E6092D7E9EFF2AEE23C8385F085EC54
48C680082DE7167DF3AE7B6F6BDA9E822CB4350FD8A549D649F913488BE5C26D
D8E15ABE5A937665F1C0F24A673FEEE4D8F2B5BFC81F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX7
%!PS-AdobeFont-1.0: CMBX7 003.002
%%Title: CMBX7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX7 known{/CMBX7 findfont dup/UniqueID known{dup
/UniqueID get 5000765 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX7 def
/FontBBox {-55 -250 1289 751 }readonly def
/UniqueID 5000765 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX7.) readonly def
/FullName (CMBX7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D436DBDD5E3DA259BF
5063CC6156E2C2A4E1D07FBFC23D148DDA0199AA319E8BE46D2D7247A74E3477
82008F1A3AF6EBEB9516970E4048276BA75EC1E829945A7BB4F1AFE8CFEF2158
674DDBEC84C9E0597B166C1B53AB7B62BC74E3DC25ACBE3C29ED5D6A2BA1B8AD
90764BDE2872EDECCA6D05F7DCF5FF313DDDE00BD818F647EC5C31EF7F7E63D3
2C73A2B195AD4856572A42E6974EFE602B4F3D31A419C8E7E8A558D60E1A1713
F37870B9342BE57CFA1AB37F9B185DBA1EB353BC3CB43502D1E1B7F2B7E846A6
5A61A30966F86310FC64EB247F157DD6C4F2E31659A3434EB58B01ED8EA895E0
951AF5AE7B31A57D309BCF180A89553B1F283CDFC41791587C6E44BB8B50D5BE
1DFAFAF1559AE26B2F0DD78CF503F63F711A4ED79A1511CCCF07A61330CA999C
3C5B7782E767EF7E0086B436CBE0C57ACC81AD29D8F05A937FFBA72CA6C3C0D5
E8A44BCB9CD6E63DC2CAE425DA719E8AB1C2A2D81A324654E96F4D76CF1ABBB0
147C5F56C3AEFA0353EC7853604F6DEB71D7FA5803FE61C0315797CA0357ECFB
91B02A84499F9209CE5989021F4D27B2B20D4793F6C81591CFECBCC22005F89B
CD1A089C36E659BF3BB92558E769314FCC68398AADFD2A38BC09E26E63BB4F3B
61C9CA955E70F4BC3D4DAB6837B48AEB5ACA064B681E478711620AC237214EA3
426994109C42EE1854A84CFD5EE4CA590E8B9C40478F84A19F8F5AC3A75F916B
9997A071F6F75236CCEBC01F8744E8D294B574AF710C26EF4062FF2D2FFA8F4E
3684C403E4D9986D1216542D0969FAE0DF1BBC8B1F666C93E2CB175DDED77EA9
1141B726915C25CBED68EDAB7158844A1AEB62734BC085D705DECF3F909C77E2
66FF93CDB538BE4A2C3A1640067A4E79DD89198E1EAB85977449E60B6A34B551
B2A7B75E2D5C3A2B7E9A93166FE9BDE0DC80488983F4DD432A4BE12F77BECD6C
88EF63012552EB8BCFA44CD4A1F4907EA36FEAE3DDFB06973CBF633AD9D22957
1E11F00B5E267F8F64661B935CF35E515682CA911C1B6C18317277ACBA335FC2
4C3E26AC62D547755D49AEDE8F2FF924947364E93BB7550D5216AA57E6466095
80ED8612F31208FDC4255D5A2832ADCD986C2C6544E878775FE1276AC6D57B81
DE28BB1D7930C729C1F3DA4F972D3A9E6405570E4E832E1DA4435F3689BD44B1
C4DEF95F19A3A0FC8B0FAD70E3BE368786043C04915DAADDF2863955575BF75F
F087C4CE3922099FC716556C705FB16BA28A9F3818A54143AD5996FB624ADAD8
AB688DFE5F71FC7BEBDBCD15CDBCFC13D1C5E3B8C74A1F4D9C11C9F08FFEB259
1B755FC4C50C28354A8699F74FDAF0BC622B6A0334B6A36E15AECC2517398C47
F94137CF043414300A797E722A03CC2A47FA2D4AB88B870E7429DC7535A9C8CB
3C88FF3ACC8F8A909ACE3574800E5029E9895EF44242B7690DD231E88A03EAB6
23CBEAE5C7473EF61E638FAC3FAF61F88E1BC25A100056CF282C8DC315F83207
F6085B92DDFBD8921784044B5305FDD91EB8DE1E5A555E6F05FEC65487BCDF1E
80BE21F43C3619D66164B82C698918B6FD807885CDB45E3D87E9FF9CABC08AF0
335E667BAC4A62B7C104DF625891533637D5CB93D8B97A9D78C40E257B49CAB7
E7E38BC9A7B21893F96AB10B053402A2CCD1903812F3BF9689C2D5A8C6A4CE8C
9EBB762EB7C7CDD76B8C85F6D4203B086D74F0306537248CBC71BF3C06888180
5ED19BA5F433FF6B862DC96EF23FA1FA880907F92B15B3DC9586C21B006A2CDD
080494AC14E9DF9C3EA5EC5AD5F23864D39B83069DF5AC7FE1FC522FDF88B3A4
B62B4A8E6F97A4627F8CB3966E87D33346FF567A32868DBA129650FB29D0CB99
CB2146440C12635F7FDD2CECF373EA6DF1D0135AE0C95A76CD17B80E5A1BBF10
10ECB9826B6E3533F961B1365E6B380223D0DFD3A9E1026EBFF8B60F10BD7B30
6ABCA33C0420FD910AD8ECE3AE60F771B65DD2EE0571CE54AE96CACF3F737497
7EB4762C5ADD08C8BB20FAAAAB325F1F9BEFBAAF7546DEAEB12C1CB931EA38AD
7AB938A1B39196835447A7278AA3ED696A9DC642869F6EF6536D754DFE1432E6
A6332292975A81B4FDF5BAAD895D06C2FE120B9EC9F39B42C0DDE3D1F1026F6E
694338884718FC33BA07EACCE71515FE4FC8F2758F8FE40327F0F48CFC3ED47F
D9CEEF14CEB946C7160A5105E3C4A48AA7950ACA1CF74DE90F9A3186E0ED717F
3CF64CC744D3D4E84A26C23FA022A79A0D83D65A6D7EC11EEE915D020DB32CA9
8C411414AD846E37244B1A8AC0F0075D87464EBFE7F0F2DFDED9EC1C2D7EE984
7D698CE43875F5BEAC2A8098DCC22BB0F39CC9EECF3DA61DDA5DF5380AC025FF
25EDD31FE9E411127C44A07AB23E3649D2C20C6A0F46C4D2085723106E1542B8
E06303835FA1C87C8E6205341D3E3E67121E77D3D5087874DC72047A99F971D8
67F25B1F8C204AE489F264C60120BD3CA53472806776C6DA50C7E22A92ED2C5C
65576FA300A7F093732E46AA63B0366C04238A89E222F67B4840533D7A48400F
EF5A383F7EDE6F38CAEA0C2CD3D5EA038AF0CB05006B0A3449B83E310C8A19B9
7B06732FBA67AA72882EA80FDB20EFE2B566B5F2046DEE5AB92A2B834ADF3C93
E3BAF6D944BB2342DE57745C6D0082801926526D416A325F956FC37362935746
A66857352FF1ADCDFF7AE265116822DDE4FDB1F4BBA4DCFE499202446105E4C5
95B6F26C3F93F65F0A5E7636D798DA7476D4417CB56D7F70F3AB2776AD672445
3204C0391B8CFB40542310650E22AD6B6F4F2BE27FF4AB10FF3D38B4C2DDEE7B
42FEAAB6F91F21FEF35B54D0D131A9E1F6AA5A9D72E8819ABA5467C33B876397
E816FB952B7D674BE398437B147A7EB801C178695FFE658B203D51B1F35CE144
A31F9100E11835CBD8095AF8A71FE4CB829F474377DE8AAA5CB483A8AE341C6C
85631492F67AA423418552B14220DC11A574C60E32ADF96ACC64B0A8029B3611
3F01B3078431C63AF806F90C3D60ECE9F27D22E9A1474054A561B515DEAF0790
908EF8664BEACF69097D93DAD19BF3F13A8364E0D511238E413521DFC02A05BC
52864AAAB0A4FAE9378DBB482CF3A5886BA635BAEB00551EB095B47D6A924D14
F4E51ED1E98078E30F83852EFF4D5061DB5A8C727486473C8BFFE8B03700D098
F5249F22EC63772F5B283F837249378D569D537B3A1CD3325DB8F09D9C8FC30E
A52ED42724617443F49F4AC9BDA9CDF47D34EE29037C5F70E0E689C686672869
41EA89BAA613D5470C7A25C07C489956D4F4C03DA33758B33100CB08770D6EC3
052EE52240A08107737F9ECBEC53AFD5EBA7B493D6EB61796AD765DBA79F807E
FCE53F29333CFFEE991698F3D56E2F0EA8C5DF6A649DA42C431AAFB88B959077
F3F4C7C9E9052146A52EB2CC1C1D74AA2E8A7E7E82F1DC16A2E9C6789519A64D
958919A92FB5CC51688E115CFEC3B74C877E52315AFB5B413D76801E9F1947D4
A425A95682AED5BFF249530EF3ED4002CD143C66FF89EAB658368C20C54E6DAA
E9648F60B61E5493900304DE22F53C19366ED95583068F425E030300A4E7F89F
9444155DF1F1B6A67B4532C9ED9B0A0B8DFE0716D005A13A8FD7E4C017B16D4A
41946238D41BB88E3438803D483C3AD84E3D8B745612E9D103C9DCFBE7523E55
931579444ABE23F24232FEE409CFA77394D0EF74980FDABBFA28BEC8579AB691
4C562E28AEA4FB2ACB4D6C7971E1255307C22B4186D29CD488800A840A462E4F
58051C162909FBBD16CBB7BDEC559DAFCF7B92AE26BB392E5C1A2D299B29D32E
34C915B4CDCC0EA767CE1AB3B8D7D6A73FEDC47BA1F316B1BA62D433A7013985
8D2BF6178CEF1B6DE89464246753D8DE5F1C7A7D56844FF5201D6FFD604F6023
59E032A8151F49E52544DB9DB472EAB10A629FF3D76781F0C101B815B7E87ED4
25C2C31F80A0C48E0210CA9DB261809702EA781955CD13BBB7914D3BE71E0C8A
95F8DA3724972A0C1F3C6372253ADD295BDA8F8230D4D94FECE4E93185E88D01
6CD6A74C23E04267DD0CEC1D4052176AF0C95761F854B90BC1D4CE1FAB88599A
FBE6658134C77CAC023076F43DE5330431A22F4A34787BD2E60AB4309F238BE7
32E1958E3EABF58F54D5D58814B68D81D5B309B7473BC6A7B0FC00B245B0D78F
7E1EA74A91A737094A9996F76CF9C309E6A3FEE8CF6A94F3E436DCB50ACBB48D
ABC08507251213BDA9AD93B1D48950416069DE9032BA1DBDD83391F92C041B42
DB24EF5D2130D301E07E62E793BE170377AFF7CF65381925A713D4C06B64A0D0
D187E630287B404B514901E44C104CC3520E413A95058D7C3860FF9F8F6FD8C7
BD419ABEA91904E0BBFB61AE6784B1E60508930689B8F096E06A919E1337FAB9
F56DB6BC3BB0CF674D226FC6DED6ACBAB0A2ED007384CD10BDB568BAD39AA1B3
ADAD4952935AD31FFE2467766B282361731F3ACB073E8F8E82415336D40767C3
E2B11190EF67DCBFCC928921B2708563EA48115CECA006703CD64600E564CA03
F8EAD42BF3F30C93B800BD395257A29CD84CCE5CD62CEFEBB3A06E03DB2C67FE
5ECB622D076F4AD406F97446E433F56A5B29E4B47949F946DDC61F933743E862
527BD7B9DF3A2AAECFD0C1ACBD3235B68DFDF82324A9C0A992004BA92403964B
2EB57EFE4667FAE876AD2388AF886335E5B4B3D16F5405E6750F5C62DD68A620
90915BFA64302F8B06A0BB25AA5CA490D0097208EA1CC75179071A1524546F19
F9E0CE1BB397614A5CA4F64400781E7B21A3FD21871CF3ABC04BF19A163785C9
A7985518DF3A4C7BE3955358A00D78A52D6B8D56F057C0A3E7E4DB3ADC77A834
3F060A3BFDC6D402762324D10EC1048D65DE85891459B2E439CC020CF6F03EC5
4DD6EEA54AB4CCCD0F49D71112A49212F4DA5D78853D9507942C1E7474F40DAF
94A1015851AACA3E027FD60634CD04B9E85B46AB9418053CFEB232FC8902FEA7
1D468751BF01DAB073410DF99E72CE4E3B9D38DE77582653DC81B52BF1A9DA0D
2CE3DB3AE828E4BEA767CE81A10443B76F5081EED71627B58984E2F0E6FDE6F8
89F66B9FC73259FABFB0E72623B3964EC0B7582AE85D2EDBA59F5E6F78AB4204
7A852863BAEB8449E2D91204F867160B13B6B58F03F182D4F25320B43C42E966
394C72945D8C9B9220797F23AD3F57DE1D490CCD12E96C3A2B82C3C670F3561D
A2A82EDFCED0B2581EAF82CC78B12D0DB6439235ABB83FAE0EEF5D8E3E16318D
2A9A8DC539D05CAAA101F5CD5D89B536D9518917B7ED99C42DC27DFDACA35094
027043AF20E96A87F5AB0DCE8B80036A88159943A4AB715E6BEDB2DC2E76C530
84510D3F5D62F8E23727FC2BFF4A9DB585E0BF64B106F196E2B04123AC9F69A7
1A6F701F43ECB5DF1DBFB6DF06F366E3B5216E565666BAC8A6885EB4401C9A87
781E69DE0C45CB999958FC084211A62A32ACE7EC0EF0F1EBD3556E9F2F8C30DB
7A718BA9FC4D3C695B8E1A6D8753C561D3232780704FC769CD70C2ACD394C3E1
505B9C9AFD9B9B3EACABD5C71C0BE34C5230708A8234A4A7D439083AC984493F
0F329BBF233FB506401078F28F26D4BA9D392393AA190889B971E674BEC2B608
C98DCEA193012C1A22E8AC11D7B62888E509CC93AA1C4BF44CEBE511212C3B5C
174610B75BAA75D00B73FE4987964D9E3437ED627C69F5B29F8AE809F7CD9369
0B2469ED90A23A85CFE47C45EA502D7686A7AE0307E9067C4982DB37F159A70D
4E9486AC607B27AB6794968165886146409AF33F5B3562B655B29AB506FE5FB6
E881BC149A25835C518F1DBD010C6DDA3659ECCA9526F0621567152211E52AF1
17505A2DAB2E2D7B84C6264BAA3BD7488640B649734ABBE72819807CE2E6A813
B0648D58E8526ABFCC7DDC7CB6D01562C4DE039129CD2B53E182C02EEFD33E7C
2EAC23D891F3035299B8FDC0BBF5E2FF053D6B32BA4762A8F65A435568DC8C2D
D26E1257BDD7358027E2329F992D4AF7DD7F140C2F0F7AB20A28D33346CC06D9
3C51BF48CF2427EF89C80087739A604E6B79CB8F6830FA078BB1BC7B05E39176
C68EADF951C9BBD0CFDEC807FB8A3323181AF9315371809B298AF9663BF401B2
B8550002DF570F5B81DB4A969471061BDBA8C7E0896C2F2D6CB92A21DF4A81D6
081B099E816A6CC9D562C067981D2138DB82C7BE6FEB90D61E2959DC6EC6C194
D17E64CA09C69BAA0A6D4F837AF1F91FCB0D11535B2D0656C7F23322F02E8733
C262287F2457BDA329141C82D906F2E9041CE7E35D92BB4016E55AD851F8C93C
DA70C0F39549CB35F599989DFDF1E5453EB872CFBC56DEA081FA95638A78F61C
B7A28E43A9960025C2D3E4237A4810FFB2090A40E908F7BD4AD84C7D9FB0E11F
11265F5251E84C2668B39C2EC75392459CEB04BFF0909F79990961711A65443D
F4EB969FD245B0B19D55FECDD1F58B64BC250A54A59241AD6C949C3EF9616DD2
591CDA486C1E778FAB86788419399B033EAEA91AB2DEF0ACCE887DE4910D1731
94D0883518B92F02856CA47A63ECDD568A4CCF8F5716BD657E71DE93F1EA35BD
A1E3FC6DA28E571E766B82F66D5980EDD0BC600D5909C46A31E67B97EFC91046
7C6600EB471934504578B83F7FC69AB47AF52CBE91BCB318643A67D8CA8C7F79
CEABDF2BCD5E25136EB7AF8C9AF27E6A46A3300A13467C6DE8E5ADAC82E0E0DE
755EE5CD5D973F62EF8E8F890B7AF413345898186AED0776CA52258BE2C56D69
6065C99BB30610BD078D5760BBC422044B61C63C97A5BD1CA3B8D7F5D35DC45F
07566028424F664748FFC18B90822448C37FBF2C3979E6C0AE8C03C361B15289
830651643A25F21353AA5545D218922A82F2559D03EAEE65BFE453EFCFD0472E
B1E07F1420AA116657F1042D1647D42359C405E34E60AED35B39C0FE9A286DA8
65E368AA3F9CE42E4C77ABFD332D88BF50E499C25482FAB33D5C8DB86F20876E
C6F71972247AD3F49F03DD81FA691F6390EBECC8963D929B2862507DF1429116
332BCA7F38A67D686D3F26D2F796C87A15EB3E08C7496930CE64511B448280ED
ED9AE0D1509AEB32574479C340D25E81F5508A7C9E09B266A50F1603FCA925CE
E22C170728677A1CCA5BA19434D13BC5C64BE340228D522A2CC7526F79D789FF
2CFCAD5925DDDDFA6E4FCDB35C830E9736C098E5362EF8C0BF71BFE1713D4915
5723AC5EEB6298F39E1B59D470938A19EE03DE1E0F053AA3E86BBEB04B6EEA4C
803B4862A0115654AA90137D5C9EB24A8B76DD15F11965FF85F916F675B37883
907DE8B1DB7D7E81F2A2CF4DF5A5E97582A71690E6AB57384C059E665C70A061
2C49C07B417B68151B574DDD636B49B12A656991D7902209068FBA2BC563E871
635D63B3A3E6D5FAE9BB95A89DF6DBE409E1666D0F4CA4D8B35B50438AA9ECEF
7C508800262B7FE55A956B9A5A28DB4DE9F8AD18A9297CB4B59DBDA645684AB5
B6CA740BE300E503F96B96F3B52FE469CF5B2C951BC0FDEC17B53C7E2FE86979
B832244C656A1686D7FDE2F329821CCCDDECDDC90F59A865E60481D8F2557F9F
4C48630A17EF29C81EF1F33881825F4E6D8C2DA74A41FA6A57C9E070AD49DF73
366D9AF9A3DC35DA213A632E310F722B29FD3E48D7EC751662B09D5363F0F9D5
1AAC0BA2AC406CD9639E3D24E6C41BE1B9734BEC953421BDE071AA7232D548A0
67225C8E17CF1B43A482C44FE50400688AF2A28935B5489B83580DBA0F99E0C4
D6277966E27CE311CEC86D4D1835DDF1334C03412BAD9F08A57792741BB5597F
E4B6F3271396CB9B107F7B6054A67E6AA5187294F8B964B90731CE3B50F0179B
01319A0F1F60AF975AF61D543431DAE376CA9046B6DB9C9C638CE53B3EC0B529
0D17768494E9E6054E325470A3A4799E420B526BF6B33D3AA7FF5631C9263D9C
A3278F94A0A1FD08E96337ACC0B9CF9C78B13A70DF0C2AD16C1AD49A9A511DFE
7F90E8F44B6EBA5777CA116EE5E83D718B487B75063BBCC6123759EBCFEF4387
D8081055CA1AF7279DE37F1A0A87C7B5BFD8BF67C74337982E24A5D66527F87F
3B5F1F9EC214ECEFAF1DAD0845F117E7F0906393964C2EDC7BFFCC6297651A3E
B26D33B407B8142DD5094A8F7E9E18366F938BCD5845D836531D9DAA9B257DAD
D32F974ED648A11E9C0689E3442F2E1D268838D6942CF5844C8C821C0A5FBBAE
BBD6C9202FCE39E52BED73739A635D4A87BE94F4D17564C246C5C168A23837E1
57D16DE59CAC8B77C67B76C8F5706BCFA8441DAB246965663409AF2ECEA569F6
A53EF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828A9A2D2C6C42CAB48A5E603E505000DC827A77589E9E467DD282E7B
19A3F0E4A1776137E6691C11ABFC0AE10F4817D7269955008591A02C59FC1D96
B64D4CE6E18494D06D7909E6FE797288D7C254EBE7969DE83DE442BF107411FB
6C64D21E7BBE13B6C25C1541FC2FF121273F022C034E14D8E10F10F5307D2453
5EAD3B227835EA09FB8A65AB90167A9391E8B9168095AC95D79759A3BFE86079
84DD0F415047339C4993CC25A321B3B455BBA0EC8F3B0A5D27DDB0155C596FA7
BFB3FC7F4547828894F62178DA6CF9C30EE37E6A9A560C0B3DB09CE61E0D5271
9FD32E00FD12C9A270D7F57B71F8B7E0153D0F9CBDB380C6F6E417E8A1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 48 /prime put
dup 50 /element put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8F
E470AE25C9926B7085F338CFB9102C5ED5A9F1AE7ED883C5F69BEC7DCFB2652B
49F29C0B0869BBBBD14E5A0233477CB6D50EB70E0111B24CFD3279826C464A9D
9065621E1CF56B06632BB1E91AC2603FA33B988FF2A7D18056EDF2EE897306A9
2F2BBF8556983A809C6A252FCF5F1AD6C2925E38CBE6CCA897724AE8F908EF48
5539C3BABA111186A0F38F642261843011FB3389DD944E430B0CF7FD64C0DBA0
64ADFCE9115EEDBE11EBCD36C145CC25F858E34B6D27E13A4E773B8D621B2F28
A52F9B53B3FA27F000DD189ECC42864A1D5AA933B10F327FA3BE68C541EE8DA5
E0A6923FF60DEA152FCEBC963155762A1019FE6A9467DB7E5464F6CB14D781CB
4CAECABF8616AD956D4AE6BBED390863ABB69D3AF1552BCEAB6D7C717D511652
43A8018789AADA8FA4F20AD5E46CF97C055E9664C66C0CC224B7466225CBEEA9
4082C02249C62658322943CD8E3438675ECA5428219B05E4A8338FEBD91498B8
75DA25C75E8774FBFF158091A17549A8B224E04B1E8658F368B7D94D966472C5
55063CA0F9773FFCC296F809FEA90D5BFE335015776438ABDD502D1545A5B53C
5C3129C216E43C5A7379C58A1B7B6027344182E9A8DD920DABD2DE584E5A59CF
A384967A6BE5D2722215E4E3BF92BC1BC52C1599070D8D3BEE68D04F8D5DB04B
43B412A8290A12152AC96F12A6174FB094A3A1A1A188696699500E135791CC7D
6156728EC8FD52EC2F9AD8DDF55DE0ACEE5AB67AE6B30E63743D5EF389908F22
6B67D7BBB60DB58478C8CC58902C20E67A7E4677D4213197096C42F9CE062CA4
EA3B7063D6D3DE4F1E4CD5A577D21638F0B04D9287E30CF96BD373867FDCBD10
FDD37B53D2AA2A1A7114734F6BBE64ACCF63E288571598913D11615B1B763A8A
0C4E90F1D42296E6D7CF77D32F8058F09D154A6AB78EA3D1065F793F41382C2D
CDBB10CCCA80734F1D3FCCFCE07C287B7B773675284FEC89540585D5454D7C22
2AC0AE6957A766E779DE0533702794D7E864F74EE866E107981BE69D4185BA94
8B15D78871EFA478646CB030B75EA065D6AEE1CE8452400CEEE3766ABAA6531A
64CD4DFAFE79455D82F9C73764B4E1FC37303CEF71C94F6002BAE83915B15AF0
73685DBC276958EFF21C261DB7518117B03489DD2B4FE22AE09DF3F360F306C8
FFF384075955BEC263267D2BA7AE91A9A3922082B95BFAAE965DE339324D2A4D
0E59DEF88FCD853E5366B6163703AEFC4813F498FB2FB43DB51753A0C5F425D3
3B17C3974C2CAFC01E9F5BE601042F9D27B3A9B080905A893EBD979B175F53BA
8F58AE835C1581E0AEB45274E973A81B5EB9D76AF322A76031EABCBCE4FFD000
38DC5C8DC74FF2059921AB1407FD58DC7144D3AD366F526B67F2E21C7C998807
F9DAB9D574A3C2027CBF8E16DED482F13E34CEFBCA501974E08A906F37DF8468
6D1F4DF86E5DAF340CD18107A3C50A6D25BB85D895CB6114B51761708A25AA35
D1B314EC5AFF3820B668CF4518782D2397B8A3932C81ED34B48AA729A5F82C21
35D242093D90CF09FF11079895EED163E1C70C5B07227A97DF5940CEE12CC8C1
C6CCBBD63797410448E42846C851C1455A5ADA400A8EA4754D82D589E7123E35
8ACC4BB2A3744DF03F47440F9F29FE71635D9EF1CAA24A93326A4EB07C03567F
A3FF7185C53C18CE5B57735D01954F5D76E83C87AE5F049AE54A4922AEB014C7
E2511329E19A277F2B4BA8ACFB52C845DA00D5DC58D82CE71A10CD303D18ACD0
596BBEBC68CD79A259A70732738EF40B9E2797057B8519F3A66C79963E691F19
960A046102C2152861343DCEF265EA51DF2A32D2309BB4F38289FC0495D045E8
52F53E6DA0E3BBA7355D1FDB3DFD729283133AED6B49C2791A2B01FE8642700A
C76F63698D6D62005F2CBF0D292A8E4E25C571A9758BA3F4F89944E7D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/UniqueID 5031982 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 92 /hatwider put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152FCFAA4AEB9B5B81AFC43E9A300ACDD1427BDE5B8
0D5893CCBC0591F9F5CE793D0E1F724351C5C5C9A3A1CCEBF7FF3714E6583082
A36EF53DEB9B1B1A3B7727286F9D44570BD8EC91F9F0FA8582A30E6C46B3B7A8
3DDA07BBFFBC518DEEDB5696E3C8D0FC88E54BD0FC54C60DAEA0B344BCFB186E
E214640DAEB7F010A75680A3C15376F4F7D0B2E42110941575991A64DFC40439
39C3BC080A089F21FA3908F12425FDB664D6BD53DC1D31F58E2DD0AC3264B0BE
1D609D058A09F8F110AC4CA81D9A737B3CA879CEF1F4C1BD0D8B544FDAB25C64
686BCA1A7BA63A455D3BDE025B5DC251AE1748B790BCD307FDF8341B4706FB26
D62AE2E4D33DE35A8EAEBCBAC4C90704498E500DEB4C2CF96C331A60C8838288
EF65DC7B65B4591B37A14D09A5CA4B607FA077160ABA270123A72697AFDE8DFD
605C9E24FCC61B5BC54DE8E0A478831E6A60AAE8381AA47CCBC3E4A3D2B2D798
9F2593DE79D340D633C6A5216F279FD219BEEFB10E084CC130E27FDB54FCE191
F2DBDBBB051DB964AF2B5265F67EB2A7A2A05DBC31242CD4C62FEA8F162AF7BE
229559DB5ACFDA0EABB9BC6795163343284BAE1012E93B84A569FFD1BADC3CFF
F0188A776E3475C2FAC6BB4ACDBB9BE7D939F9C00B2B4C9F0FC4E9F00FE72326
D3C67EA6317E36BEAB394D489015B4BAF354EF3FE6D4D7F720ECF51538E53D02
BF4A29D06C9D1FD6CCD8769D9A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 24 /similar put
dup 25 /approxequal put
dup 50 /element put
dup 56 /universal put
dup 70 /F put
dup 82 /R put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 107 /bardbl put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D45D2221003750163EC92AE0928C85394C9
42DB86D1A5992304E4700982E6015F53DD5994514C67DF819B53E70954D72048
BD6A932A702D09248172CC3C057827B464BFDADA50B6F4A5587BEA6EA7CCBD7F
30D6F1F181D048F238829D420EDC6802C21B5561DBC1B19BFA4431E2C5647899
ECFA42CAEE34B742B0526C1D6B872A1AD8F43640F62F3D55A9D81FBF62CCC995
25D028DCF0F801970F3EBA68EC5561996C7974127FEC1F87F76AADF9E973892E
FAD0DB27FF3CCCB3DD7F293AD4FE771F4A75F8A86040506CD46CEB95A334D38F
F19AB75757D7A8441977A3B7A827287EB13121C2131E3D4B10450172C3DD1A35
289F43FD8888A7787CD10ABB9AB65A91A3B0A301635DC74CF94E6811FF90702D
2A5A07070351CEE8774EC427ABED0ECEAA71B5B7631A965B358E04CA6AFB2DE9
0A124960214E11BA3F9C4778DE60A5B9C2B17B793812476E934D640551D61080
A9E3FC56D241568232CEF707373FC096D71BCCE6B79861B9101136B49167AC30
C078A4251D876C9370D32DDB0A688FA75F6C294652A8F81F55A1301BABC4BCE2
BC6E4AD3DC43BD21C0DACDE807AB191EFBAADE5C7D1AB678E49BE0C3E867E537
0A57DE17D6ECF6D18EDDD76E4CF8FF09083A6BC7A3CFB61741508804788E643C
AF554CD9412EF84F58412D9CA24F88AF1976C80B35B768026835720714461622
9861F4CB39D19671B7037DF8EC170B1D788753A2BF874DB40411E03FDB195342
13FDBA1020EF5B79400C8900CB1EECA4A9775F59D7432F47C4E5431791B570B2
C7C6651288B55E722DD22A03D7FA9ECA8F172B8AF5FD2A97559615C79FAE31A8
514D602FFE1ED9FFB5D0BDEE48E38F994DF9FE2A95C37AB5B1FED71E0DB0477C
B1056BC4EBEE41C70EB36A4BA28C3DA4E0A11EBA5FE247DEF456D8B9EC71AEC4
0240E9464CFA3BEF8EE7F3D08F336B09B980DCA70399AF59E65EF071182B492C
E56DD02A2981DFDE8C995FF75EBA4E732F3F0B3146167EC1CD69B474CFDCDD77
B54259AA2E0657C594246883B5C67A8255425E5C13010926360F4A544047E435
1B5BEBDFA7A87AF2CA279790DFB9FED70E3DB7158267010B858366C460FE6F0F
51EE4B86FD91A4C430016968AA3FCF6D8586C1F95CD389E7DAB500BF5D196766
4F88A7DC095FA138DC1A180A6F560144712734A014A1D6FB585D635C68C77359
7B976B4A0E741EF782BD2774D36B9171855D51CD2BA48E60052846380274701E
594D5CD76C36211AAEAE60B60052C3D2E1A4BD81A62E6102128D55EE19F69640
7F406C3ED61B875B2CFE6DED41E0AD41690FEB13500E40D683BA8B1B820DE8E8
CE0F13F45A478546F93DF219B89E58AC4E5336A867CAF22DF4E435F6DC957E54
61235045E46C495E157F9D8AFA95C6D3BF9A5E6325BAF6FDBA7A84AD727A62E9
AE4034DFF190114146223FA42CE9057F6954B56CFF7CBE2596B67C5FBAEF6302
7A2D445DFDED4C0A9A9BC595F4E208BB5EE861E13CDBDF4FB5D6F7474B279F3C
649BB537D5C047403407AC5E50F490927B2B9550216CA5099E8B79A38EF7404C
66F02E8400077A1453F8BC64C297500F2791D1888F5BF3F8DD6169645C591959
51F980829A353008AB028A23D0DFCF56D8DE5D9900AD8E84C48D6A9DE7C508D3
A8B32523DB920E3EF29A2939376BD1241D492DEFD63FAC37442755C36B65B378
614B0913E5708C846F4E1EAF3B598F78EE73C796062A20A5D5A4351AFFBA5A1B
94ACB50AFB1202035BC6119CF6184D27F0F0BB1DA062379C2D7F20B9EA904CD8
2CC3FA28DAB4698AD2ED7FB91081EF4D492EF685476D6E214BD1A61D1627A7EB
98254A4B410F7DB4147147837CCE16AC6FC5592EA8591B5E2683E4284587A24D
E1A80AA78E5F40848FCF262FFF01D937AD85048526C31A6B56EFF5F69EB954D3
0AD07708D6293F8F88013BC10E1BBFBD07DD8EB4A952545B0897C9D3C02792CB
44A20BB2C83CAA74E328F5A58F4AC1050B43EF7E705AC538123140FB4986105A
0002059A2E110E9BAC087907F1CEA67F96210B96FE40204A13B32A893BD328FA
FA58A6FB141C9678B41F746AF2E20014A49EE488887618E9DA6025B366800AE3
76CD68091A51983F23976E5AC1045635CE7C8DB8262DCCAEE28EA8C05019C34F
8622B52BB67E6781E2162D994ED41C918AD90FF3383DC317BB1C67E827462C2A
86808C218D4AD740FF2408B2599555FC4DBC5150EEA3FB0DDB6AF3E9394E1F89
DEEC43AFB43AC294BBC2029525E8DC250FEA26AAA127852620FA8C77A2662BC9
D0C120FE8CF2ED16A1D5F9653B4FEE8A7D24813F5FDD3CF46ED0596F0E097861
F0EC16212659BED09BFD0C6B13447650A5A103844CB3C8287983707A1A7BE014
0E854AC32DE3BB1D8DCA4188F30F6E5143E87B7D364FB1D1E9F6D609D95F9070
DB59C22F28B3F325A72CBC162BFCFE471E7DFA9F2561657532308FDEAD73D9CB
73EC4C390BC681BD5CA94C6D0DD25F86016EB73782C6D0497D7490D93742F421
D8435BD176B9C8852F1A9E3FAD1844F2B7379895552670A401F9E850FAF81C8E
0FD38E17B63A73E8DB38847458C3F4C2DEE80FB08AE2E210A89EA5E89014A1C0
98F19014548555533A1D44A3D1850D0EC37B629D20D6B55DEF0680D947C29D06
914BF39990057919162D83381CEFDBBAA58D71214806CD9979BE36D5087EF490
885DD8DB0E6BAE29DFF120DE996130F52CD47DF4BAA198B02D4E379EB50D6ACE
0E266FF8EAD905C4016077902B027A3C118E7CF3A8EFBF6E7065EB4B9282CE22
13BA0AB5CD7FAE06FB12732A8C49C12C25FFF7ACC3398AB84C8C012B3ECA6AEA
52656FAD40F1F4C6A153280250F0BED7DA08B319D2BAF6568E0842DC3A9E96FD
7B6D535910CE6F6C618DEEA782D98B4A391F28D581883B59BF8FB1F095787967
83A565C2E9D0BCDB482694642828A0BFFC645656417BBA4B80E0036223F68D73
D0D12195694D6C256677FD3D21AF282F8035B49D9593DAB200592DADE8704C3D
3E2B1DA38CA4228EECB9DCB343EE0F2CC4DB0968D2B76B5055BFB3FBCDEEEC1E
05078ADE645DC394A1895BC077851AED913ED717D43E266096F3EF4CB5165F24
3B248A89AB4705D76C436C979CDD53F414FA820E69D5CC3D80B27F871E0C2A34
96FD708D5BE7A8A07DA1B54CE512707BDDE7917285C579715CB6433C5AC25F4F
9C355FCEB67B5E51C83DE397B70C87D5A5773D3E26F171B38D2554D7D00B6F90
C8E5E7DB75A3EBD893D454876A4D55BCA4A167EFAE8221A80DC61F15A0DE54B4
C6347BD098E2286783F1D2F545DCC7B3449399137088A7F20FFF63DF8C76CB81
68272D8C68BE314CF2990BC9AC371103085D0D745D2FFFCD113CE4F7C53EDA02
B9219447547E0E2CA2E5FCA80B6FE22854A89C266431BD232DB1B9E5994D7CAF
571B3E2F06A81C765FE9C0BB51272A8592B78EC15C4E582A972292244766B401
A7E887E0F7AF2AAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
dup 98 /hatwide put
dup 101 /tildewide put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F3DC7D72BFCD70D2998C697029D149A6BF560D
B13E1063FA336E66B267581833A721D1F474D7361CA1D4486374678A2BFDA100
CEC44299167F79EDCE752A2A474CFA8B6DF5F95734D8BB5233107287153DC76B
78938F09732166F607E0FDF6F6ABDC1FC18741DE9539BA41A720623045E1AE93
AC8F63AE9DA5A929FD4E90EAA302EA6D51002CA2911C55E660C51EC245049B6F
ECED6E847D64FB2037957DB3DC254ACEA4E8F8954389E48CA15A3D582BD18477
1E06A936B80C72975E813FE0315EF94E1935949857347FAC23E1B7C0360D08C5
A87068EDA8FD83426E837786FC71940B38B6FE2C505CF60C520276BDCCE52966
2FF0B6783E357B7F9026646604B889DDC6679963B42C9C933E8D8A22049AFC60
C74205BB1D6A0C58B7B410031CCD40F01C618694DEC9BF94A9B15D9796C02AA4
AC9687748F4F8F52F0A87021F7F3379D8E0DC12CC29196D54A296AC0510D7F1D
EF7C63E3B4CC13C0F5C365902242DB914D3F1434BC56326C12AD38C510799BEE
465346133D51FCFEC375A435397F7BB1830037B9052D60B1716FC392B9E3E9B5
5B118335F2EF3520D1CB39B43814735F859F082C925046AF2E7AC928BC16DDE2
1E515D02D6AAFA87B6A337F8472C2F1C44966070AEC9BC92BACF67BC9EEF8F85
9AB0BF1BF510E0A8E9B089CB409AF505E797F2E1E4C6855E3B567F11B599D863
44585A2D081DA1FBDA5EEF3792CAC989
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /Lambda put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A00DE74E4990135B9FCF930B9549CFAA482EEA3C612BF66FF5E4C2F6A0
304CC43B7F56F6DF973313CA7F2D88D321284A51CD6DBAD66F87712368C4C2C7
CBC391854A78D4B277074037D96BAB92A68BD554D2504E4FBF9DD5897E88BB1C
E563B2C690580BE889C9CAADB5A767E72E8E3E71836082E1EAC3C1E3C4F596C5
7005978080B86F2DE702490A0D62BBED412F0324B4110F0AF844941D9B5E6BC5
8340EB41C423A4175A4DC598A1C18BD404B9C5F1C75FAB5BA288DB941FC3A51F
BC313228E5AE8CFA44D461E714F1B7991B56C70FC4F5FAC7D973337A784C642F
BF581FE3794F051248DC373F59102DCC49384EC5BCDBC6C769C583F756472EF4
E05CF8D3D6756D91BE85315F6545BE21E74A9E751BB4919143E5E091C0A0EDC6
88C7D44162F49EECEDD2179E505CD0EB9E6D033EF871DEC938265F5F6A90E393
B4CEC1F7F445EAB5410E24853F78865171E359142B1265AAEF133180EBD5CF40
50C388EF6646F0FC3E9F6F9B914467EDC8896C38E4BEE27C828F7D1A0AA4CEA3
92CB3514B602E21C6B25F51AF215D6466306852B5A9883982B36021439FAE6E6
2876DD0546EA4D4003D980F735AF2C6DE0019E9469E26413E4474395C4167B47
8EF660999A2F5BBE5670CF9006CA9AC64C57ABA35F63F84C31D8D7F4956B8F51
AFDA60ED028C685E22C15885B0FEF83B9692B731BA7EA19A7EE8697D3E4826C1
0C60D15D822FC591BE2EBFD86CF34E69A72C8511000D0640AA9CB264F16F4580
83B608405EEFAD5A91C52DEC49A977B136B239796843F143D13832545F859AF2
815FCB60F423E5B26F56EBF89CB8BA9C4EB4AE0DF152B048C95CFBE2862E97ED
E8724A6473F7CC56242D5E9AC35B3E6F96C11E707A89CEED31ED3718192880E5
24A98CCB2F87499771EDB9E74BD7D0CABAB7F36E771593D06D8E49E9E070C412
02F638D284C7864820F116F398EBE1BDF98378FC1805D42F9F82AF2569900CBF
613FBE08F88C8FEED44EF9A6B13E4EA734C73A563913D259E5A6B6B4B5D95193
1204CA6C68AF728FB4BC1CE2A3DD13832BA064849DF5C3C3B5F304AF03A60836
E42484A70864343CC9DEC7F9B1D4887294BDAAF2CB21DBA855109431680E972D
C814ED78749AB995D4D7502F2C479384E19AF8AECD88EC324AF67E0A0299E0B6
CDDE2F520C04870D8B49A42554A7A259AAD548B73430C7E707C8335D3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /gamma put
dup 14 /delta put
dup 21 /lambda put
dup 59 /comma put
dup 61 /slash put
dup 68 /D put
dup 70 /F put
dup 74 /J put
dup 75 /K put
dup 81 /Q put
dup 90 /Z put
dup 105 /i put
dup 106 /j put
dup 109 /m put
dup 110 /n put
dup 113 /q put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D272B5B1617BAC2B0CB510
5DD5EC6F7ED1226D19189FF547776698FD48B7A6A038131F869A9E24006A4FCB
9FDD5E4A6DA9C531E1F1D1F0131CF8BF06B78BD2C6109E3D5251ACCAA6661142
7E0CF66D8C1998ED3DDDF69890FB2039F35BFBA2D9E6EA42F2E2E88E8C66D0C7
6B2A404F1C72AD3C0A327A90E16092E727CB2BAA0128995EB7C99569C8CD11C3
77C294DC2CDA70D0CB20DC0EA68FFB6BA42D64A1609E07F378A1AE072D1E66EA
6A88B6216A65BB5D731DF9B83A7A1136A9CE874779495E7C1D5CBB3A4F47906A
09156C93994992C526D0C9BD0129976B790F553FB2400B78F2857FDDA9C4AFF2
AF6A3334700FB3733F881FAF164591DCF506611CBDDA1E075026F2E98E581366
76C64A391601CA4FBA8CA906ECD13A23F4B7E7B39B39088D010DA238CCD5FBD1
DE4A90C188432793EEE6100D31754A7E35006BE1525B491190A9349D56CF1571
8CB1A7FADB595012FF87C7C9D63D48DA49C6FF1DA2DB4BE5C17C3390FC33FB05
F07F8B7B0A42E052B3496E8F0A3520290BD159B1CF3A70C5094511158B570631
C0E2AF501986FB5F32AB954C12F98CC2BD25FC0C5AB802D997B91F83CB768E1E
738FB6BFB737EDC91AB360AC34F0FABD656866F086A77B807B1226B1986188FB
646030C8A9BBA38E1C9CF66DEE41D163C28C5E4E9A075699663C5B17EA5BDCA0
04130F288A33094EE524BF5FFDD625EBACA688F1BC20C32DD282B9823BEF6FFC
ED8BA882BD5BECCDF731749D9D58C50F145BBE72D61ED58A3E5A5DD186B57A45
6D359A8B1FAEB4D0BDBD795D524DD27A7786A044FDCF59612FCC85958D2195F6
2EBDFBAE1E8134BC45C5B0900A70B1932DE57583628CD18036FF8C517D8D80D5
57B92156258A235E5E5E2BD8A1E394D45AEA15684A78E8BCB913B5624C796EE7
57D6B6961458615897FB1637113A4DFCE5B1C1DB47A7E75B51E3E91532C176D1
455F29EBDA75F385ADD6198FF8071F71D512A7197295E4B2BD9768266621B42D
4941DE9D62EB62F4D3985D520738480442A9E70EE04BF02407DBEE345FB57BA1
F9F9B73E3080D1C61C514399B3FCC5AF57C1F33F4CF65217125F009CB019E161
898EAF7F2B3E1CFF0A53A9C644FA7CAAEF50F1805D0CE8AF9FAC99A5375FB360
FA1F875F20C6A9BCF596A45EAE0249A149B87473B8AF95978B0C382197047C61
6ACB22C9DAA666B564A58F9DEA9478C17A5DB87030937CF96E69A16771ED4FCF
C2F8843B534E0388AA824DB0552B7753003B267A401B4165D68CFF6687283DD7
268041A8E2A37319CE7467A70CFDDDED5EE5BF301E8D78CBC6F29FFC7449296C
0B0042ACA7C0075B8702A78A9A878D0EE7102700E797F2A52F1C2F87CE279571
D5C6F497297308205D12F76195AB80E72A5EB61F0C232B0313A882197E028566
84C7F7E5DDB50275390176FC33365BB34A5F8A1C1DBA235EFA33B1E7A7075231
26A14F81C4B58F300AA4F51638272C9BBC4FA961D1F08803B5DDF9E6364B7770
26F24137161012FB2DCACE4D897567A9DFEE47CEDBF873DCCD6EE9F2D37C175B
10F4E0B9078952DD58451FEB0EB51D18E45C67E1FEBC44C565F598DF04F76EDC
52A9E1D8E177B5F3319F35C0E63E235F74CDDC9B953F6C7253294360654C1D32
B442C7258196A657606BE49EE1B5F9543C73B7AEE48672591A173C3695FB0085
D6D58F43C4677CDB8A770AB511E6DD1407E14AFF71C2D7881C4B8587799D6066
34AD36D5751EDB6BBF5B9EB427971B3627ACE14A141D7748098E8747882547F0
C6F5CFEA83BA285CE2BFF4D7CE9E9680D11A39E6CC17204B23F5D06D2DDF576B
C82AA1D0A0912370004B45E6918A4D10FD96D0E9740F04BA7DF8774F10684488
7AE720BF73ABC86E6E18885651BFD27214B505D781EEBD3A147722B73E15920D
4531B2065E1475D19D2502468DE71F813867C498ADECBCDBAFEEFE05AFA1DCDE
C830D15AD2B7747F66510A359C1576FA505293442568E5A353E5DD6768260DF4
31F38690E47A7576F6A7761E507BA162CCEAB5A01160CA930820E5CD9A22B494
F190D609DC0AD185EE7723FAB8FA073E7D4A3CE9AD33275F0CCAA1F8AF1F1906
C97C08DB0ACEBEFF3EFB25DB774EFD3AE4D70C15CEDFA0182DCFD8C58C370395
5DC96295BDCF276715D0EEC6DDCBC338A69251A3F0CAD80A8B4C7588EB01CB5F
76D5A36884E58158AAFF632334AC72B9ADA725D84FC145004CF2F4878D939834
FA8A1485E46FB92FC1B6B061CE68F9D6E3A82EDB57E3669C9F9B75F23592CFB3
C9639527F634DD1C7247E887CDAE024FC381F4CEF33DA88ABF7479CE7217D194
E1507447C3F59CCE8AFBA8EAE43C63EB7DE02EE0A738FBC88F750D1865B8EF9A
6AFA49139CA9DC77D9AC4D740487B00A296009D2D3A398436050B39B7802BF5E
2ABA70B2E3E72E6CDF5D6BF0F919ACBADE80BB775203581A36DE40991F7B2161
66B86291FF3217B781A2859A6B5DE09B82953DFC7DE32D7C573248873AF776BC
4D02E703633FD51E88FB4B0BDD112723F9481875B9C913B1FA047FB12156B1DF
2AD09E23BD53590F354EAEE8698A1514F90FEEE19A28D3A0CC2ACC148FF7DC8B
6BA7FF0D7460BB758DB0A197F5C7A3998FDFFEB7691A26419C9608F7AC4A221F
6519DE93C66351508122CFC68273C015FE2974BFB9FE3ED7C88B0422EDBB658F
3A4B125AFFC31CFFBDC2F1874B4454252EEEDA220A4CC35F6FDE5B214C1DDDB6
0D045020E0659BD9165BA77895ABAAF7B5326A954ACD79F42FCC6880F0B414EC
1FB041B33A5E6BCD5946C2F62481075EEC89BCF420D5C8B96E56983487B68399
CAB278B65A93BEB2C480A18391B4BD91FD185C146C3B2548A3DA561AAF04346D
77975D984CE46C1FE3B6355DC77DF97BA22AB8C3A787001B9625D0B8F115B006
B379FF8F439C71372FCECAEE420251C97A320F4BB7FCC82291DE6EA350FDB38D
83E9ACC5E27D4A8E5F5248658871C51528E5ED706A65E2CFD5CDBF4E762EF3DB
9A663205A24021E739F2D78D69ECBF5A85593013B7D5D6964246886A1CE657B0
1C55957FDF55D71398D4CACC7A143C0454703A0C6F5CEC00A4A4E8AB21B9C8FE
01E3E561ADBDBDF9A6034E507615E2176A5AC68271889A80D1BA5C67249D00AD
483248E401A9CFDACB164D7CFE714087D03F3930E089AB1A2D1032BD4E945814
406B143DCEEABAB72C49A6D004B5C7224934990CFAA58C4816CC6DA7F3AAC4F6
299300842F12335DAE422C00AD8336634F93985B3A0C552A930075ECCDC9C055
BD09CF7F5E03113453C2C886A76DC679E9603D6862C957FE4E2B499781F1EF5F
BA47B392BDABBB3F1DF6DCDBA6814625F70D51C9B4CFF55EC957119C2E43771B
F57389DB5EA7C098148A48D4F530415FC719915CBFFBA940412ED8EA92578C62
428AEC8417B6E66603B124C8919894557DBD76E4E7ECB4F3DFCB9EB2BA9C89ED
C2DCA227985DD6FAE663D458E6E5519C6D567453CB4131B6B62C53DCA75CE6AA
B8449EFD258C8D2A2B13A2BD2B18ADD9AC1661DBF1E8CB382C1EF3514E2DF1C3
635D2F6A9AD7A49CC0126645411EF83D329FC64D889002CDEDA93D830D31B424
C8A6BD73DDB774E1D28ADE8773FD99F8C99C5EC8E81BD85D72FB34D12BF01223
F9E290DA4C30BA62E6C5C258C1B3430CB8677AEF8C3EFC5D17A98011B7B0E4C2
267AB2DD81FE05A0113F7190C2BA11547B978CD1DAB4053EDBC95CBB3E472BCA
FAD5EC8E76FAB9D21BEB42B34D8CB595AEC4092C1B220F54F89112DBC434DE1F
5974A17C291D32227FC51330AF8B64763046AC4B93B646E9419DE0C4351517DB
33FB1EB525B3D93565327A2820ED7DB5DF9B342F40B73265CE653D7ED43A0D0B
624F42D69C7E852FF1F4E882153B07C43E2EBF8E98F4E2023D0FC8E1E302DBB3
108D0EC864FBFBD8ECD9722580F32784606D3DE9F5162543756E95C350086437
FA2F2A1691C83AB3A9A11702ADBA3DEE3F3FDA38362F4078B5279C8E764AD757
5624218ED2BD815C6964BBF4E7C1DDC4A7FAA1DDBDABD488D48F3572F4453EFB
2E09AF14042C014C94E3159F2A43A07014654322CA58BB3DAA2120195E6A638E
64A11FC0624B8F96415147E86C173DE69301EA7EF76AFAED3E1CDBE0025EE333
4FF07FE3EAAEB0FED6AFC22A342F908516016D2F7268A78CC01A04FDAA345666
1791CDC4AD91B5ACC0FE7EF00CBF9B4466B77213826299F376867FDF26B95211
DDA7784AE0FE198D1958318C9E9D7EBFE2995DB25CD3A3FB74B2B804848B30D7
462FAC2EC453E999F10F85692FC95BCAA48B463E49A3B3280564A3F404005937
1C17A404E1E9C81BD20FE3DD194445FBF3FBB87A210AF34B014B835BC6CC0B92
F0729FC10CFC59C2821C3A51A9AB0094613208D342FE981AECB9F56E8F71EBB0
462D0B7E1ABB16C40E545E0CC3DF493BCA95C1A9F82495246A2EEA6F1A43B619
C99A6BDC56F74AB0EDD579E46C67F6DD83230300091A6C6F0FC99CDC6E9CC49B
F8AAA563A733F0C7D223BA3C729E707C9C1B59497DBAB8CB3A90FBC0418C4A58
94CDEF1ADFBEB12CEA753FBCE23A2C62588620FC18CC116F2E2F71F3EF709F93
649AA1943D5EAE54967C64249B20D2410FF04F2E42AD99873A59B33D8FD6D856
6B9D8D319E2FCE8DE2656D29C640C5387D2F19B565D90CA769EA5266FC0ADEB5
5383827E4E76511640B076EA79B88994DAA145EEE72203A7D4A530F8B501BE1D
7DB37B879BF5246879FFB31732862F267EB78CE84244C58D69649F1D732BF55C
FAA063A3415CDF8C34EDC7570EBC8269DE96CCC516EDCF8235939498795F707E
5CD5C316B31619C85168B6C35477B15054F888C525A311A846BF2E41CDE9ACEC
CCE1622F5DD18464CF906EA03B945DBD690763BF428F38D0626379D387C51A9E
AA407EA6810DE9A3EB5BE7FACB5B5F2608A77D46450DF45D63A4A5E46C07406A
4BD21430D967990963ECC6835904595DDF48D141076F6F0A8C136AD08C186458
AA9895E10CD0911ED1257E8A66C691FC8997A61198C4C94A636F2D0EE2509403
CF0E4ECF34D8B3F347233BD614959DC1E6A674C67BF7EEC8D7BA4AA8BD500040
A9E5809D15910256D855BED7D9D8E2BFEE16A7EFE965BD01B5FD5D3E52F0F58E
7CD18DE0D50E6A301720DC63CDA5CC5D49D9DC882577069B4EA15CB3C579718C
41D3D9ED00E603ECBD7586992116727D4B574265A679334D9DF2624236AE53BC
9CF593DC0CF36C9AC72277B7C21CEA07349128ADD6D3833FA670E30FB474BC64
A110EF730735C4C41C9B2EA633E9707D01998F60AE0961A83723FF85C8F00C50
D30CC186D93B8BB76ED71F1F9A5796ABEEDDC749222E044C584557064FB6942C
64DB66EE41D2BA79DE4CB170935B108D5AD050E79178BCD36CE6DEDFD15C8232
48D767993BD1A5D90BCF1C9A0908E4E73D7E336AC39C9B90EE4BF7B2C49B70CB
9ECAEE2CC1DB29617E2A975D93DF5D9F48E9DB847E95211A6D3C3A2BB1F266AC
BCB9DC6747C64BDDD653547A28C99516EFDF6D6BB993AE19127CD0C8AE833099
C632859775FBE9E99B82C48B249E39066AD73B8BADCDFA355717BA008936685C
B0958B73A5A7EAAA410F54A904429BD2EAD87725F7FF3591CDF22BD845E07840
ABE358D9A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /Lambda put
dup 8 /Phi put
dup 9 /Psi put
dup 22 /macron put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
dup 97 /a put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 126 /tilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2A44CA18B10CDD9DED32A9
6DF332C5E4270C9ECEFFE63DCCBECA12B839EC2CBFFF7FC9AC13F612CC0D7709
DDE2E72E16C80CC9C0E7940FFA97F2BAAE7B45F5C95044FDE2392FAEE38BE1EB
6D086F2AB69CC3F25DC095FCA2071BE8C67EF945078DCDD901074A7A260038D2
81FC1CAE2F2C0EFB48D54F40616650B24F804069039B2B119DA89FCC5D526829
AFA5269D4358147C82353C2086E551C702935BB5111089F167B7917C74C072F8
4DC47B5496C03BF3DDFA1BF32D8F4B09C5A16AAE28B0F040E7EE32051306E182
3F29FB7E3A7C2C38BACBC1CBB32F277C3765B969071CF2D0CAB9A7A1097F300E
F1212A5129AB2E71A46C3AA6D9B5953933656C79DD1C174C26DD97D462B4323F
33B410DDF14F0CA9A2241619C4B2F00E32C603FC2A137FC9C4B873734418A4A8
02B852FCD1E62A7C503538F9EB68414E6E1A478D5C2A0D08CB39DA7D5F522A4E
D633EE963F24272A6677F20E75A8F7FB6C1EC7E50A4654EB713742AA95C63E50
BF80993281A0613CFF98053019F57EFB45BEFA31708BF7B4F1FDE43D1C1DE8C3
966B2B1A6CD470061A1D580BF1033B82D15589D5B59FACDD5FBA0A67BA43D685
1AD4CD3BC739AE2E22CCC181DFCE512234A4AD26EF761C4633AA7047F53D5F06
634ABCC5D29F88AEE951C2452D22AA967D32C3F37A9087CE32B4AD91804A740D
AAA99A46448229050C1FADB8AA129B84A8FD9CB44700212EC20361A340C585C1
8B19C61B51C90817F2AF04CCECAC1EA9398835A737C7541F9B77DC80CED482A1
6FB504AA8A7A8DD5ACFDBFB03C9351A0FE860FE1A87F65FBBE740D39ED276776
306F8D5D3805E3CD4E8AC8E808FDF71933A1249F78E18EDD2299E67BF9EF6CC5
21F5D5AF3CCA4A47F78B4368FC5B9567CA5876B77D9AE4808E6120C9A6ECDB5C
9BA2B9A441DA122921A960C4B72BE2093426677988F8AC9F7FCDE0DAC8BAE223
8216A45C23F6D07CD4466A31B0CFF132F8AE3AC17DA362436980B6D47AD18A9E
D91BE5AB10A28CD21DCD9707114DD547128F3C4A4A2428B51852D4DA802B3216
A1E1E9DC24349F296147747E36A94EE605B5FE7E3483C9CEA91B22BA674902CD
A1F9CB53B901C8E21B21F8F364F53019B4AD69F612DC8B4C797054DCC2D06426
A2883721EF1962F3586CE4A863621D0344F35AFFC8E11C3503F64E58577EC9AC
F7E71468888D2F49717B041E8F9439E8257F499BD8F5812EB351B65581543B67
DA74386C0FA6BA73DBD4BE03DD0557F1869D6B8D5B52F2A775672D208B1FD63B
002BD736DF8A6A8120413945FD120302CEFC029100F93A126E78065CB219C926
D45163EBF6E81EF0C38076817E136C278F20774549A2D4DA72CF6916640A4929
41F42F1F3A8DF92B446D8E66D1D870CF36728875C7FBFC947C4D9C05092A8970
7C7933C2C39FC796DCA4EB2C6E7EAB2E9D2D400AD025F1AD7296853AA48EA0D7
E42CC17EC429FD092CEDE9847B7ECF4E2AD65EDF08AC4B915CC97D8C7016EE11
9AED6E6A16131CA22ABA77D2F36E8541CD5B9F78292A65991139B45488B89019
6ACB02B76C4688D4C2ABC3DA2BA5A87574756FA0D72F27B53313EBD812D55022
7C0665E7B5096FF9653BCEBD47E5276BF0D28259D561A5E0AA1BB9792B28DC9B
ECE8E504F5B6553AA9BB15553DA69B99B6C48B3BB42C1904E4BCBFBB6DC2FA12
9B426267AF7075C506DD07D9577148652DA144DD0BC77CBFAC4BF12E5FD6DA17
371D616CC0875BC8EA9DCDB17E39839236C8C6CAE97E6BDCE13F09BDF182F07A
25662CD21C199544E9FA80DC62D5D09F9D65C3FCAF56B913D069E412674347F5
269F25522F64B548E516B0422DFC5718733EEEF10A2E54A8082A9925B7AD061D
F0417F99C38DC963AEC0363B88C91C8612460C43E5441A4C66C31A6EE4CF51E3
0D8FF5AA590B65C154E2579CAC421D466FA17086C555B8D95A9F649546B51149
457B8CAA6F483C4A00EEACFB570D76D01209F22F4D026A3744BF5BA2E4515D33
F816F05D091824EA3E015F9158DF5B9D8F7EBDE9F2B3C04B5514110C90561D5C
5DB87AA6086C8731C58772FE6D49484F24C5BFEFB9FF33911286651FC3DAB3C4
C71D1F11EA6A618D9E66A3ED19E341E5A1FE81A00E3A693C2D57AF959D5324D8
0DABC4D736411942BBA8CF08157F21D63C1886E24ED485368169D5500520E2AE
932D2CDF44BE3F3DF6A81D815ABB1F31A89E1F1F3F3712315F712F7FC340F23D
12147C0AA2495B30F58881001BCAACD3E4400F312BDB6B1F9B82DB524A8D57FE
5C30096F417C8D703365E481FB19B8877BBBF6147B984B193B34BC34AB267959
2181DF37D70EBB73931AFFDB7E29FB0A64815C4E3D4CE703F00747B6686269B9
B1A831BE10F55EC5D739F05F6942CBF1CDA530E09D2EAE3AB491BC0A1AC434F2
7AF67DAA7334EA25A98ABFD5C81E947FC4CC57C95A1977207E26D7AFE5EE2B27
3B7B00D0680B661BF544511285ECE7AA685957F2E726D9AE895F5D62A97BCD03
9313B550D9A89014BED00CBF4CCB2CF10DBAD3C928A94DC7AA2B6E8DCB655058
E9A72F5C7D126DA64732FDE7CDC123678F6FD6851D32400C5F1CC3FF6EBC6CF5
713BF2E5992ABFDD358A88D9813CEABFA2D8188B6EA9F81EF03C5A33EF58AB1B
CC71DCBE29858DA60F59B1A01AAEB4A7EA25FE2DC53584030A75FCFFB2020E67
6FA999C3B43D57469A714862D357A556709C37D8E83912D53E731B729C904CBB
093E9B5BDDFFC6347DC49B0F0A2C7E6E8C7DE1A5EA47A1AA20E256A378A7A8DD
2AEC08E251B8F61B1D6C96E982428FE492419CD791FAB6863B7551E35432D334
502A1F3A07154EB28D2AFD4AD289BA3D93535B616B5530AC402041BFC2C7D1B9
1148E428EB9C89E94355D8EA42557EE4EACF0FCCE37F9AC96FB21966246BA5E0
C34E9F910D017A2E49E71A5D3B739FFF41825C9C87FB86D93C5E64832F791D38
E8FCDBEE268E231A8EC84FF9885D880DD7EAC39FB93747F62DC1DBFB219D649A
DFC1EA164E21226E6DE265CE243A26C360949219A3B2292FBB536C2FECDF2056
68C73D668EAE1688B28D5371613E13CB1D0A5BCFEEC9453B70452C5CA0F9241B
F32970003692050A3786DB982E68BBE9ABAD39549CD4752439D820D57F9B50BA
7CBA5496361EEBED51EEE08560C25A5016F9077FE054811B3EA3F51DF83A13BA
9A1C37FE6817594D0455B9A8BF56E81FF9A8D57F5B4959AA4FE3378678A41E6B
13E339CD5753D9A0A19D54A74C82280C06A334CBB2F0CCBE6EC9C114A0FE98F9
82A168CE7E6B034E875A4EF1AA48F9B9E7B742143F9888694F62716867FF7D56
D59BFA2202BD88C1AE88DF8C84FD5A238C5D008E90042DE7AAA7E02AD9899AC5
4F4A271835D96F0854456C789C938830EEC67A0DC1314D1F99567DFF2000FBBC
77A4196FBA8CD16D9A1B3A963FA8A5B81D491F89F7875DD0482ACA40ED6AD971
CF09B56FC242152A32AA438F9CC7EDE66A4D5ABC1883CB74B314E2B35F2EDA5F
612BD0C630191A308A7BCB73265A03A4D5248885701893999C2B0EF4D97248B8
537ACDDC54FA836A4E3664879F86946A35E576E2CB06C047C60BE17BBB974490
F2C2A1EDF1AA7A0F9EEC6F235BD0177EC78AA29EE9E8AE09E74CAD680FDE44CC
BB3D6DB13DC9FE4804AF24CB39EAE2BB0AFA48078866C7B64E856A3115144BDD
BFE0CF1A92FEEF36E684363064DF9CD667128769E136EF8045AC62AD4ED40332
62924AEC62639F1223DA2AB63B662E11DF6195BF0DFCB46388FE5BD8ABA9A548
D82905AB09FEBCD1382BA1F03AC7A40DC3BA756715C05D6A0889B9A4B56D4356
D0B195A6D436ECE0899A33E3F322166C4906D58BA77D787C4130CC124D4D36FF
87AD31A3DA8C04D13C26446238A61516CC706CDBCD5BE09C9DA073FC78B2764A
D64BE551D81A0DEFBBC3D26ACDB70D319B7DC2F54E660F5654B76B8B75D6175D
D9BE3BDDE6B8F4E61B130D8E11F5807B48F8162AD9F56655884B30FC07D0BE1D
38D64C83D10099973CE4EA7CCCF06B3FE91D12664252F91F13FF415933B7771B
751B50D53BC651479DC1948657C003DC96F55BA0C02D72A759711D9E8658D80D
AB7DA27AF3D058D950C01F012B38785B11CC5444B2A6491B0203F40D9053C463
CCE6CF66F5039669899F831BB5345E1D448A838B63F24BA33F0BC008036EA3B0
012FD6768D6C3CC9F93ECA9C92B31D4282D6B22609C761EB6293AA566026E60C
E5C2B11612DCAACE28FBD7E834D5B09212482557ED4F6DC74F5C15C31FF1153B
1E198BF03C3BD4236FB4CB77538DEBAA46DE526E8C20EEB7518C6F6495E95DC8
C1F5227BD844AAD1ADAC73585019C02664289EAC663BD690EBA95F681FAA3F7C
098D17056D99F7438C2A41D1DF7E785FBF27DF180269462BBC805B888B5DC6ED
A08D24F8B4A7AF5D7543A230DC39FC3667335857552E1D1DDFCF66AAEBEC8045
8274C18C63B44EF3690604E8A5B4CC9E36D9ADE2FE65F3A396AB2562569F58EF
EC957AB315EE39867AD51244F2A6E622F4E50822F268B36E90ACC2F1A40D06A6
E6253828142DB30D69D38B32C9DEC988407F5291AA398164F29F9D32BCD7B8BF
FEC9A82E30AAA70208C4B729D51B8B53DB6A4128B6D5A59B1AE394A426D4E712
9792AB12D1547186546995C54A787CCD048B65B8869796864A50592D1BFCD920
B333F32F7608A4F562FCFA73E1A0F80F8E6D6FE0F7BD74983B662A45E45D2F74
9190F8FDE36854B4986433F271B425A4BC672F91AFE5CFA9DFD9EB8E158B5790
98F974335FD442D06D84A0D5AF2D15E33E6FD4A751E0DE0D0F1D30BE4BE6DFD7
B265AC98F7ADDF7542016EEAB09D5A5FFDD224D906C735951602F1F52803AC47
4B8D68F36F13232BFA35CB6A306257576FD53B799F4DD361309D0AB9E48E3318
F61986283528183131585D267DBD3ADB9DD35C95AA220E019DC800071D8DCB7D
509D53F1007A552694627FED1C3E634B302B69AA57B57B4843BAED102B826FC3
F514A98B646084160FB45C81A2A2E80C869DC0D82FE10C22836DA8BB5CE31BAA
DEF2294641D757FCDB1862775085049D199892D115F6200A8D4D05090CC6BA19
028CF95887D7693E9B34BB12A4C1D4C533FCFD8ECCCF95D49C7AB03622FBDB2D
5E43C288BB54F7D668496A7300F92A5B99974D27950F5D9A7C2E9BE62F5262F1
BEBF529524F2364D99865CFA641C0B5631DB21AB29CF51831E39E9322DC3F544
5F21CE9529F461D0E55882DBA89287721E88DB039C9E9960E3157AA4C9175F44
8D8743E5DDF343D90A6A6D6BA49DF4095135FC8A2BFBD2E9F844C427A424BAFF
D1F1274B9CE95347861DD475C8493500953625456BF29E600CB82F19BBD1B57D
C04137FE704B2ED10B0DBFBFA33390E690404C2C17452ADBEDF4F6A7973897C8
118FD9A70070CDEF445F6EBD635ACA49CC166B0CBA6B26638F9C4A87C0CB352A
ED2351D76CB0739EBFE5F254A4872698F316AA65A7180210C21EEEA8AFCFBB54
2E4ACB6231BF399F03D5CFF3A31627D4A5B2C3AAEB366AC41801D35158082445
0D621F0BFA79658A6763F8C91EFFEA7ED0D3A441A335087EE575A772A1FE7F7E
6F7274AF0F47974FE10A7ADBC140CA04292E12362BA97B03F072F9E5DA58A9BA
6443736DBE54BD6470CF3B25623636E53507C00D7193C0B9BE1F049BBF47C8D1
E816F48007DA840580326E4924667894ED49874326BBB5E0187858287452D9AE
FF90F631AAAA8FACC8C8311FBE593A1AFCF36FC130EBB4CC58488C7979DD781B
B44F83A07764C5B701B20C1B10BD405599FD7B332D613DE45C6392AB3C1E146E
28F11360990FC62B84F1696AEB7A9AF3CC2695DC9AB761DF53A5208CC0719AA6
1F691444A4F1CCB4B2E04CFE7C9A33BDE0C2CDC1A0F87C0581A5413C9FD87076
57E74B45E93339D863F13A8AE4F39475F58309948CE1924CA03EF386E9953A47
62EFD239A59DE8937288DBC4F966DFA6D527135A73445780692EBD21539A57BB
D16B7A9EF3553F91553462C2EE9749DCDEF294753430215DCFC913C632119768
D531A58D16F3E41D36318748A5097826779B61AD2A64B7F54A75EED97AC3564F
500F0C499B93FBE563F2A90E1B7BEDA6EC5F112816B605AD92EA4D68D07E1095
F7C8BD63B4EFC3CEE0C66A0A0B1126812099BD5E9D5027FB070006E1A813BBCC
2EABFCCAA86395EEE0CAF3C1BDD39DD44086F5E13E5A5708EEF6C1CEA62A03AE
BE8FF676728B9CA9F65B9EAF7BCDF0971B5831B695C955A20835C24F1444D56C
BC0ED3D0496A016774924410591B22F6551A2A9A8A0CE900AC7F53831BF81156
AA3C9B1154D1959FE6E01E6350667998989F73CAD458E613A4007D112F6FD4DC
ABCBA50DD400DD415E2434DF0EC685C2AF5AF6855F867AEEF0CB0FAFAEA202FB
277577430B18D7807805D5244CBF632A7012027D40982EE7A294645E87CF6301
CDB0DE38549248B70A52EFDCC1296FEE317613B0A98123C0E7FB2C71823D0A9E
29D8B7014E71AA97E7464906A613186F1B4C1F4780356B48693F7B6AACB0033F
C3E50CE6E88A6A6F0CFDFE3B06F90041D351B84494D0CA57EC302E7BD7AE39C1
277A4DA8C13020287E2B177CDFBB885F52DFE28F530CF82DB6FA3B1F69CFCB16
6EE348DEF089459AC034D75A9A20ECF987D5F27B263E705D4E50F2234F01061D
D6CCEDDAD4FF19613B6FB02821E294D2099149509B8EFF406FD1A491DAB168EA
47EACEAF5984BF409875EA5FF37128F061DF24B3006344E88464CB96EA4BFED1
44818082D5C3FBD733C354EF79B0123314E96387F5DE02AA2A94BA1B607E0551
E4B5522AE9E6ABC7DA14FFD265E2B48DA807FB78CDB4499DCDF2E2F401DD7A7A
451D351F1D4F30CA550E106742175ED8AE57BAB26C860CD32492F32F6CE23B4E
FF5E91AB7D2503F1AB5B389F2945F5024D51CD78D79C27D72047F914BCF02A9E
74EA15B44AB8373254118FCC204693FB2B063ED09BF1523B3490783FC0F65A1F
BC5A9809739960EA206D7A1363DB3004BFD28EAA6231BB5140F5B1C68C278845
5A0FAF245688F497C772858EAC005B33ED3595BB6014B0ABFDA0F8DF996BF179
590647241A594E72B93F285F7CA3CAF0F2D7947F3A08E07BC6A88F77BA13036F
2133D214A42C1BC1EB9C31FFB9DC849219DC88223B093F72E6E3FBE028D514C8
7AC808BA55680AC4E2773D3A2253721DB8A41FCB07DE863B245D1383CF062736
031793822BFB0426E417A29924208E9D9CE9FE92D51841814F603CC3185CE2B2
03BE4B7A27D98AFC8C6A76C92C9C4323920DD0E8D2382C27F0B6563BAD220834
801A2E4AA013B52DFC10D268FD10A66D5A1A8DC71E80E4CC9AB115834EAE8FC7
8A2606D92D9E222DD192CF6325DA931EF5F335B4FF2877AA29ACDD2EDB8D0132
D403190A252E649833ADC6F86E8381BC5F8054F7E39C4AB9D1FEE07C092BD350
0DB48C6BF50C3AC5E2DD72427D6F4BE65F3B9DD00955C2E668A6E5DDAF7D23B3
996190DECE47551B9EFE256D560689531FCADAAE19AD2E1ABE6431C13D0D1F71
7B450C8015F4ED8FBE806396981FA2E56273BFFD63658F00FE9CAB3D176AB43D
E3BE2530FB8358437D6B2F7680FC4B3379457D12DAF3266C22024B89EB100A30
A5DCDB5C4C4B5217D4D6027A8E0E814B55DABFEE6D172BADCE060BA09E12D8D7
CEC4254DCCC6605D2881629C8F8735D281FA31808CF729A06A68599F4B615F4F
012F4CC95F06AD8C3113B4F4F0B4C77AD38A3CB7259BF7BF552924E9995C05A2
9BECB63D9CD4EADFF5A775A118D7AF3A9C3894494443725F46AB2B4742DF1CDD
B64BA30BD93668B7C469606BD2EEC6A212ADF50DC194D051AE2B3175F246143E
50397CEF54C9BD4FA959867D072CEE580FA9A7ED025A6AF2FEBF1FDC9FF589A9
A85E92FB3526563BA12138F1A83C21139A0D061E352A1DE3E1E2A646956DC8E1
89AE23DCF0F51DEFCAFFA746997EB8A6C19730BE9B02D52AB6B61995CFF99014
CB35D565208B017A1B075BAB97B63E4DE1E0DE52E1FBAC19D1F4046AA08DC1E1
941F81005FDCA8197165EB9E410403DA54270BFCBA2FF5C2AA75111125DFE3DC
125133E4EF0FABB276DDCD6AE494FCC00ABC5FDFFA2CF84DB3CBE570F37B0921
ABC7A56DD1B20AF995FD3DC1665DE22D1D50F42EEC117CF78B7FE456B67D88DB
B828AF55856912665C92412FEC56022AE6E86A2DFA80877CA28A923F7DE784FD
656ACDD603A5741E2684B05B5D1D8DF21B4F5A0933AFE513376544213D240BB1
85ECE757E80829F151DC8EC4E171098A27CE46EAAF3E000C924520B4B846EBF8
25B4B6D6D8DAFF6F8BB31305D337C101D8F041B35248ED009EDCD5FEF7C172A9
4C74CF33B7CC6E055EE5CD4F4A8981D71FC8266522921AA1E7ABBCDBE4E1E39D
A53BAF6D16D1CA291CB2586975454143565747648A399693FDEFC60CC39CECF4
2FA5571DF9942A5071BCD3B3A06BE9936461E01E23BF068434E2E79B8FEF9DD3
4BA87CB222E479FF0132562B464D8F459EDC80B17857464CE57ED77E5AA188
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 21 /lambda put
dup 22 /mu put
dup 30 /phi put
dup 32 /psi put
dup 33 /omega put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 70 /F put
dup 74 /J put
dup 81 /Q put
dup 83 /S put
dup 87 /W put
dup 88 /X put
dup 90 /Z put
dup 96 /lscript put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A44776B8145EA56C97B1A68A3F2B0FE99F1925010FA
92A56FCC829E6F31B06992292E4EE84168FE7CC65B750DABE6FDDB88E7149488
A3F7B9477E6F64C0AA0CAB9C389D718F862CAA1E6225E4AC1C8542C823DCE623
B4DDC689480FEFE89E5D655A6B1333A3DD1A32E3C9147A9A62B1265E2388FE0C
31080AD4BE25367579916D1325EE4E5C987C4AB03ABFED3398A0F60D78451DFF
F6922E7D32715FCB42C1EFF11924FC299504F18EBC39EA617859F76BF17EE922
56C9064651344D87EB99113B69ABEE26DBBB514F99D27B0476B7FBF4EC3587EF
2FD6C2EF6FC7528FED1EB99F0B07DCE086DF9C4D8E849B7B6CA1FB13FCAEA0BA
4B6E8407A45FD821A0FF7689A5B9CD79AFFA0F3E44BC571B2005E6B5ADDDC54C
D565741EFEB6AD83F2D089A731AB005E19C5E93136D75C97D9079BE96A14063B
2E672FB1FF37E08E90F7AEE5283E6FAB9037AF794A31835528FDEF370F268160
4DAFD4FC1B24304F4B43506147976FD1653CACA912F5EE072FEFEA48DF7731C3
81C595C97CF0D627D7B8D8C7867B152A79F0CF34F10E4BE80E5FA9FC6FDB27D4
FE9AE5771469F2513A05D14FE18B4F4420782B8C232285A69A0DF5E71693DF92
6AC8D8C9BA82C32F7C85001376EEE2D5F6311CE74E2425961DE3F8A1DFA8DE33
46C98CFA59878D68854006C6A444157D7BDB864CFE04BD7CE6B991404CE8D4B6
F45C8F89BD892C1C593479C12A02C6B64A992C7789EAC313F49AC62E9F21ECFF
4D725923E65F78756121F1FCC9C60A502082713A47DD221C92FC51D349F94CDF
F6FB13775C3B77CA29AD59B9038353DC02F1F80FD5D925077CA5383A0210DADC
91AF73A73A6AECB8B19844EC5A785852D7D793A0ABE9205C1E4C8B0C7071A2CF
D69BA4C9533BA367E1DEE6FDD954E32C09A25BE2E75E9A2BD5AF5AE61741A790
3C924ABA531513DF5D0F84EEE16026BE55F056542BA87A1F340AFDE5BCAB6267
3A541E81288D043F1AAD77C336EFF6557778B3471CE250C9B65FDE4D37CE34BE
FEE529F75A04B047206E1EFE7895D8F8A329FA873BA40BE686A52E4123E75E15
6E335F79D720F377296E7BD942D8DC2F30BB7D682B5CC8CF15FD4214083A4D04
BAAFFBD2705F5BEDB377C679A8415E436D0986F82AC2EDA92BEE547CF99B24EC
2769974449CB96EDBE36B5EC33373208076B160E55CB8E16BC4783755B94AC42
7CFF935BB47335F62F396CE16B904FA39BD25946D8B9F720D40B938BDB99202F
C1F5A8C806EA0A80D58FE9C664E0C6BEF9F9364521829EB64D2DFF23A3AD6449
B64900B08C9955805E410928E48795C915B35A2D98A0F172574A504D273DE3AE
3DF401ECC063F463B864F52F3CD60C6046AF04E150D0650AC0B8CBFA7C5EF215
74F20903FA6D9924E647B05E362279586C42D0BC9552FC852003BBA4796F7800
458CAC49CA1C937E2D0D970FD0DC107D09790C6919A19D108ED803723D7955F5
A262651D73C61F0CB45C4C4F2B5B4F16A6DCC1B32321A1A63FFDF770FD2C0E7E
D79E1455437B4BC6C6233C7E484C8FFC08B9304A1AF6C82444BB0C2448185CEE
6B11A82AF6A655A3A43E1A5EDD697926FC83528F49C844973685E6A74778B189
640405489138C37E00D26A719CA606E74618F1A7A5E7B261AB06FB045BF5CF75
98FF737AB8869FE5B4FC32E7CCBE4144592CCD805547E8B9FE54336B0DEC89D0
81D9CBACE5B1C0BB167A9530BDCF65550A8A8977B898D93E62041C8CE083E700
D658D4587CAFD0C4F6A1BAEF7069E448B8D3E5A732A52154E24D6B97801D0837
20CD9CE53B82EFABA7C08BB775A628EECC40B2FEADE8FD1AF02813442B3AD3B0
95B2F00F553CCE875033615028E8BB9B16A73A1D3F41EE764ECBF5166A194300
13C1052AA534C5D81A4CDA1C29EDC3C7ED9002FDFF05818820D7A59590CC2233
8F28C500AD0C348D55A39A5ED16FBF89E75CF3BCD36A06C959DFCCBAC40E9B37
90C4D91B73F4A533C60AAEA79A015701202D5D95A583AABDAE001102880679BE
4A13D7A7BA4C51C46008ABEA64DAC9DCC5EECBC81410C55009E43E5E2D325B18
BEC1F9BDA821AABFA38105CFAC19186EBDFC36823B65E23D5AC591E4523D9EA9
3A70FF35E05C061914151AE16079970986563E7758E610A06BF3C78AC52AE529
73AAC55EB2929771FECB6E3E3DFF243DE2EBEFBB5038AF29D1B0EC286E7C3FDF
68643CD8C78CD76090B616D16DBEA2035EA41F4501927C83EA262F4681E5F9DD
BC21B50CD7FCF075130F39EEB088CDBB1701420726EC67108CDAE1465285E21A
D8B1142223E176CD7BB095D6C80FAB6671AB9851AC8A773A041BC5D1E47E9A33
6B1FBEBBD5945C592F0226E730E0640F6C59ACA40F284593B8D5A1F04C92A479
D244623DCCF95A6D6F3C9D945E47D1F2ABEBA23F8CE779FDD75D43AA6C399ECD
B0D69080ACB0AF0585ABC1359CA462E3C1543FAF010F121CA5E70F8370471B95
A60925A090BC7BC9461FD18A25D3CD66813E1E4A0BDD359B346B1F87830151B5
D1F6D0DEAB2E34D98BBAD23891CC68D7712A4314E49A41B54D83260800B2867A
8316C0B579C2B1BF60CBB8E99B31E6D7F8C07298B2EBBBF23FDDAF58A9A4BB20
645D2B8BF859C8E410A1DED6BD76E8805927B25F7AEB6D06A9056FA4857E68BD
B5EDAB2538D28A07A9D4E944E682855AE6E0FB98AFE683254D25E3F0F5DD296A
60EFD3435D36E3FBADD1511D07D09DB2A770838CB0745539EB8A28165771BE04
7D13DB0024C3F6BD4D1B9997140FF186CF9A4C1525A75F3175FAF4109AD7F6EE
6284C71C25F60A9D5FEAC10A4DF00D6DF87000DA5F518A0F2253DCE6B31779AF
2F056DF9B824792B87AFBE6EF2B82A3CB6F9151D7845C594CB3AF5C5AB972E52
AEEFCD2C3F1AB122BB8A52CD54AF1874C3FB2DE492D3195345962DED3B80B06F
23F45B663FCE9A5EDEBCD18C4FF2467744CC704A58E19C556AC8EADAD9045636
F4CB1AC487B3FAE981DDF3C6E87AF4119FDAB97FC61C31BE97ECAECFFC3255B1
5D5AFB1A9F8A6A84AEE47EE91AAD3A9096F57B938C90A7AC0B1987FEE08E6BDB
01284EC72C1A62821E2E4555BBBF9D9CDB6AA0DC144DBB2DAAA1AA1F1CA3676F
574E113BBF41B12979B46D59C93698F7F734E765B8C596FF6E5425489091F225
4DFB2BD20C62BFEFCFFF2615BBFA10B42A9094C0216F30002B162805E0D8D3DD
F8BB896D67F3E9BF4DEF60C9119E6B193ABF1BCA2D74E5C8337DB5C1F84C09B4
4E3468CCFED1F9DE5B1C6C78EE4DA4EBF7A47217253E5D404FB32EF02FDBAA2A
B23655EFE0F72E3F95EDD79C1444318C71B7B66C75504FB8A78A5EC3F6A32FE6
7A191A2E6EE9BA9C478FD7B4FFE8C37C68E59EA2437FAB86FF35AB3447E76105
0A2304C900DC4404E1CE66612C1EC35BF3840EF89F77DB6F8D721A3614331792
901E33FA89AA8347637441D06DCB1C4F2AE37E5B836D896622D2EC9C0F78A120
6A80797E8B24EABE006083C19E49A8E65FFD919CCB125076A8080A161E2A1161
97BA36F98271FB4EA8C8D472ABCB4939AAC040582F12A8CA2BFF586103DC664D
6AC482B18332C153FEE5922A47FF6F2126D4ED35FB1B69AB1A37EB43FA622EBA
1698CF908E72FD1842841C7A2AA3DFB543D265EAC5C0917FC6875C7E11C41D30
6A25B63525CEFC653B9E8096951D9906C81911866D8F56437D10F7EC6A21C34C
151B4353E1A9B91CCB3EB15CD3336519DF872DD7A677AC40CCCA0FDB57C2DB8A
F436EE243F1D1C0EE042CDABF8C2C71887CFC9642C934B7DDDAFA7E40D0A0BF5
4097ACD87A109C8371C30F115A0CC0EE470B1CD26C7F3E4182EE70D7BF4AA2D7
0AE22909443BC2CAEDF83BB009EE818841146DD6A1E577B36404E43B0FED188E
132450318C2100F57CBA146DA1245DDDAB1BEF0E0ACE1735C35C002E0F4DE60C
A8D455F5D9A85225B04B3EF72803ED9E0F297D698CCA38D61A1B3E565B01964C
BECCE0685C7E22BE36BAF4D4B963AFC84C7652667F285551C356BEED95B2F6B1
345DE598CB86774B7A0862D49AD65434F0357830525E280439D87ABCA2DF2A1F
8852955DEEE873B77C51974ECF949AF00C1628871C4749FC12FF1983ECF7C438
FC661E8C42C8984E545995E53876FB476B5D671B461E705EB0560972C3350DEE
5D136B6AA3A1B8797230EAAAB86BD6FCE5388E4FC711E8F1DAA03AA644F2F410
669F2330694D05B818FC12C165A5A049D72E001B51AEA0CB7572D10B11A6ACE8
4484046C2ABBE5ADF55A06537D1E5E383318A5A15A110D91F79A1E27F6E7140D
1C56749FAF83ECC6C7B38B789F484A6F3A026DB5B5BC34297E5A9CFA85FDC679
6FCF76CAC6BCF8F93EBC7BADC86B9FB86447A17D029AAB11C5669FB7D5B1370B
373206320B983ED18B8CC61636D8FD5C6A966F8016A203E7BD0084E4AF296380
B6281646221AF48F0181B9069B2D048CD166C6EC4629C8253CE51D820C2B29B9
5AF0EB3EAB28E97AC3C5C798DE6B2591977F9ABC96FC7E3D18B15513A746DDFB
1AB62F69469688C894654F4DC609D548A155FBB826F2C2AD450125D7DB053F47
6A13C79F2618913CC5CB2B4DB28FD92D3A9A84751AFDC6EB5A3984D3033AE97B
745FC126788E5F41AD43F2215305E8BF8D9CAFFA4BC15B304CC367BB7BF68865
560A135A294B450D08BC97099566421EB5D2A6F59F457B229209F377FDFBA1E3
9864DB03BF50E85ABA77AD09CF2C1C4737E8C75C7B2D5D9A777DA1ED776F9055
380AC872375CA193A80B174FC049AD2BDD6407B02DFBC3EC1CE0184ED2DD1BC0
7E53C57A1BE2C6609E5421F303F9819CA9E237D2E674839CEDC7A0238FF10AAE
9D77B4790EDA9C93B6C186188C3431D81F2CC1123946570C6F4F94780FCD69F1
DD3FEAC15470033D3D07B5B6022574702B588401941B614D3AC747A8A9718BC0
0E68CD4CDE8843A639134591FB4BCF45837301300E693D7281AFE759F9881C3D
766B48121BD2B0C8A658B7459F772434FA4DD410D2BF12A0DB15CCABC36BBC87
68D11D40A1FC81EE00946047DC36649C1A104CF870A90BB4271A58E1A749B584
D51111505481641F0D95802153BDA7A291EEF2A013F93800ED5023DCE04B9085
D794F5DB2A59524828BED67AB5CB54E5B0B18B3F211CB87A9EBAD14DCE306C88
0E4AA27ABAB8E3779D2D5A69D67787A8046DD0AC20D75F4A7FE85214A855D137
C06D071097CAD8139399EA64E86A7FBD2E38CCDC9AAB3C3E7E4712351D1260A5
B2D719B294EB1DBA8E794E99886424C8DAE25B8632DDAC1414D9EE555631F89E
E4855A521224E6698259EB19A3FE1DE1FEA690510C814EBFCACB16D308BCC693
26083F7C6FBBB40AF1DD05EA072083DA2CC25BCE63466F648C2A73AEA5743A50
8C4451DA030ADAF1C119BC5E427917B9967EF31A7103B94D297C6862AA2BA320
A34319B27F569F83089511783DA1840D6971E443838E42A1C4C06CFA6617F5CD
613F1CA214B955C776627BCF8AAAB41BB3CD65B83BDE7E602B79DE9CCEF1CD88
02FF4F8E484FCEB6061CA6100292790468F86F87150FFE21D44623E3A2988A98
A16B68738A38CE3CECF9803376BAD3AE5BA3318B049FD2B0A60348340261782F
13656FF9498663E2985CE838A710A1ECC37C5BABF896D0F759829D37CB25EA6C
E5E33E172FEDB51FD43943C1CF7D9A17BF06F1B702F08BD32502FF69AA810CA3
B49D61BC9126E2564DF1C0FB5BB6C17AD2CC728F81FA572698CCC555B6884723
244DE049DC6FA4FD2C7AEA8F2BB3AC2315F067407E84DA1876A579D8633BD1F7
D69E3F6E854DD6D85D3D253293A22B67038DD2C44EBA7488267F5B4DD5CC191F
5109091C059E1F9386CB9C62E2ABF7F2E2B076B0B48D39A96036BA3E79CE655F
636F2F5647A1D96C5E57AFBE9224628D9F247E8E4ECD4AF1A1C7883F263D89C9
7077D23E6D759C79CF45DACBC1D88BF8CF20DCDA1CB5179F2FA39E6D98C4A3EA
A9CCC77631E53082D6C463B464FCABE7310FBBECD25672A61E6D522E1B32DC40
729F8FB1933E9D8653C6CDB4604980CCA3A61FA93F7F6847FC54D8624220A2C0
16CA75D09221ED44D50A470A063D4AC1766A4D3915BAD51A38062B37CF954B56
198AECAB05374D982F391BEBEB389811D25AE19F81FD0CD51B74276180F4AE11
306DEAC7641E7CFE66E418810D28022A5B3493FAC87A0FB9AA4E600FD72AC5F9
791E1F70D431EEB9D3FA203420B00D9C4B6CF86D0A419AEE50C77B9917953DD3
AF87D2DF46EA2F8F8067FF1EB9966C336DD9A3A854324343BEEB4F291B0E216F
5CB91A96C76CCB6DFC7FF290329E2DBF16F1ECE112E0D66DC4CC51638CA7698B
9837B62FD3386B40C4339F96097AEDB9F38E7DBFEB65239C59C2FC312ADD7840
366BC61621C5A04CFFF91FD52CDEA7FA37D36B69DC7BD24B543EE83D4C1FA066
8E1DB77DF0C97BE485918BEAE4CE2647AEFE80CD34059E0B3C71470D526B03A3
887B6F22B84B3E7F7470D2AA0A9E70DA9D1F88D914659CE4CCE8D50E61189F6A
3E1A16D2DC4CB5959E36B65FA6257BB5FF1356D035538407DE74337B5B22EEAF
A93B3AD8FA433090FD97C8A3DA8BE14BF23C557960FA82274451FEF7BA66E30A
16E547E464F03B2BB95151B2FB0997E30E8DE576C95ECEADD20B50C29336B40B
3F3A79270E64C8488343B369803D4B5CFD5495E3EFA1C453CC21378AD55D5FE4
3E7A6B81D47CCED35EFD8A5019ABF9CC5859E48DF2FF326665EE79C4807F68F6
97DA2A657F44A4BCA06ED04EF747E9496C3A5B4D7B4CC19880E4809F0C14FDDF
BD4C4BAEB0EDF3F633ECA0A04C29255915DDB278DAE138653E8534812EBD6838
BBEB529B5B681E18EB61DD2327F3D52EF3151F5D703A3F3B18DAAF658F25E955
A2E452A07AC316FED2308E23A7EBCAF9809786AF3159D4B33D573ADB8BD12C3E
829F64F31DE797548DA39E393673395563E5672B28861C2BC54DDA60E1DB60D8
486DAFE1DDC6A89307E91EF1338F97B8CA21B66488561C0DE79F454BEBC8797C
9B81FB4ADDA5F906CA030A45F6A740B11D370FFC527986B1BF0D5E765ED50347
B38C4FD1BF4B06A1CDDE9857AD3C0EA9FD0996BD5017B7830C693C0703F527ED
DF649AB3A875065D6F1FB45F074B24A8BBE1392FDD6F851F78D9975F1BD47F4A
A9E5568EA26AA80AC26D4B688A0BB3B8F026F81868BC7FCE4A825343366DCBF8
DB6135CF707E421B5C4FC0B9CDD25753A224D404375D5F8E98921EEAFD82A924
7E8D891BC4A236CE174B4211285153A04EDEDB0B23FEE8F74173D8BC1F95E23B
76E238A510F1CC1B7F7F911B80B2C744EA82DEA88DC66B8058A68A7CFB590083
5862A29946F43B17EDE4070B49837DB720541B611C782A883EE459CED42AEDD9
CAA0B77CCF5F4CC9A326DA8F78086452D354107798DE975F9505C046263A41C5
CA0B60E821011B1C20EDE9DA13B6DF1DFBDB3550322A3BA8F9A7F580E2EBDB6A
963CD7516D83AA9BC41826C942014136AA3443214CF1E2B9A81B32691EC255E9
A95752F850A9F426A902AE211FE782977CB39422E559ABD43F83B8573124CAF7
7826DD4DE728A6B2BB65B107713A4825DF8C5E3C56ECCB04216EAB023C68E398
47646123B5FDFB07C00C2E8B622E02BD1DDCCE1BC4C1ABA1E31BD5C5BB3F8C38
1D6C004567376A1ECBB86B76F03C6A5178F0B72855FE0EAA2F8AA094CDBDFF9B
2BB78284BF091C9DF2CBD3014944896C9C03F2ED96D56BCC2E50C8C83BCC467D
B66DD6CDA20A8B32F3CA9D5D1456F85DB350E8BD5478EC9359FEA0CE0C167708
86A98E088FE9B6762C5911DFEC90BC332E1F0FB3B0E5EA174DDA3630378164BA
C6D09A6585462FC9F58071558E2DBD7CF459E78C506577A03DE99BB78AA97C0C
263A89A9050431F9E24E80EFE9D3F510438E67EB7A997DCCA87E01F738DC21B8
57609C86D5366556A1C80026A5E3753016A79F677E4D2A3E23D26963BA130213
D08B0C8125D475ADF8BC91D25D10FF7EA695AA6576D5C2C0C80C04CCC3DE2377
C97625EE8B8B0B50E1A49562E4B22D7D1C0EF15861304BE60613C06D6A926119
40BDDE83B11E41DF40E45931453664B75A5FA13952A2F1A37471ED56B831EE42
6031CC6E824B850589B0632DCC798A2A0D6371C074C48FF7152E37C3D569895B
14A58AED46663091457271E372073191B21F45B503B31A189360BF626CD0EF6C
3EF3AFD3E935A27C55D98CC1A672D96DBFE205B3283BBC97C3264AFE3DAB9A79
F52701D6F7F232223B9C1898DC65BC11FE37DACDF32B5124876E22D469B27146
2E882BFE3CE783D1708C7BAA626E433569AF86320EA5487A9D218E7534F2E143
F1C736BC5FC5A82461A0425B1A42103CFF3FA26D2780299260C2E6014D662875
D0931C28FC24A6A26D22479F70E12AEE5D6051FBC2B4E515FB70FB8BB596E7B9
A7DB8AB5B59D44E4DDA794EEBC0B92A99C9FFFA9A67964EF98C4B9058942B52E
D4F48692C08BE6BEBDA3EB06E767E140B8D84C425B76A0152B575011B1B29777
09D65B44D7555527FD58A9F28CBD421A236CB8F72D1D8394F85747CB54291EF3
48609F7F1DA561E99088A51BB599FEA7F1880C119939EDE71474625C14F388EB
35C38F2916B75004203E9C274F75C5B05823EB75D0510EF92549A6D9BC5B307C
74F63ACE479E6BED5B83688DE7F54F30AA8A0BC39E22D872029EB971318BD20A
5D1F9042F4C916A7F8269578B2F40DB3B1521B09397D403867E9FA04AC7B13E2
F282B54036601939608E00EB1A9D0F1C3BF251A2E9348E1ACE7DB6F9753CF473
B5D40D2010B53D496A164C1367233A97D205AB16C32CB93039070E430817CF39
733244C420A6F1514E725B6BA654E56E66BB882ECE86716A356C3E735945DBB3
45AFE152F503222172D9BDC225A6AC01B48BEBCC6E4759C651B0B606B652C13D
F656E1E911C88DE7AD78B3C31A93452E35A1C078030FE2D66B39404BA98213D2
7F70B899CEDB3DB3CC5557196AF566738AF4F26150801BFC24F14724EE554F45
5EF4EC2523A2FA4281B356FCD070F49293FC367F6F075CAA3ADC712D07A6CD76
8A42943CFA204AA989366104107B89E010878BE6FDFDA5A54296DBAFCD08CBDF
1158030E26C3BE54053B5D69E0E4EB19D6BE586985007A53A84FA68DA564E3FF
29EC0795C3F4675D4F71F567D92E97D269970923FE73124B27D0A6022C5E697B
B58FEDE3DF2108DA483D7259968BC32094D33C47CA84018DC02C6F7CDF064FCD
FF12921CD305BAB190E68605119AFF28D6D6777320E8A2C55CF62C03F538C7DD
96961670DBA60DCDC3E1CA78AD718D53EA2F0B5292D5DB475275F2FD12B8A3BE
EB41BCF295C3EC2EA3DFF7A593595FF05869DE5BB490DC00EE2B2D178D31AE54
D8964596F155B44812C05313EDEBFB1326DE92350FF0EE7C45BF7591EFE3F0BB
12CB638710C8C44A16496545F2723F88861959980767BA90766A3C47BFC80818
F2DC6347DB1471CE55822A8A2044B66F5F80E172AEC21CB8DD31B9101B6DA886
F07E109708DD862FA14F680EF89074E9DF4EC5FA9CA8212F81F89BAD4EB791A8
3DF88C1D3AAAAA0C9B45A4C0D19790E8DF004B98213661ADD19DF1B9D346EBF9
D71E8CE2BAF55054E4DB35D8E37E405A96F7C25C0F631BD07310B78096C71728
9BFC681BFA25947257021F7A1686DA12E62E1E00F61744935F26A24352C594D9
A48AD560C88FC558868BAC6CE2EAEB3EAA7F11217BA87CFE2F8727BB8AE310D9
BB91D6E093C669C9694DFE829F537F1FD84D632783B419BC92C79F2D20EE5B6C
17C274BEB236D9885D5E5182B9A38A46234C3DFA7EBB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (paper_icassp.dvi)
@start /Fa 205[25 50[{ TeXBase1Encoding ReEncodeFont }1
49.8132 /Times-Italic rf /Fb 139[18 26 15[29 1[33 18[44
55 6[41 24[22 45[{ TeXBase1Encoding ReEncodeFont }8 66.4176
/Times-Italic rf /Fc 172[37 44 3[48 59 41 48 1[22 2[37
1[48 2[48 7[33 33 33 33 33 33 33 1[33 2[17 22 45[{
 TeXBase1Encoding ReEncodeFont }20 66.4176 /Times-Roman
rf /Fd 205[29 29 49[{ TeXBase1Encoding ReEncodeFont }2
58.1154 /Times-Italic rf /Fe 133[32 37 2[37 42 23 32
32 1[42 42 42 60 23 37 1[23 42 42 23 37 42 37 1[42 8[51
69 51 1[46 42 51 1[51 60 55 69 46 1[37 28 60 1[51 51
1[55 1[51 6[28 1[42 42 42 42 42 42 42 42 42 23 21 28
21 44[{ TeXBase1Encoding ReEncodeFont }53 83.022 /Times-Italic
rf /Ff 207[18 48[{}1 41.511 /CMSY5 rf /Fg 205[28 28 49[{}2
41.511 /CMR5 rf /Fh 150[22 34 90[31 13[{}3 41.511 /CMMI5
rf /Fi 165[46 41[38 48[{}2 58.1154 /CMBX7 rf /Fj 165[58
90[{}1 83.022 /CMBX10 rf /Fk 205[45 1[19 26[52 52 16[34
52 1[52{}7 58.1154 /CMSY7 rf /Fl 163[194 9[60 82[{}2
83.022 /MSBM10 rf /Fm 148[42 23 2[42 42 19[70 11[60 13[46
5[55 24[65 65 2[65 65 16[42 2[65{}14 83.022 /CMSY10 rf
/Fn 154[46 2[46 9[120 88[{}3 83.022 /CMEX10 rf /Fo 194[51
10[33 33 33 44[45 3[{}5 58.1154 /CMR7 rf /Fp 133[32 1[38
6[30 2[41 59 2[27 23 14[45 8[52 5[56 37 3[42 1[54 6[34
1[20 37[39 6[30 35 13[{}18 58.1154 /CMMI7 rf /Fq 129[42
11[33 2[42 46 69 23 2[23 1[42 5[42 35[65 4[42 42 42 42
42 42 42 42 42 4[65 1[32 32 17[42 12[65 60 4[58 3[{}26
83.022 /CMR10 rf /Fr 133[39 1[47 3[30 39 4[50 73 1[43
34 29 4[43 3[35 5[57 1[69 78 3[51 1[66 6[46 3[53 1[69
1[63 62 2[65 1[65 23 23 24[52 54 1[49 7[50 48 5[34 37
43 47 12[{}34 83.022 /CMMI10 rf /Fs 135[42 4[32 32 3[46
65 7[37 42 15[51 10[32 73[{ TeXBase1Encoding ReEncodeFont }9
83.022 /Times-BoldItalic rf /Ft 75[28 11[28 17[42 1[37
37 24[37 42 42 60 42 42 23 32 28 42 42 42 42 65 23 42
23 23 42 42 28 37 42 37 42 37 3[28 1[28 51 1[60 78 60
1[51 46 55 60 46 60 60 74 51 60 32 28 60 60 46 51 60
55 55 60 6[23 42 42 42 42 42 42 42 42 42 42 1[21 28 21
2[28 28 2[69 34[46 2[{ TeXBase1Encoding ReEncodeFont }75
83.022 /Times-Roman rf /Fu 104[83 29[42 2[42 46 28 32
37 46 1[42 46 69 23 46 1[23 1[42 1[37 1[37 46 42 8[60
83 1[60 55 46 60 1[51 65 60 78 55 1[42 32 65 65 51 55
60 60 55 60 1[42 7[42 42 42 42 42 42 42 2[21 28 45[{
 TeXBase1Encoding ReEncodeFont }50 83.022 /Times-Bold
rf /Fv 152[50 50 102[{}2 99.6264 /CMSY10 rf /Fw 134[50
1[72 50 50 28 39 33 1[50 50 50 78 28 50 1[28 50 1[33
44 50 44 50 44 7[72 3[72 1[55 4[72 89 3[33 5[66 2[92
17[25 1[25 44[{ TeXBase1Encoding ReEncodeFont }31 99.6264
/Times-Roman rf /Fx 138[50 2[39 1[50 50 50 72 28 3[50
2[44 1[44 50 50 7[55 5[50 2[61 3[55 1[44 6[66 61 21[25
44[{ TeXBase1Encoding ReEncodeFont }20 99.6264 /Times-Italic
rf /Fy 165[66 1[72 100 72 72 66 55 72 1[61 78 72 94 3[39
78 78 61 66 1[72 1[72 19[33 45[{ TeXBase1Encoding ReEncodeFont }20
99.6264 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -115 282 a Fy(SOURCE)25
b(SEP)-7 b(ARA)e(TION)25 b(WITH)f(SCA)-9 b(TTERING)25
b(NON-NEGA)-9 b(TIVE)24 b(MA)-9 b(TRIX)25 b(F)-9 b(A)k(CT)n(ORIZA)c
(TION)1056 523 y Fx(J)n(oan)25 b(Bruna,)e(P)-8 b(ablo)24
b(Spr)l(ec)o(hmann,)g(Y)-9 b(ann)25 b(LeCun)1533 756
y Fw(Ne)n(w)g(Y)-11 b(ork)24 b(Uni)n(v)o(ersity)1079
872 y(Courant)h(Instittute)e(of)i(Mathematical)e(Sciences)1277
988 y Fv(f)p Fw(bruna,)i(pablo,)f(yann)p Fv(g)p Fw(@cs.n)o(yu.edu)p
Black -146 1230 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -146 1230 a -146 1230 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -146 1230 a
0 TeXcolorgray -146 1230 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -146 1230 a 0 TeXcolorgray
0 TeXcolorgray 646 1313 a Fu(ABSTRA)-5 b(CT)-146 1457
y Ft(This)15 b(paper)f(presents)h(a)h(single)f(channel)f(source)h
(separation)f(method)-146 1557 y(that)22 b(e)o(xtendes)g(the)g
(approach)f(of)h(Nonne)o(gati)n(v)o(e)e(Matrix)i(F)o(actoriza-)-146
1657 y(tion)d(\(NMF\).)g(W)-7 b(e)21 b(interpret)d(the)i(approach)e(of)
h(audio)g(demixing)f(via)-146 1756 y(NMF)31 b(as)g(a)g(cascade)g(of)f
(a)i(pooled)d(analysis)i(operator)m(,)g(gi)n(v)o(en)e(for)-146
1856 y(e)o(xample)16 b(by)i(the)g(magnitude)f(spectrogram,)f(and)i(a)g
(synthesis)h(oper)n(-)-146 1956 y(ators)k(gi)n(v)o(en)f(bye)g(the)i
(matrix)e(decomposition.)32 b(Instead)22 b(of)h(impos-)-146
2055 y(ing)31 b(the)g(temporal)g(consistenc)o(y)f(of)h(the)h
(decomposition)d(through)-146 2155 y(sophisticated)f(structured)g
(penalties)h(in)h(the)f(synthesis)h(stage,)h(we)-146
2254 y(propose)f(to)h(change)g(the)h(analysis)f(operator)f(for)h(a)h
(deep)f(scatter)n(-)-146 2354 y(ing)17 b(representation.)22
b(This)d(ne)n(w)e(signal)h(representation)e(is)j(in)m(v)n(ariant)-146
2454 y(to)27 b(smooth)g(changes)f(in)i(the)f(signal,)i(consistent)e
(with)g(the)h(tempo-)-146 2553 y(ral)22 b(dynamics.)29
b(The)22 b(proposed)e(approach)f(is)k(e)n(v)n(aluate)e(in)i(a)f(speech)
-146 2653 y(enhancement)17 b(task)k(producing)c(promising)i(results.)
-22 2795 y Fs(Index)c(T)-8 b(erms)p Fu(\227)30 b Ft(source)14
b(separation,)h(scattering,)g(non-ne)o(gati)n(v)o(e)-146
2894 y(matrix)k(f)o(actorization.)482 3129 y Fu(1.)49
b(INTR)n(ODUCTION)-146 3316 y Ft(The)21 b(problem)f(of)h(source)g
(separation)g(has)h(been)f(widely)g(studied)g(in)-146
3415 y(the)h(speech)g(processing)e(community)g([1,)i(2].)31
b(It)23 b(becomes)e(particu-)-146 3515 y(larly)c(challenging)f(when)h
(only)g(one)g(microphone)e(is)k(used,)f(or)g(in)g(the)-146
3615 y(presence)g(of)i(non-stationary)d(background)f(noise,)k(which)f
(is)i(a)f(v)o(ery)-146 3714 y(common)i(situation)h(in)i(man)o(y)d
(applications)h(encountered,)f(e.g.,)i(in)-146 3814 y(telephon)o(y)-5
b(.)44 b(W)-7 b(e)28 b(approach)e(this)i(problem)e(as)i(a)g(monaural)d
(source)-146 3914 y(separation)e(method)g(by)h(modeling)f(the)h(speech)
g(at)h(an)g(appropriate)-146 4013 y(temporal)18 b(resolution.)-22
4114 y(The)47 b(decomposition)d(of)j(time-frequenc)o(y)d
(representations,)-146 4213 y(such)22 b(as)h(the)g(po)n(wer)e(or)h
(magnitude)f(spectrogram)f(in)j(terms)f(of)h(ele-)-146
4313 y(mentary)f(atoms)j(of)f(a)h(dictionary)-5 b(,)22
b(has)j(become)e(a)i(popular)d(tool)i(in)-146 4412 y(audio)h
(processing.)43 b(Non-ne)o(gati)n(v)o(e)23 b(matrix)j(f)o(actorization)
f(\(NMF\))-146 4512 y([3)o(,)d(4],)g(ha)n(v)o(e)g(been)g(widely)f
(adopted)g(in)i(v)n(arious)e(audio)g(processing)-146
4612 y(tasks,)26 b(including)d(in)j(particular)d(source)i(separation,)g
(see)g([5)o(])h(for)e(a)-146 4711 y(recent)f(re)n(vie)n(w)-5
b(.)37 b(There)23 b(are)i(man)o(y)e(w)o(orks)h(that)g(follo)n(w)g(this)
h(line)f(in)-146 4811 y(speech)19 b(separation)g([6)o(,)i(7)o(])g(and)e
(enhancement)f([8)o(,)j(9)o(,)g(10)o(,)f(11)o(].)-22
4911 y(In)f(plain)h(NMF)-7 b(,)20 b(signals)g(that)f(can)h(be)g(well)g
(approximated)c(with)-146 5011 y(the)21 b(learned)f(dictionary)g(are)h
(lik)o(ely)g(to)h(resemble)e(the)i(training)e(data)-146
5111 y(on)27 b(a)i(frame)e(by)g(frame)g(manner)-5 b(.)48
b(The)o(y)27 b(might,)i(ho)n(we)n(v)o(er)m(,)e(not)h(be)-146
5210 y(temporally)37 b(consistent)h(at)h(lar)o(ger)f(temporal)f
(scales.)82 b(Standard)-146 5310 y(NMF)31 b(approaches)f(treat)h(dif)n
(ferent)f(time-frames)g(independently)-5 b(,)-146 5409
y(ignoring)38 b(the)i(temporal)g(dynamics)f(of)h(the)g(signals.)86
b(In)40 b(other)p 0 TeXcolorgray 0 TeXcolorgray 2027
1313 a(w)o(ords,)26 b(there)f(is)i(additional)d(structure)g(in)i
(speech)f(at)h(a)g(time-scale)2027 1413 y(lar)o(ger)31
b(than)h(the)g(frame-length)e(that)i(cannot)f(be)i(learned)e(\(or)g(e)o
(x-)2027 1513 y(ploited\))40 b(with)h(NMF)-7 b(.)42 b(In)f(order)f(to)h
(o)o(v)o(ercome)e(this)j(limitation,)2027 1612 y(man)o(y)29
b(w)o(orks)h(ha)n(v)o(e)g(proposed)f(re)o(gularized)f(e)o(xtensions)h
(of)h(NMF)2027 1712 y(to)25 b(promote)d(learned)i(\(or)g(designed\))f
(structure)g(in)i(the)g(codes.)37 b(Ex-)2027 1812 y(amples)25
b(of)g(these)g(approaches)e(are,)k(temporal)d(smoothness)g(of)h(the)
2027 1911 y(acti)n(v)n(ation)18 b(coef)n(\002cients)g([12)o(],)h
(including)e(co-occurrence)f(statistics)2027 2011 y(of)30
b(the)g(basis)h(functions)e([13)n(],)k(and)d(learned)f(temporal)g
(dynamics)2027 2110 y([14)n(,)21 b(15)o(,)f(16,)g(17)o(].)2151
2216 y(NMF-based)h(source)g(separation)f(methods)h(can)g(be)g(thought)f
(as)2027 2315 y(the)i(concatenation)f(of)h(tw)o(o)h(operators.)31
b(First,)24 b(the)f(signal)f(is)i(repre-)2027 2415 y(sented)d(in)g(a)h
(feature)f(space)g(gi)n(v)o(en)f(by)h(a)h(non-linear)d(analysis)j(oper)
n(-)2027 2515 y(ator)m(,)27 b(typically)e(de\002ned)h(as)h(the)f
(magnitude)e(of)j(a)f(time-frequenc)o(y)2027 2614 y(representation)42
b(such)i(as)g(the)g(Short-T)m(ime)f(F)o(ourier)g(T)m(ransform)2027
2714 y(\(STFT\).)30 b(Then)g(a)h(synthesis)g(operator)m(,)g(gi)n(v)o
(en)e(by)i(the)g(dictionary)2027 2813 y(learning)22 b(stage,)j(is)g
(applied)d(to)i(produce)e(an)i(unmixing)d(in)j(the)g(fea-)2027
2913 y(ture)36 b(space.)75 b(The)36 b(separation)g(is)h(obtained)f(by)g
(in)m(v)o(erting)f(these)2027 3013 y(representations.)42
b(Performing)24 b(the)j(separation)e(in)i(the)f(non-linear)2027
3112 y(representation)k(is)k(k)o(e)o(y)e(to)h(the)g(success)g(of)f(the)
h(algorithm.)61 b(The)2027 3212 y(magnitude)26 b(STFT)i(is)h(in)f
(general)f(sparse)h(\(simplifying)e(the)i(sepa-)2027
3312 y(ration)e(process\))g(and)g(in)m(v)n(ariant)f(to)i(v)n(ariations)
e(in)i(the)g(phase,)h(thus)2027 3411 y(relie)n(ving)j(the)i(NMF)h(from)
e(learning)g(this)h(irrele)n(v)n(ant)f(v)n(ariability)-5
b(.)2027 3511 y(This)19 b(comes)h(at)f(the)h(e)o(xpense)e(of)h(in)m(v)o
(erting)e(the)j(unmix)o(ed)d(estimates)2027 3610 y(in)28
b(the)g(feature)f(space,)i(normally)e(kno)n(wn)f(as)j(the)f(phase)f
(reco)o(v)o(ery)2027 3710 y(problem)16 b([18)n(].)25
b(In)17 b(the)h(case)g(of)f(standard)g(NMF)-7 b(,)18
b(this)g(is)h(easily)f(done)2027 3810 y(via)i(W)m(iener)g(\002ltering)f
(technique)g(discussed)h(in)g(Section)g Fu(??)o Ft(.)2151
3915 y(In)30 b(this)h(w)o(ork,)g(rather)e(than)h(seeking)f(a)i(coding)d
(scheme)i(with)2027 4015 y(impro)o(v)o(ed)e(temporal)h(coherence,)h(we)
h(concentrate)e(in)i(e)o(xtracting)2027 4114 y(discriminati)n(v)o(e)25
b(and)i(stable)h(speech)f(features.)45 b(F)o(or)27 b(that)h(purpose,)
2027 4214 y(it)36 b(is)g(crucial)f(to)g(increase)g(the)h(temporal)e
(conte)o(xt)g(of)h(the)g(repre-)2027 4314 y(sentation,)d(reducing)c
(uninformati)n(v)o(e)g(v)n(ariability)h(while)h(preserv-)2027
4413 y(ing)c(distincti)n(v)o(e)f(speech)h(characteristics.)43
b(Increasing)25 b(the)h(tempo-)2027 4513 y(ral)i(scale)h(of)f(STFT)h
(or)f(MEL)g(representations)e(results)j(in)f(loss)h(of)2027
4612 y(important)c(discriminati)n(v)o(e)f(information)g([19)o(].)44
b(In)26 b(order)f(to)h(o)o(v)o(er)n(-)2027 4712 y(come)k(the)g
(limitations)g(of)g(these)h(shallo)n(w)f(representations,)h(scat-)2027
4812 y(tering)23 b(transforms)f([19)o(,)i(20)o(])g(cascade)f(se)n(v)o
(eral)g(stages)h(of)g(comple)o(x)2027 4911 y(w)o(a)n(v)o(elet)g
(decompositions)d(and)j(comple)o(x)e(modulus,)h(yielding)g(dis-)2027
5011 y(criminati)n(v)o(e)c(representations)g(with)i(the)f(ability)h(to)
g(capture)e(tempo-)2027 5111 y(ral)29 b(structures)f(at)h(lar)o(ger)e
(scales,)32 b(e.g.)50 b(smooth)28 b(changes)f(in)i(pitch)2027
5210 y(and)e(en)m(v)o(elope.)45 b(Scattering)26 b(transforms)h(achie)n
(v)o(e)f(state-of-the-art)2027 5310 y(results)31 b(on)f(auditory)g(te)o
(xture)f(discrimination,)j(and)e(music)h(genre)2027 5409
y(recognition)22 b([19)o(,)j(21)o(].)40 b(Recently)25
b(the)o(y)f(ha)n(v)o(e)g(been)g(considered)g(in)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -146 83 a Ft(the)17 b(setting)g(of)g(blind)f(source)h
(separation)f(in)h([22)n(],)h(b)n(ut)f(here)g(we)h(con-)-146
183 y(centrate)23 b(in)i(the)g(supervised)e(\(and)h(semi-supervised\))e
(frame)n(w)o(ork.)-146 282 y(A)h(dictionary)f(learnt)g(to)i(represent)e
(the)h(signal)g(in)h(this)f(deep)g(repre-)-146 382 y(sentation)h
(implicitly)g(learns)h(the)f(short)h(term)f(temporal)g(dynamics)-146
482 y(of)i(the)g(signal,)i(capitalizing)d(on)h(the)h(stability)f
(properties)f(of)h(scat-)-146 581 y(tering)19 b(coef)n(\002cients.)-22
681 y(Our)g(claim)h(is)h(that)e(an)h(important)e(part)h(of)h(the)f
(consistenc)o(y)g(that)-146 780 y(is)i(imposed)e(via)i(structured)e
(NMF)-7 b(,)21 b(can)f(be)g(eliminated)g(with)g(a)h(bet-)-146
880 y(ter)30 b(signal)h(representation.)54 b(In)30 b(this)i(ne)n(w)e
(setting)h(one)f(can)g(learn)-146 980 y(the)h(temporal)g(dynamics)g
(with)h(a)g(v)o(ery)f(simple)h(NMF)g(encoding.)-146 1079
y(Ho)n(we)n(v)o(er)m(,)25 b(the)h(problem)e(that)j(becomes)e(more)g
(dif)n(\002cult)h(is)h(that)f(of)-146 1179 y(in)m(v)o(erting)17
b(the)j(representation.)j(Recent)d(studies)g(in)g(te)o(xtured)f(sound)
-146 1279 y(synthesis)24 b(from)f(scattering)g(moments)g(ha)n(v)o(e)h
(solv)o(ed)f(this)h(problem)-146 1378 y(successfully)19
b(using)h(gradient)f(descent)g(algorithms)g([23)o(].)-22
1478 y(Synthesis)g(models)g(with)g(coherent)f(dictionaries)g(are)h(kno)
n(wn)e(to)-146 1577 y(be)24 b(highly)g(unstable)f(representations)g
([24)o(].)38 b(Thus,)26 b(training)d(them)-146 1677 y(to)18
b(satisfy)g(slo)n(wness)g(and)g(temporal)f(consistenc)o(y)f(can)i(be)g
(challeng-)-146 1777 y(ing.)24 b(F)o(or)18 b(e)o(xample,)g(in)g([16)o
(])h(the)g(authors)f(e)o(xplain)f(that)i(the)g(learning)-146
1876 y(the)j(temporal)f(dynamics)h(in)g(NMF)h(via)g(a)g(Kalman)e(type)i
(of)f(model,)-146 1976 y(can)16 b(become)g(v)o(ery)g(dif)n(\002cult)h
(when)g(the)g(coding)e(is)j(sparse)g(due)e(to)i(the)-146
2076 y(instability)j(and)h(jitter)h(in)f(the)g(codes.)31
b(In)22 b(contrast,)g(analysis)g(opera-)-146 2175 y(tors)e(are)g
(stable)g(by)g(construction.)-22 2275 y(Section)55 b(2)g(re)n(vie)n(ws)
f(non-ne)o(gati)n(v)o(e)d(matrix)k(f)o(actorization,)-146
2374 y(while)e(Section)h(3)f(describes)g(scattering)g(representations)f
(for)-146 2474 y(speech.)86 b(Our)41 b(source)f(separation)g(algorithm)
f(is)j(described)d(in)-146 2574 y(Section)30 b(4)g(and)g(numerical)f(e)
o(xperiments)g(on)h(TIMIT)f(and)h(GRID)-146 2673 y(datasets)20
b(are)g(reported)f(in)h(Section)g(5.)83 2899 y Fu(2.)49
b(NMF)21 b(SPEECH)g(SOURCE)g(SEP)-6 b(ARA)e(TION)-146
3085 y Ft(W)h(e)20 b(consider)e(the)h(setting)g(in)g(which)f(we)i(are)f
(gi)n(v)o(en)e(a)j(temporal)e(sig-)-146 3185 y(nal)i
Fr(x)p Fq(\()p Fr(t)p Fq(\))i Ft(that)e(is)h(the)f(sum)g(of)g(tw)o(o)h
(speech)e(signals)i Fr(x)1421 3197 y Fp(i)1449 3185 y
Fq(\()p Fr(t)p Fq(\))p Ft(,)g Fr(i)i Fq(=)f(1)p Fr(;)14
b Fq(2)p Ft(:)501 3343 y Fr(x)p Fq(\()p Fr(t)p Fq(\))24
b(=)f Fr(x)801 3355 y Fo(1)839 3343 y Fq(\()p Fr(t)p
Fq(\))c(+)f Fr(x)1082 3355 y Fo(2)1120 3343 y Fq(\()p
Fr(t)p Fq(\))p Fr(;)-146 3501 y Ft(and)30 b(we)i(aim)f(at)h(\002nding)e
(estimates)47 b Fn(b)-61 b Fr(x)1037 3513 y Fp(i)1065
3501 y Fq(\()p Fr(t)p Fq(\))p Ft(.)60 b(NMF-based)30
b(source)-146 3601 y(separation)h(techniques)f(typically)i(operate)f
(on)h(a)g(\(non-ne)o(gati)n(v)o(e\))-146 3701 y(time-frequenc)o(y)c
(representation)h(of)j Fr(x)p Fq(\()p Fr(t)p Fq(\))h
Ft(\(such)e(as)i(the)f(spectro-)-146 3800 y(gram)38 b(or)g(the)h(po)n
(wer)f(spectrum\))g(that)h(we)g(denote)f(as)i Fq(\010\()p
Fr(x)p Fq(\))59 b Fm(2)-146 3900 y Fl(R)-86 3870 y Fp(m)p
Fk(\002)p Fp(n)69 3900 y Ft(,)21 b(comprising)e Fr(m)i
Ft(frequenc)o(y)c(bins)k(and)e Fr(n)i Ft(temporal)e(frames.)-146
4000 y(NMF)41 b(attempts)f(to)h(\002nd)g(the)f(non-ne)o(gati)n(v)o(e)d
(acti)n(v)n(ations)j Fj(Z)1741 4012 y Fp(i)1830 4000
y Fm(2)-146 4099 y Fl(R)-86 4069 y Fp(q)r Fk(\002)p Fp(n)43
4099 y Ft(,)22 b Fr(i)h Fq(=)h(1)p Fr(;)14 b Fq(2)21
b Ft(best)g(representing)e(the)i(dif)n(ferent)e(speech)h(compo-)-146
4199 y(nents)k(in)g(tw)o(o)g(dictionaries)g Fr(D)773
4211 y Fp(i)830 4199 y Fm(2)31 b Fl(R)976 4169 y Fp(m)p
Fk(\002)p Fp(q)1124 4199 y Ft(.)37 b(This)25 b(task)f(is)h(achie)n(v)o
(ed)-146 4298 y(through)18 b(the)i(solution)f(of)55 4471
y Fq(min)43 4524 y Fi(Z)89 4532 y Fh(i)115 4524 y Fk(\025)p
Fi(0)219 4471 y Fr(\026)p Fq(\(\010\()p Fr(x)p Fq(\))p
Fm(j)544 4392 y Fn(X)524 4569 y Fp(i)p Fo(=1)p Fp(;)p
Fo(2)698 4471 y Fr(D)767 4483 y Fp(i)794 4471 y Fj(Z)853
4483 y Fp(i)880 4471 y Fq(\))g(+)f Fr(\025)1111 4392
y Fn(X)1090 4569 y Fp(i)p Fo(=1)p Fp(;)p Fo(2)1264 4471
y Fm(R)p Fq(\()p Fj(Z)1425 4483 y Fp(i)1453 4471 y Fq(\))j
Fr(:)p 0 TeXcolorgray 259 w Ft(\(1\))p 0 TeXcolorgray
-146 4712 a(The)g(\002rst)h(term)f(in)h(the)g(optimization)e(objecti)n
(v)o(e)g(measures)h(the)h(dis-)-146 4812 y(similarity)f(between)f(the)i
(input)e(data)h(and)g(the)h(estimated)f(channels.)-146
4911 y(Frequent)33 b(choices)h(of)h Fr(\026)g Ft(are)g(the)f(squared)g
(Euclidean)f(distance,)-146 5011 y(the)21 b(K)o(ullback-Leibler)d(di)n
(v)o(er)o(gence,)g(and)j(the)g(Itakura-Saito)f(di)n(v)o(er)n(-)-146
5111 y(gence,)e(for)h(which)g(there)f(e)o(xist)i(standard)e
(optimization)g(algorithms)-146 5210 y([25)n(].)32 b(In)22
b(this)h(w)o(ork)e(we)i(concentrate)e(on)h(a)g(re)n(weighted)f
(Euclidean)-146 5310 y(distance,)d(b)n(ut)h(an)o(y)f(other)f(option)h
(could)g(be)g(used)h(instead.)24 b(The)18 b(sec-)-146
5409 y(ond)i(\(optional\))g(term)h(in)g(the)h(minimization)e(objecti)n
(v)o(e)g(is)i(included)p 0 TeXcolorgray 0 TeXcolorgray
2027 83 a(to)i(promote)e(some)i(desired)g(structure)f(of)h(the)g(acti)n
(v)n(ations.)36 b(This)24 b(is)2027 183 y(done)c(using)i(a)g(designed)e
(re)o(gularization)g(function)g Fm(R)i Ft(and)f(its)i(rela-)2027
282 y(ti)n(v)o(e)d(importance)e(is)j(controlled)e(by)g(the)i
(parameters)d Fr(\025)p Ft(.)2151 382 y(Once)28 b(the)g(optimal)f(acti)
n(v)n(ations)g(are)h(solv)o(ed)f(for)m(,)i(the)f(spectral)2027
482 y(en)m(v)o(elopes)19 b(of)i(the)h(speech)e(and)h(the)h(noise)f(are)
g(estimated)g(as)h Fr(D)3924 494 y Fp(i)3952 482 y Fj(Z)4010
494 y Fp(i)4038 482 y Ft(.)2027 581 y(Since)i(these)g(estimated)g
(speech)g(spectrum)f(en)m(v)o(elope)f(contains)h(no)2027
681 y(phase)g(information,)g(the)o(y)g(are)h(used)g(to)g(b)n(uild)g
(soft)g(masks)g(to)g(\002lter)2027 780 y(the)c(signals)g(mixture)f
(signal)h([10)o(].)2438 1010 y Fu(3.)49 b(SCA)-8 b(TTERING)22
b(TRANSFORM)2027 1196 y Ft(Discriminati)n(v)o(e)29 b(features)i(ha)n
(ving)e(longer)h(temporal)f(conte)o(xt)h(can)2027 1296
y(be)f(constructed)f(with)i(the)g(scattering)f(transform)f([20)n(,)i
(19)o(].)54 b(This)2027 1395 y(section)29 b(re)n(vie)n(ws)g(its)i
(de\002nition)e(and)g(main)g(properties)f(when)h(ap-)2027
1495 y(plied)20 b(to)g(speech)g(signals.)2027 1715 y
Fu(3.1.)48 b(W)-5 b(a)n(v)o(elet)19 b(Filter)h(Bank)2027
1871 y Ft(A)37 b(w)o(a)n(v)o(elet)h Fr( )s Fq(\()p Fr(t)p
Fq(\))g Ft(is)g(a)g(band-pass)e(\002lter)h(with)h(good)e(frequenc)o(y)
2027 1971 y(and)i(spatial)i(localization.)81 b(W)-7 b(e)40
b(consider)e(a)h(comple)o(x)f(w)o(a)n(v)o(elet)2027 2070
y(with)33 b(a)h(quadrature)d(phase,)36 b(whose)d(F)o(ourier)g
(transform)e(satis\002es)2027 2170 y Fm(F)8 b Fr( )s
Fq(\()p Fr(!)s Fq(\))48 b Fm(\031)g Fq(0)34 b Ft(for)f
Fr(!)52 b(<)47 b Fq(0)p Ft(.)67 b(W)-7 b(e)35 b(assume)e(that)h(the)g
(center)f(fre-)2027 2270 y(quenc)o(y)25 b(of)i Fm(F)8
b Fr( )30 b Ft(is)e Fq(1)f Ft(and)g(that)g(its)h(bandwidth)d(is)j(of)e
(the)h(order)f(of)2027 2369 y Fr(Q)2093 2339 y Fk(\000)p
Fo(1)2182 2369 y Ft(.)49 b(W)-7 b(a)n(v)o(elet)29 b(\002lters)g
(centered)e(at)i(the)f(frequencies)f Fr(\025)38 b Fq(=)f(2)3937
2339 y Fp(j)s(=Q)2027 2469 y Ft(are)30 b(computed)f(by)h(dilating)f
Fr( )s Ft(:)47 b Fr( )3097 2481 y Fp(\025)3140 2469 y
Fq(\()p Fr(t)p Fq(\))c(=)e Fr(\025)14 b( )s Fq(\()p Fr(\025)g(t)p
Fq(\))p Ft(,)35 b(and)30 b(hence)2027 2580 y Fm(F)8 b
Fr( )2149 2592 y Fp(\025)2192 2580 y Fq(\()p Fr(!)s Fq(\))52
b(=)2495 2558 y Fn(b)2480 2580 y Fr( )s Fq(\()p Fr(\025)2617
2550 y Fk(\000)p Fo(1)2707 2580 y Fr(!)s Fq(\))p Ft(.)72
b(W)-7 b(e)37 b(denote)e(by)g Fq(\003)h Ft(the)g(inde)o(x)f(set)h(of)
2027 2679 y Fr(\025)24 b Fq(=)f(2)2229 2649 y Fp(j)s(=Q)2371
2679 y Ft(o)o(v)o(er)d(the)g(signal)h(frequenc)o(y)c(support,)i(with)i
Fr(j)29 b Fm(\024)23 b Fr(J)8 b Ft(,)21 b(and)2027 2779
y(we)k(impose)f(that)h(these)h(\002lters)f(fully)g(co)o(v)o(er)e(the)i
(positi)n(v)o(e)f(frequen-)2027 2879 y(cies:)2083 3078
y Fm(8)p Fr(!)h Fm(\025)e Fq(0)d Fr(;)35 b Fq(1)18 b
Fm(\000)g Fr(\017)23 b Fm(\024)f(jF)8 b Fr(\036)p Fq(\()p
Fr(!)s Fq(\))p Fm(j)2983 3044 y Fo(2)3040 3078 y Fq(+)3133
3022 y(1)p 3133 3059 42 4 v 3133 3135 a(2)3203 2999 y
Fn(X)3198 3178 y Fp(\025)p Fk(2)p Fo(\003)3341 3078 y
Fm(jF)g Fr( )3486 3090 y Fp(\025)3530 3078 y Fq(\()p
Fr(!)s Fq(\))p Fm(j)3672 3044 y Fo(2)3733 3078 y Fm(\024)22
b Fq(1)f Fr(;)55 b Ft(\(2\))2027 3342 y(for)22 b(some)h
Fr(\017)28 b(<)h Fq(1)p Ft(,)23 b(where)g Fr(\036)p Fq(\()p
Fr(t)p Fq(\))i Ft(is)f(the)f(lo)n(wpass)g(\002lter)g(carrying)f(the)
2027 3442 y(lo)n(w)k(frequenc)o(y)e(information)h(at)i(scales)g(lar)o
(ger)f(than)g Fq(2)3698 3412 y Fp(J)3744 3442 y Ft(.)45
b(The)26 b(re-)2027 3541 y(sulting)d(\002lter)i(bank)d(has)i(a)h
(constant)e(number)f Fr(Q)i Ft(of)g(bands)f(per)g(oc-)2027
3641 y(ta)n(v)o(e.)i(The)20 b(w)o(a)n(v)o(elet)g(transform)e(of)i(a)h
(signal)f Fr(x)p Fq(\()p Fr(t)p Fq(\))i Ft(is)2455 3821
y Fr(W)12 b(x)24 b Fq(=)e Fm(f)p Fr(x)d Fm(\003)f Fr(\036)p
Fq(\()p Fr(t)p Fq(\))j Fr(;)35 b(x)19 b Fm(\003)f Fr( )3273
3833 y Fp(\025)3316 3821 y Fq(\()p Fr(t)p Fq(\))p Fm(g)3452
3833 y Fp(\025)p Fk(2)p Fo(\003)3607 3821 y Fr(:)2027
4002 y Ft(Thanks)h(to)h(\(2\),)g(one)f(can)h(v)o(erify)f(that)2131
4196 y Fm(k)p Fr(x)p Fm(k)2262 4161 y Fo(2)2299 4196
y Fq(\(1)f Fm(\000)g Fr(\017)p Fq(\))23 b Fm(\024)g(k)p
Fr(x)18 b Fm(\003)g Fr(\036)p Fm(k)2909 4161 y Fo(2)2965
4196 y Fq(+)3053 4117 y Fn(X)3048 4295 y Fp(\025)p Fk(2)p
Fo(\003)3191 4196 y Fm(k)p Fr(x)h Fm(\003)f Fr( )3413
4208 y Fp(\025)3456 4196 y Fm(k)3498 4161 y Fo(2)3558
4196 y Fm(\024)23 b(k)p Fr(x)p Fm(k)3777 4161 y Fo(2)3834
4196 y Fr(:)104 b Ft(\(3\))2027 4495 y Fu(3.2.)48 b(J)o(oint)20
b(T)o(ime-Fr)o(equency)f(Scattering)2027 4650 y Ft(Scattering)47
b(coef)n(\002cients)f(pro)o(vide)g(a)i(nonlinear)e(representation)2027
4750 y(computed)24 b(by)h(iterating)g(o)o(v)o(er)g(w)o(a)n(v)o(elet)h
(transforms)e(and)i(comple)o(x)2027 4850 y(modulus)20
b(nonlinearities.)28 b(First)22 b(order)e(scattering)h(coef)n
(\002cients)g(are)2027 4949 y(local)f(a)n(v)o(erages)f(of)h(w)o(a)n(v)o
(elet)g(amplitudes:)2384 5130 y Fm(8)p Fr(\025)k Fm(2)f
Fq(\003)41 b Fr(;)56 b(S)5 b(x)p Fq(\()p Fr(t;)14 b(\025)p
Fq(\))24 b(=)e Fm(j)14 b Fr(x)19 b Fm(\003)f Fr( )3368
5142 y Fp(\025)3412 5130 y Fm(j)g(\003)g Fr(\036)p Fq(\()p
Fr(t)p Fq(\))k Fr(:)2027 5310 y Ft(The)34 b(Q-f)o(actor)g
Fr(Q)2573 5322 y Fo(1)2646 5310 y Ft(adjusts)h(the)g(frequenc)o(y)d
(resolution)i(of)h(these)2027 5409 y(w)o(a)n(v)o(elets,)21
b(and)f(for)h(speech)f(it)i(is)g(typically)e(around)f
Fr(Q)3638 5421 y Fo(1)3699 5409 y Fq(=)24 b(32)p Ft(.)j(Due)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -146 83 a Ft(to)18 b(the)g(temporal)e(a)n(v)o(erage,)h
(\002rst)i(order)d(scattering)i(coef)n(\002cients)f(pro-)-146
183 y(vide)29 b(no)h(information)e(on)h(the)i(time)f(v)n(ariation)f(of)
h(the)g(scalogram)-146 282 y Fm(j)p Fr(x)12 b Fm(\003)g
Fr( )44 294 y Fp(\025)83 302 y Fg(1)120 282 y Fq(\()p
Fr(t)p Fq(\))p Fm(j)19 b Ft(at)g(temporal)e(scales)j(smaller)e(than)g
Fq(2)1334 252 y Fp(J)1380 282 y Ft(.)25 b(It)19 b(a)n(v)o(erages)e(all)
-146 382 y(modulations)i(and)h(transient)g(e)n(v)o(ents,)h(and)f(thus)h
(loses)h(perceptually)-146 482 y(important)c(information.)-22
583 y(Second)28 b(order)f(scattering)h(coef)n(\002cients)g(reco)o(v)o
(er)e(information)-146 683 y(on)d(audio)f(modulations)g(and)h(pitch)g
(temporal)g(v)n(ariations)f(by)h(com-)-146 782 y(puting)17
b(the)i(w)o(a)n(v)o(elet)f(coef)n(\002cients)g(of)g(the)h(en)m(v)o
(elopes)e Fm(j)p Fr(x)c Fm(\003)g Fr( )1627 794 y Fp(\025)1666
802 y Fg(1)1702 782 y Fm(j)p Ft(,)19 b(and)-146 882 y(their)g(local)i
(a)n(v)o(erages:)48 1068 y Fm(8)p Fr(\025)142 1080 y
Fo(2)222 1068 y Fr(;)55 b(S)5 b(x)p Fq(\()p Fr(t;)14
b(\025)550 1080 y Fo(1)588 1068 y Fr(;)g(\025)673 1080
y Fo(2)711 1068 y Fq(\))23 b(=)g Fm(jj)14 b Fr(x)k Fm(\003)g
Fr( )1093 1080 y Fp(\025)1132 1088 y Fg(1)1169 1068 y
Fm(j)h(\003)f Fr( )1325 1080 y Fp(\025)1364 1088 y Fg(2)1401
1068 y Fm(j)g(\003)g Fr(\036)p Fq(\()p Fr(t)p Fq(\))k
Fr(:)-146 1254 y Ft(These)h(multiscale)g(v)n(ariations)g(of)g(each)g
(en)m(v)o(elope)e Fm(j)p Fr(x)g Fm(\003)g Fr( )1587 1266
y Fp(\025)1626 1274 y Fg(1)1663 1254 y Fm(j)j Ft(spec-)-146
1354 y(ify)e(the)h(amplitude)e(modulations)g(of)h Fr(x)p
Fq(\()p Fr(t)p Fq(\))i Ft([19)o(])f(and)f(thus)h(ha)n(v)o(e)f(the)-146
1454 y(capacity)32 b(to)i(detect)g(rythmic)e(structures)h(appearing)f
(at)i(dif)n(ferent)-146 1553 y(frequenc)o(y)26 b(bands.)50
b(The)29 b(Q-f)o(actor)e Fr(Q)1014 1565 y Fo(2)1081 1553
y Ft(of)h(the)h(second)f(f)o(amily)h(of)-146 1653 y(w)o(a)n(v)o(elets)k
Fr( )228 1665 y Fp(\025)267 1673 y Fg(2)338 1653 y Ft(controls)f(the)i
(time-frequenc)o(y)c(resolution)i(of)h(the)-146 1752
y(transform.)47 b(Since)29 b(the)f(en)m(v)o(elopes)f
Fm(j)p Fr(x)e Fm(\003)f Fr( )1163 1764 y Fp(\025)1206
1752 y Fm(j)29 b Ft(ha)n(v)o(e)f(bandwidth)e Fm(\030)-146
1852 y Fq(2)-104 1822 y Fk(\000)p Fp(j)-18 1852 y Fr(Q)48
1817 y Fk(\000)p Fo(1)48 1874 y(1)137 1852 y Ft(,)d(one)f(typically)g
(chooses)g(dyadic)g Fr(Q)1235 1864 y Fo(2)1299 1852 y
Fq(=)27 b(1)c Ft(second)f(order)-146 1952 y(w)o(a)n(v)o(elets.)34
b(Scattering)22 b(coef)n(\002cients)g(ha)n(v)o(e)h(a)g(ne)o(gligible)f
(amplitude)-146 2051 y(for)c Fr(\025)18 2063 y Fo(2)79
2051 y Fr(>)23 b(\025)215 2063 y Fo(1)272 2051 y Ft(because)c
Fm(j)p Fr(x)c Fm(\003)g Fr( )751 2063 y Fp(\025)790 2071
y Fg(1)827 2051 y Fm(j)20 b Ft(is)g(a)f(re)o(gular)f(en)m(v)o(elop)f
(whose)i(fre-)-146 2151 y(quenc)o(y)k(support)h(is)j(belo)n(w)e
Fr(\025)750 2163 y Fo(2)813 2151 y Ft([20)o(].)41 b(Scattering)25
b(coef)n(\002cients)g(are)-146 2251 y(thus)20 b(computed)e(only)h(for)h
Fr(\025)695 2263 y Fo(2)756 2251 y Fr(<)i(\025)891 2263
y Fo(1)929 2251 y Ft(.)-22 2352 y(Scattering)27 b(transforms)g(ha)n(v)o
(e)h(been)f(e)o(xtended)f(along)h(the)h(fre-)-146 2452
y(quenc)o(y)18 b(v)n(ariables)i(to)h(capture)e(the)h(joint)h
(time-frequenc)o(y)c(v)n(ariabil-)-146 2551 y(ity)f(of)f(spectral)h(en)
m(v)o(elopes)d(and)j(therefore)e(pro)o(vide)f(representations)-146
2651 y(locally)j(stable)g(to)h(pitch)f(v)n(ariations)f([19)o(].)24
b(W)-7 b(e)18 b(denote)d Fr(\015)28 b Fq(=)22 b(log)1728
2671 y Fo(2)1779 2651 y Fr(\025)1827 2663 y Fo(1)1864
2651 y Ft(,)-146 2751 y(and)f(consider)f(the)i(scalogram)f(as)h(a)g(tw)
o(o-dimensional)e(function)g(of)-146 2850 y Fr(\015)25
b Ft(and)20 b Fr(t)p Ft(:)472 2955 y Fr(F)12 b Fq(\()p
Fr(\015)5 b(;)14 b(t)p Fq(\))23 b(=)g Fm(j)p Fr(x)c Fm(\003)f
Fr( )1030 2967 y Fo(2)1063 2951 y Fh(\015)1105 2955 y
Fq(\()p Fr(t)p Fq(\))p Fm(j)j Fr(:)-22 3112 y Ft(In)f(this)h(w)o(ork,)e
(we)i(consider)e(a)i(second)e(layer)h(scattering)g(with)g(a)-146
3211 y(separable)f(w)o(a)n(v)o(elet)h(transform)f Fr(F)30
b Fm(\003)18 b Fq(\011)1015 3223 y Fp(\015)1050 3231
y Fg(2)1082 3223 y Fp(;\025)1141 3231 y Fg(2)1177 3211
y Fq(\()p Fr(\015)5 b(;)14 b(t)p Fq(\))21 b Fr(;)g Ft(with)358
3412 y Fq(\011)423 3424 y Fp(\015)458 3432 y Fg(2)489
3424 y Fp(;\025)548 3432 y Fg(2)585 3412 y Fq(\()p Fr(\015)5
b(;)14 b(t)p Fq(\))23 b(=)890 3390 y Fn(e)875 3412 y
Fr( )929 3424 y Fp(\015)964 3432 y Fg(2)1000 3412 y Fq(\()p
Fr(\015)5 b Fq(\))p Fr( )1166 3424 y Fp(\025)1205 3432
y Fg(2)1243 3412 y Fq(\()p Fr(t)p Fq(\))21 b Fr(:)-146
3598 y Ft(The)47 b(temporal)f(w)o(a)n(v)o(elets)h Fr( )s
Fq(\()p Fr(t)p Fq(\))i Ft(are)e(dyadic)f(comple)o(x)g(Morlet)-146
3709 y(w)o(a)n(v)o(elets.)39 b(In)24 b(this)i(implementation,)d(we)i
(choose)1402 3687 y Fn(e)1387 3709 y Fr( )k Ft(to)c(be)g(dyadic)-146
3809 y(real)20 b(Haar)g(w)o(a)n(v)o(elets)g(to)h(preserv)o(e)d(good)h
(frequenc)o(y)f(localization.)-22 3910 y(The)h(resulting)f(second)h
(order)f(scattering)g(coef)n(\002cients)h(are)g(thus)66
4076 y Fq(~)52 4097 y Fr(S)5 b(x)p Fq(\()p Fr(t;)14 b(\025)302
4109 y Fo(1)340 4097 y Fr(;)g(\015)420 4109 y Fo(2)457
4097 y Fr(;)g(\025)542 4109 y Fo(2)580 4097 y Fq(\))23
b(=)g Fm(j)p Fr(F)30 b Fm(\003)901 4076 y Fq(\026)889
4097 y(\011)954 4109 y Fp(\015)989 4117 y Fg(2)1021 4109
y Fp(;\025)1080 4117 y Fg(2)1116 4097 y Fm(j)19 b(\003)p
1218 4029 50 4 v 18 w Fr(\036)p Fq(\(log)1407 4117 y
Fo(2)1458 4097 y Fr(\025)1506 4109 y Fo(1)1544 4097 y
Fr(;)14 b(t)p Fq(\))21 b Fr(;)-146 4283 y Ft(where)p
103 4215 V 45 w Fr(\036)q Fq(\()p Fr(\015)5 b(;)14 b(t)p
Fq(\))47 b Ft(is)g(a)g(tw)o(o-dimensional)d(blurring)h(k)o(ernel)g
(with)-146 4382 y(temporal)33 b(scale)i Fq(2)427 4352
y Fp(J)508 4382 y Ft(and)f(log-frequenc)o(y)c(scale)35
b Fq(2)1405 4352 y Fp(J)1442 4361 y Fh(h)1484 4382 y
Ft(.)68 b(The)34 b(\002nal)-146 4482 y(representation)g(re)o(grouping)e
(\002rst)37 b(and)f(second)f(order)g(scattering)-146
4582 y(coef)n(\002cients)40 b(and)i(sampling)e(at)j(interv)n(als)e
Fr(k)16 b Fq(2)1315 4552 y Fp(J)5 b Fk(\000)p Fp(\016)1488
4582 y Ft(is)43 b Fq(\010\()p Fr(x)p Fq(\))63 b(=)-146
4681 y Fm(f)p Fr(S)5 b(x)p Fq(\()p Fr(k)s Fq(2)119 4651
y Fp(J)g Fk(\000)p Fp(\016)248 4681 y Fr(k)s(;)14 b(\025)379
4693 y Fo(1)417 4681 y Fq(\))g Fr(;)528 4660 y Fq(~)514
4681 y Fr(S)t(x)p Fq(\()p Fr(k)s Fq(2)736 4651 y Fp(J)5
b Fk(\000)p Fp(\016)867 4681 y Fr(;)14 b(\025)952 4693
y Fo(1)990 4681 y Fr(;)g(\015)1070 4693 y Fo(2)1107 4681
y Fr(;)g(\025)1192 4693 y Fo(2)1229 4681 y Fq(\))p Fm(g)p
Ft(,)30 b(where)d(the)g(o)o(v)o(er)n(-)-146 4781 y(sampling)19
b(f)o(actor)g Fr(\016)24 b Ft(is)d(typically)f(set)h(to)f
Fr(\016)26 b Fq(=)d(1)p Ft(.)87 5021 y Fu(4.)49 b(SOURCE)21
b(SEP)-6 b(ARA)e(TION)21 b(ALGORITHM)-146 5210 y Ft(W)-7
b(e)29 b(sho)n(w)f(in)h(this)g(section)f(ho)n(w)g(the)g(in)m(v)o(erse)g
(problem)e(of)i(source)-146 5310 y(separation)20 b(can)h(be)h(solv)o
(ed)e(via)i(a)g(sparse)f(coding)f(in)i(the)f(scattering)-146
5409 y(domain,)d(follo)n(wed)h(by)h(phase)g(reco)o(v)o(ery)-5
b(.)p 0 TeXcolorgray 0 TeXcolorgray 2151 83 a(W)e(e)25
b(consider)e(the)h(supervised)f(monoaural)f(source)h(separation)2027
183 y(problem,)18 b(in)i(which)g(one)g(observ)o(es)f(mixtures)2664
341 y Fr(x)p Fq(\()p Fr(t)p Fq(\))24 b(=)f Fr(x)2964
353 y Fo(1)3002 341 y Fq(\()p Fr(t)p Fq(\))c(+)f Fr(x)3245
353 y Fo(2)3282 341 y Fq(\()p Fr(t)p Fq(\))k Fr(;)540
b Ft(\(4\))2027 499 y(where)21 b Fr(x)2299 511 y Fp(i)2349
499 y Ft(come)g(from)g(sources)g(from)f(which)h(we)h(assume)g(training)
2027 598 y(data)h Fr(X)2258 610 y Fp(i)2315 598 y Fq(=)28
b Fm(f)p Fr(x)2497 610 y Fp(ij)2556 598 y Fm(g)2598 610
y Fp(j)s Fk(\024)p Fp(K)2744 598 y Ft(,)d(and)e(one)g(is)h(ask)o(ed)f
(to)h(produce)d(estimates)2041 698 y Fn(b)-60 b Fr(x)2074
710 y Fp(i)2102 698 y Ft(.)40 b(F)o(or)24 b(e)o(xample,)h(we)g(might)g
(consider)f(a)h(male-vs-female)e(sepa-)2027 797 y(ration)c(task,)h(by)g
(collecting)f(male)i(and)e(female)h(training)f(e)o(xamples.)2151
897 y(The)37 b(supervision)f(pro)o(vides)g(prior)h(information)e(on)i
(the)g(na-)2027 997 y(ture)24 b(of)g(each)h(of)f(the)h(components.)36
b(Ho)n(we)n(v)o(er)m(,)23 b(high-dimensional)2027 1096
y(speech)32 b(signals)h(ha)n(v)o(e)f(lar)o(ge)g(v)n(ariability)-5
b(,)34 b(most)e(of)h(which)f(is)i(un-)2027 1196 y(informati)n(v)o(e)e
(for)i(the)h(purposes)f(of)g(estimating)h Fr(x)3579 1208
y Fp(i)3642 1196 y Ft(in)g(\(4\).)68 b(The)2027 1296
y(training)32 b(data)h(can)g(be)h(e)o(xploited)d(more)i(ef)n
(\002ciently)g(in)g(the)h(scat-)2027 1395 y(tering)j(domain,)j(since)e
(intra-class)g(v)n(ariability)e(gi)n(v)o(en)h(by)g(small)2027
1495 y(pitch)19 b(and)h(timber)f(v)n(ariations)g(is)i(linearized)e(up)h
(to)g(lar)o(ger)f(temporal)2027 1594 y(scales)i(without)f(loosing)g(as)
h(much)f(discriminati)n(v)o(e)f(information)f(as)2027
1694 y(the)i(spectrogram)e([19)o(,)i(20)o(].)2151 1794
y(Let)i Fq(\010\()p Fr(X)2445 1806 y Fp(i)2472 1794 y
Fq(\))g Ft(be)f(the)h(scattering)e(representation)f(of)i(the)g
(training)2027 1893 y(e)o(xamples)k(of)h(each)h(source.)43
b(W)-7 b(e)27 b(consider)f(a)h(non-linear)d(approx-)2027
1993 y(imation)g(of)h(each)f(source)h(using)f(non-Ne)o(gati)n(v)o(e)e
(matrix)i(f)o(actoriza-)2027 2093 y(tion:)2409 2270 y
Fq(min)2307 2323 y Fp(D)2361 2331 y Fh(i)2388 2323 y
Fk(\025)p Fo(0)p Fp(;Z)2538 2331 y Fh(i)2564 2323 y Fk(\025)p
Fo(0)2673 2214 y Fq(1)p 2673 2251 42 4 v 2673 2327 a(2)2724
2270 y Fm(k)p Fq(\010\()p Fr(X)2927 2282 y Fp(i)2955
2270 y Fq(\))18 b Fm(\000)g Fr(D)3157 2282 y Fp(i)3198
2270 y Fr(Z)3255 2282 y Fp(i)3283 2270 y Fm(k)3325 2235
y Fo(2)3325 2290 y Fp(F)3398 2270 y Fq(+)g Fr(\025)p
Fm(k)p Fr(Z)3628 2282 y Fp(i)3655 2270 y Fm(k)3697 2282
y Fo(1)3755 2270 y Fr(:)183 b Ft(\(5\))2027 2466 y(This)24
b(model)g(e)o(xploits)f(the)i(linearization)e(properties)f(of)i
(scattering)2027 2566 y(coef)n(\002cients)29 b(since)h(it)g(searches)g
(lo)n(w-dimensional)d(locally)i(linear)2027 2666 y(approximations.)2151
2765 y(At)e(test)f(time,)h(gi)n(v)o(en)e(and)g(input)g
Fr(x)p Ft(,)i Fr(x)3291 2777 y Fo(1)3355 2765 y Ft(and)e
Fr(x)3548 2777 y Fo(2)3612 2765 y Ft(are)h(estimated)2027
2865 y(by)20 b(minimizing)2036 3059 y Fq(min)2034 3116
y Fp(x)2072 3096 y Ff(0)2072 3135 y Fh(i)2098 3116 y
Fp(;z)2150 3124 y Fh(i)2210 2980 y Fn(X)2190 3157 y Fp(i)p
Fo(=1)p Fp(;)p Fo(2)2374 3003 y Fq(1)p 2374 3040 V 2374
3116 a(2)2425 3059 y Fm(k)p Fq(\010\()p Fr(x)2606 3025
y Fk(0)2606 3080 y Fp(i)2634 3059 y Fq(\))f Fm(\000)f
Fr(D)2837 3071 y Fp(i)2864 3059 y Fr(z)2903 3071 y Fp(i)2930
3059 y Fm(k)2972 3025 y Fo(2)2972 3080 y(2)3028 3059
y Fq(+)g Fr(\025)p Fm(k)p Fr(z)3240 3071 y Fp(i)3267
3059 y Fm(k)3309 3071 y Fo(1)3442 3059 y Fr(s:t:)j(x)j
Fq(=)e Fr(x)3783 3025 y Fk(0)3783 3080 y Fo(1)3839 3059
y Fq(+)d Fr(x)3970 3025 y Fk(0)3970 3080 y Fo(2)4028
3059 y Fr(:)3961 3242 y Ft(\(6\))2027 3341 y(Problem)d(\(6\))g(is)i
(minimized)e(with)h(an)g(alternating)f(gradient)f(descent)2027
3441 y(between)21 b Fr(x)2373 3411 y Fk(0)2373 3462 y
Fp(i)2425 3441 y Ft(and)g Fr(z)2606 3453 y Fp(i)2634
3441 y Ft(.)32 b(Fixing)22 b Fr(z)2966 3453 y Fp(i)3016
3441 y Ft(and)g(minimizing)f(with)i(respect)f(to)2027
3540 y Fr(x)2074 3510 y Fk(0)2074 3562 y Fp(i)2125 3540
y Ft(requires)f(locally)h(in)m(v)o(erting)e(the)i(scattering)g
(operator)e Fq(\010)p Ft(,)j(which)2027 3640 y(amounts)31
b(to)h(solv)o(e)g(an)h(o)o(v)o(ercomplete)c(phase)j(reco)o(v)o(ery)e
(problem)2027 3740 y(and)f(can)h(be)f(solv)o(ed)g(with)h(gradient)e
(descent,)k(as)e(sho)n(wn)f(in)h([23)o(].)2027 3839 y(Fix)o(ed)24
b Fr(x)2287 3809 y Fk(0)2287 3861 y Fp(i)2315 3839 y
Ft(,)j(solving)d(for)g Fr(z)2794 3851 y Fp(i)2847 3839
y Ft(is)i(a)f(standard)f Fr(`)3332 3851 y Fo(1)3394 3839
y Ft(sparse)h(coding)e(prob-)2027 3939 y(lem,)28 b(which)e(can)h(be)f
(solv)o(ed)g(ef)n(\002ciently)g(with)h(proximal)e(splitting)2027
4039 y(algorithms.)e(In)d(this)h(w)o(ork,)e(we)i(use)f(the)h(LARS)f
(algorithm.)2151 4138 y(When)30 b(the)f(analysis)h(operator)d
Fq(\010)j Ft(is)g(able)g(to)f(produce)f(sparse)2027 4238
y(representations)18 b(of)i(the)g(sources,)g(then)2264
4396 y Fm(k)p Fq(\010\()p Fr(x)2445 4361 y Fk(0)2445
4416 y Fo(1)2482 4396 y Fq(\))f Fm(\000)f Fr(D)2685 4408
y Fo(1)2722 4396 y Fr(z)2761 4408 y Fo(1)2798 4396 y
Fm(k)2840 4361 y Fo(2)2840 4416 y(2)2895 4396 y Fq(+)g
Fm(k)p Fq(\010\()p Fr(x)3159 4361 y Fk(0)3159 4416 y
Fo(2)3196 4396 y Fq(\))h Fm(\000)f Fr(D)3399 4408 y Fo(2)3436
4396 y Fr(z)3475 4408 y Fo(2)3512 4396 y Fm(k)3554 4361
y Fo(2)3674 4396 y Fm(\031)2512 4537 y(k)p Fq(\010\()p
Fr(x)2693 4503 y Fk(0)2693 4557 y Fo(1)2731 4537 y Fq(\))g(+)g(\010\()p
Fr(x)3003 4503 y Fk(0)3003 4557 y Fo(2)3041 4537 y Fq(\))h
Fm(\000)3195 4458 y Fn(X)3175 4635 y Fp(i)p Fo(=1)p Fp(;)p
Fo(2)3349 4537 y Fr(D)3418 4549 y Fp(i)3446 4537 y Fr(z)3485
4549 y Fp(i)3512 4537 y Fm(k)3554 4503 y Fo(2)3554 4557
y(2)3674 4537 y Fm(\031)2688 4759 y(k)p Fq(\010\()p Fr(x)p
Fq(\))g Fm(\000)f Fr(D)3072 4771 y Fo(1)3109 4759 y Fr(z)3148
4771 y Fo(1)3203 4759 y Fm(\000)g Fr(D)3355 4771 y Fo(2)3392
4759 y Fr(z)3431 4771 y Fo(2)3468 4759 y Fm(k)3510 4725
y Fo(2)3510 4780 y(2)3568 4759 y Fr(;)2027 4917 y Ft(which)23
b(can)g(be)h(used)f(in)h(practice)f(to)h(produce)e(a)i(greedy)e
(initializa-)2027 5036 y(tion)f(for)g(\(6\))h(as)g(follo)n(ws.)29
b(W)-7 b(e)23 b(\002rst)g(obtain)3322 5012 y Fl(\\)3319
5036 y Fq(\010\()p Fr(x)3458 5048 y Fp(i)3486 5036 y
Fq(\))k(=)e Fr(D)3704 5048 y Fp(i)3732 5036 y Fr(z)3775
5006 y Fk(\003)3771 5057 y Fp(i)3812 5036 y Ft(,)d(where)2027
5136 y(the)e Fr(z)2192 5105 y Fk(\003)2188 5157 y Fp(i)2250
5136 y Ft(are)g(de\002ned)f(as)2219 5333 y Fr(z)2262
5299 y Fk(\003)2258 5354 y Fp(i)2323 5333 y Fq(=)k(arg)13
b(min)2581 5383 y Fp(z)2613 5391 y Fh(i)2703 5277 y Fq(1)p
2703 5314 V 2703 5390 a(2)2755 5333 y Fm(k)p Fq(\010\()p
Fr(x)p Fq(\))19 b Fm(\000)3090 5255 y Fn(X)3070 5431
y Fp(i)p Fo(=1)p Fp(;)p Fo(2)3244 5333 y Fr(D)3313 5345
y Fp(i)3340 5333 y Fr(z)3379 5345 y Fp(i)3407 5333 y
Fm(k)3449 5299 y Fo(2)3449 5354 y(2)3504 5333 y Fq(+)f
Fr(\025)p Fm(k)p Fr(z)3716 5345 y Fp(i)3743 5333 y Fm(k)3785
5345 y Fo(1)3842 5333 y Fr(:)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 457 3 2998 4 v 457 23 V 950
123 4 100 v 1320 93 a Ft(Speak)o(er)n(-speci\002c)p 2234
123 V 2254 123 V 749 w(Multi-Speak)o(er)p 457 126 2998
4 v 950 226 4 100 v 1085 196 a(SDR)p 1378 226 V 283 w(SIR)p
1806 226 V 283 w(SAR)p 2234 226 V 2254 226 V 266 w(SDR)p
2640 226 V 262 w(SIR)p 3068 226 V 262 w(SAR)p 457 229
2998 4 v 507 299 a(NMF)p 950 329 4 100 v 336 w(7.5)20
b([1.5])p 1378 329 V 122 w(13.7)f([0.9])p 1806 329 V
122 w(8.9)g([1.7])p 2234 329 V 2254 329 V 142 w(6.1)g([2.9])p
2640 329 V 101 w(14.1)g([3.8])p 3068 329 V 101 w(7.4)h([2.1])p
457 332 2998 4 v 507 402 a Fe(scatt-NMF)867 414 y Fd(1)p
950 432 4 100 v 1003 402 a Ft(10.3)f([2.0])p 1378 432
V 101 w(19.7)g([3.3])p 1806 432 V 101 w(11.0)g([1.7])p
2234 432 V 2254 432 V 121 w(6.2)g([2.8])p 2640 432 V
101 w(13.5)g([3.5])p 3068 432 V 101 w(7.8)h([2.2])507
501 y Fe(scatt-NMF)867 513 y Fd(2)p 950 531 V 1003 501
a Ft(10.6)f([1.8])p 1378 531 V 101 w(20.5)g([3.0])p 1806
531 V 101 w(11.3)g([1.7])p 2234 531 V 2254 531 V 121
w(6.9)g([2.7])p 2640 531 V 101 w(16.0)g([3.5])p 3068
531 V 101 w(7.9)h([2.2])p 457 535 2998 4 v 0 TeXcolorgray
0 TeXcolorgray -146 613 a Fu(T)-8 b(able)29 b(1)p Ft(:)42
b(Separation)28 b(with)h(speak)o(ers-speci\002c)e(and)h(multi-speak)o
(er)f(settings.)51 b(A)-6 b(v)o(erage)27 b(SDR,)i(SIR)h(and)e(SAR)i
(\(in)e Fr(dB)t Ft(\))h(for)f(NMF)h(and)-146 712 y(proposed)18
b(and)h Fe(scatt-NMF)679 724 y Fd(2)712 712 y Ft(.)26
b(Standard)19 b(de)n(viation)f(of)i(each)g(result)g(sho)n(wn)g(between)
f(brack)o(ets.)p 0 TeXcolorgray -146 991 a(Since)h(the)g(scattering)g
Fq(\010\()p Fr(x)p Fq(\))h Ft(is)g(de\002ned)f(as)-146
1091 y Fq(\010\()p Fr(x)p Fq(\))41 b(=)f Fm(f)p Fr(A)p
Fm(j)p Fr(W)376 1103 y Fo(1)414 1091 y Fr(x)p Fm(j)14
b Fr(;)28 b(A)p Fm(j)p Fr(W)712 1103 y Fo(2)750 1091
y Fm(j)p Fr(W)851 1103 y Fo(1)888 1091 y Fr(x)p Fm(jjg)p
Ft(,)33 b(where)c Fr(A)h Ft(is)h(the)f(lo)n(wpass)-146
1191 y(\002lter)i(and)f Fr(W)273 1203 y Fo(1)343 1191
y Ft(and)g Fr(W)573 1203 y Fo(2)643 1191 y Ft(are)h(respecti)n(v)o(ely)
e(the)i(\002rst)g(and)f(second)-146 1290 y(layer)h(w)o(a)n(v)o(elet)g
(decompositions,)h(we)g(can)f(produce)f(an)h(estimate)-143
1409 y Fn(b)-49 b Fr(x)-99 1421 y Fp(i)-34 1409 y Ft(from)168
1385 y Fl(\\)165 1409 y Fq(\010\()p Fr(x)304 1421 y Fp(i)332
1409 y Fq(\))38 b Ft(by)e(using)g(the)h(comple)o(x)e(phases)h(of)h
Fr(W)1643 1421 y Fo(1)1680 1409 y Fr(x)h Ft(and)-146
1508 y Fr(W)-68 1520 y Fo(2)-31 1508 y Fm(j)p Fr(W)70
1520 y Fo(1)108 1508 y Fr(x)p Fm(j)p Ft(.)282 1738 y
Fu(5.)49 b(EXPERIMENT)-7 b(AL)23 b(RESUL)-8 b(TS)-146
1949 y(Ev)o(aluation)23 b(settings.)65 b Ft(W)-7 b(e)25
b(e)n(v)n(aluated)e(the)h(proposed)f(method)f(in)-146
2048 y(tw)o(o)j(settings:)36 b(speak)o(er)n(-speci\002c)24
b(and)h(multi-speak)o(er)-5 b(.)39 b(In)25 b(the)h(\002rst)-146
2148 y(setting)17 b(we)h(train)f(a)h(speak)o(er)n(-speci\002c)f(model)f
(for)h(each)g(speak)o(er)g(and)-146 2247 y(test)f(it)h(using)e
(sentences)h(from)f(the)h(same)g(speak)o(er)f(outside)g(the)h(train-)
-146 2347 y(ing)f(set.)24 b(In)16 b(the)g(second)f(setting,)i(we)f
(trained)f(the)h(model)f(on)g(a)i(mix)o(ed)-146 2447
y(group)24 b(of)i(male)g(and)g(female)f(speak)o(ers,)i(none)e(of)h
(which)g(were)g(in-)-146 2546 y(cluded)14 b(in)i(the)g(test)g(set.)25
b(Comparing)13 b(the)j(results)g(obtained)e(for)h(these)-146
2646 y(tw)o(o)24 b(settings)h(we)g(can)g(understand)d(the)j
(generalization)e(and)h(adap-)-146 2746 y(tation)19 b(properties)g(of)h
(the)g(algorithm.)j(All)e(signals)f(where)f(mix)o(ed)g(at)-146
2845 y(0)h Fr(dB)t Ft(.)-146 2969 y Fu(Data)27 b(sets.)78
b Ft(W)-7 b(e)29 b(used)f(a)h(subset)f(of)g(the)h(GRID)g(dataset)f([26)
o(])g(for)-146 3069 y(e)n(v)n(aluating)18 b(the)j(speak)o(er)n
(-speci\002c)e(setting.)26 b(F)o(or)20 b(each)g(speak)o(er)m(,)g
Fq(500)-146 3169 y Ft(randomly-chosen)11 b(clips)17 b(were)e(used)h
(for)f(training)g(\(around)f(25)h(min-)-146 3268 y(utes\))35
b(and)g Fq(200)g Ft(clips)h(were)f(used)h(for)f(testing.)71
b(F)o(or)35 b(the)h(multi-)-146 3368 y(speak)o(er)d(case)i(we)f(used)g
(a)h(subset)g(of)f(the)g(TIMIT)f(dataset.)67 b(W)-7 b(e)-146
3467 y(adopted)20 b(the)i(standard)f(test-train)h(di)n(vision,)f(using)
h(all)h(the)f(training)-146 3567 y(recordings)16 b(for)i(b)n(ulding)f
(the)i(models)e(and)h(a)h(subset)g(of)f(10)g(dif)n(ferent)-146
3667 y(speak)o(ers)e(\(6)g(males)h(and)f(6)g(females\))g(for)g
(testing.)24 b(F)o(or)16 b(each)g(speak)o(er)-146 3766
y(we)25 b(randomly)d(chose)i(tw)o(o)h(clips)g(and)f(compared)f(all)i
(female-male)-146 3866 y(combinations)19 b(\(144)g(mixtures\).)27
b(All)22 b(clips)f(were)g(resampled)f(to)h Fq(16)-146
3966 y Ft(KHz.)-146 4090 y Fu(Ev)o(aluation)27 b(measur)o(es.)77
b Ft(As)29 b(the)g(e)n(v)n(aluation)d(criteria,)k(we)f(used)-146
4189 y(the)k Fe(sour)m(ce-to-distortion)e(r)o(atio)i
Ft(\(SDR\),)g Fe(sour)m(ce-to-interfer)m(ence)-146 4289
y(r)o(atio)17 b Ft(\(SIR\),)h(and)g Fe(sour)m(ce-to-artifact)e(r)o
(atio)h Ft(\(SAR\))i(from)e(the)h(BSS-)-146 4389 y(EV)-11
b(AL)26 b(metrics)g([28)o(].)44 b(W)-7 b(e)28 b(also)f(computed)d(the)j
(standard)e Fe(signal-)-146 4488 y(to-noise)19 b(r)o(atio)h
Ft(\(SNR\).)-146 4612 y Fu(T)-6 b(raining)40 b(setting)o(.)112
b Ft(W)-7 b(e)42 b(e)n(v)n(aluated)d(the)h(proposed)e(scattering)-146
4712 y(NMF)21 b(model)e(with)i(one)f(and)h(tw)o(o)g(layers,)f(ref)n
(fered)f(as)i Fe(scatt-NMF)1852 4724 y Fd(1)-146 4812
y Ft(and)31 b Fe(scatt-NMF)366 4824 y Fd(2)432 4812 y
Ft(respecti)n(v)o(ely)-5 b(.)60 b(As)34 b(a)e(baseline)h(we)f(used)h
(stan-)-146 4911 y(dard)g(NMF)i(using)f(frame)g(lengths)g(of)g(1024)f
(samples)i(and)f(50\045)-146 5011 y(o)o(v)o(erlap.)82
b(The)40 b(dictionaries)f(in)i(standard)e(NMF)h(were)g(chosen)-146
5111 y(with)28 b Fq(200)g Ft(and)g Fq(400)g Ft(atoms)h(for)f(the)g
(speak)o(er)n(-speci\002c)g(and)g(multi-)-146 5210 y(speak)o(er)35
b(settings)h(respecti)n(v)o(ely)-5 b(.)71 b(These)36
b(v)n(alues)f(were)h(obtained)-146 5310 y(using)17 b(cross-v)n
(alidation)f(on)i(a)g(fe)n(w)g(clips)h(separated)e(from)g(the)h(train-)
-146 5409 y(ing)35 b(as)h(v)n(alidation)e(set.)72 b(In)35
b(all)h(cases,)k(we)c(applied)e Fe(scatt-NMF)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2493 939 1100 4 v 2493 958 V 2909 1037 4 79 v 2962 1014
a Fc(SDR)p 3141 1037 V 110 w(SIR)p 3360 1037 V 109 w(SAR)p
2493 1041 1100 4 v 2542 1096 a(NMF-KL)p 2909 1120 4 79
v 188 w(5.4)p 3141 1120 V 143 w(7.3)p 3360 1120 V 143
w(7.8)p 2493 1123 1100 4 v 2542 1178 a(RNN)p 2909 1202
4 79 v 303 w(7.4)p 3141 1202 V 126 w(11.8)p 3360 1202
V 127 w(7.5)p 2493 1205 1100 4 v 2542 1260 a Fb(scatt-NMF)2828
1270 y Fa(2)p 2909 1284 4 79 v 2985 1260 a Fc(6.7)p 3141
1284 V 126 w(11.1)p 3360 1284 V 127 w(6.9)p 2493 1287
1100 4 v 2493 1307 V 0 TeXcolorgray 0 TeXcolorgray 2027
1487 a Fu(T)-8 b(able)41 b(2)p Ft(:)66 b(Comparison)39
b(against)h(models)g(with)h(discriminati)n(v)o(e)2027
1587 y(training)p 0 TeXcolorgray 2027 2009 a(using)20
b(a)g(scattering)g(transforms)f(with)h(resolution)f Fr(Q)3592
2021 y Fo(1)3653 2009 y Fq(=)j Fr(Q)3806 2021 y Fo(2)3867
2009 y Fq(=)g(32)p Ft(.)2027 2109 y(The)g(resulting)h(representation)e
(had)h Fq(175)g Ft(coef)n(\002cients)h(for)f(the)h(\002rst)2027
2208 y(le)n(v)o(el)k(and)g(around)e Fq(2000)h Ft(for)h(the)g(second)g
(layer)f(\(man)o(y)g(of)h(which)2027 2308 y(are)j(zero)f(by)g
(construction)f(as)j(e)o(xplained)d(in)i(Section)g(3\))f(F)o(or)h(the)
2027 2408 y(single)h(speak)o(er)f(case)h(we)h(trained)e(dictionaries)g
(with)h Fq(200)f Ft(atoms)2027 2507 y(for)19 b Fe(scatt-NMF)2504
2519 y Fd(1)2557 2507 y Ft(and)g Fq(800)g Ft(atoms)g(for)g
Fe(scatt-NMF)3537 2519 y Fd(2)3570 2507 y Ft(.)26 b(While)20
b(for)f(the)2027 2607 y(multi-speak)o(er)29 b(case)i(we)g(used)g
Fq(400)f Ft(atoms)h(for)f Fe(scatt-NMF)3874 2619 y Fd(1)3938
2607 y Ft(and)2027 2706 y Fq(1000)d Ft(atoms)h(for)g
Fe(scatt-NMF)2935 2718 y Fd(2)2967 2706 y Ft(.)50 b(In)28
b(all)h(cases,)i(the)d(features)g(were)2027 2806 y(frame-wise)19
b(normalized)f(and)i(we)g(used)g Fr(\025)k Fq(=)e(1)p
Ft(.)2027 3074 y Fu(Results.)83 b Ft(T)-7 b(ables)30
b(1)h(and)e(2)h(sho)n(w)g(the)g(results)h(obtained)d(for)i(the)2027
3174 y(speak)o(er)n(-speci\002c)14 b(and)h(multi-speak)o(er)f(settings)
i(respecti)n(v)o(ely)-5 b(.)21 b(In)15 b(all)2027 3273
y(cases)j(we)g(observ)o(e)f(that)h(using)f(the)h(one)f(layer)g
(scattering)g(transform)2027 3373 y(outperforms)i(the)k(STFT)-6
b(.)22 b(Further)m(,)f(there)h(is)h(a)g(tangible)e(gain)h(in)g(in-)2027
3473 y(cluding)e(a)i(deeper)e(representation)g Fe(scatt-NMF)3453
3485 y Fd(2)3508 3473 y Ft(performs)f(al)o(w)o(ays)2027
3572 y(better)26 b(than)g Fe(scatt-NMF)2773 3584 y Fd(1)2833
3572 y Ft(As)h(is)h(to)e(be)h(e)o(xpected,)f(the)h(results)g(ob-)2027
3672 y(tained)17 b(with)g(the)g(speak)o(er)n(-speci\002c)f(setting)i
(are)f(signi\002cantly)f(better)2027 3772 y(than)22 b(those)g(of)g(the)
g(more)g(challanging)e(problem)h(of)h(multi-speak)o(er)2027
3871 y(setting.)2151 4043 y(W)-7 b(e)17 b(also)e(compared)e(the)j
(proposed)d(approach)g(with)i(the)g(speak)o(er)n(-)2027
4142 y(speci\002c)33 b(setting)h(discussed)f(in)h([)p
Fu(?)o Ft(].)65 b(In)33 b(this)h(w)o(ork)f(the)g(authods)2027
4242 y(in)m(v)o(estigate)41 b(se)n(v)o(eral)i(alternati)n(v)o(es)f(of)h
(using)g(Recurrent)f(Neural)2027 4341 y(Netw)o(orks)32
b(\(RNN\))h(for)f(speech)g(separation.)62 b(Se)n(v)o(eral)32
b(optimiza-)2027 4441 y(tion)42 b(settings)h(are)g(e)n(v)n(aluated)e
(on)i(tw)o(o)g(gi)n(v)o(en)e(speak)o(ers)h(of)h(the)2027
4541 y(TIMIT)24 b(dataset.)39 b(This)25 b(is)h(a)f(v)o(ery)f
(challenging)f(setting)h(due)h(to)g(the)2027 4640 y(v)o(ery)j(small)h
(a)n(v)n(ailable)g(training)e(data)i(\(less)h(than)e(10)h(seconds)f
(per)2027 4740 y(speak)o(er\).)e(The)20 b(e)n(v)n(aluations)g(of)g
Fe(scatt-NMF)3352 4752 y Fd(2)3407 4740 y Ft(were)h(performed)d(us-)
2027 4840 y(ing)e(the)h(setting)g(pro)o(vided)e(in)i([])g(\(with)g(the)
g(corresponding)c(training,)2027 4939 y(de)n(v)o(elopement)19
b(and)k(testing)f(data\))g(while)h(their)f(results)h(are)g(copied)2027
5039 y(from)c(the)h(paper)-5 b(.)2151 5210 y(In)17 b(all)h(the)f(e)o
(xperiments)e(with)i Fe(scatt-NMF)22 b Ft(,)c(we)f(using)g(a)g(greedy)
2027 5310 y(approximation)e(e)o(xplained)h(in)j(Section)e(3.)25
b(W)-7 b(e)19 b(e)o(xpect)e(that)i(solving)2027 5409
y(it)i(e)o(xplicitly)e(w)o(ould)g(bring)g(some)h(additional)f(impro)o
(v)o(ement.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 560 83 a Fu(6.)49 b(DISCUSSION)-146 269
y Ft(NMF-based)14 b(audio)g(source)h(separation)f(techniques)f(can)i
(be)h(thought)-146 368 y(as)25 b(applying)e(a)j(synthesis)f(operator)e
(on)h(a)i(feature)d(space)i(gi)n(v)o(en)f(by)-146 468
y(a)i(pooled)e(analysis)h(operator)-5 b(.)40 b(Le)n(v)o(eraging)23
b(recent)i(de)n(v)o(elopemnts)-146 567 y(in)i(signal)f(processing,)h
(we)h(propose)d(to)i(substitute)g(the)g(\002rst)g(stage)-146
667 y(with)g(a)h(deep)f(scattering)g(transform.)45 b(The)28
b(obtained)e(features)h(are)-146 767 y(designed)35 b(to)h(capture)g
(the)g(joint)h(time-frequenc)o(y)c(v)n(ariability)i(of)-146
866 y(speech)i(signals)i(and)f(ef)n(\002ciently)f(represent)g(a)i
(longer)e(temporal)-146 966 y(conte)o(xt.)50 b(Experimental)27
b(e)n(v)n(aluation)h(sho)n(wed)g(that)h(using)g(deeper)-146
1066 y(representations)34 b(leads)i(to)g(a)g(tangible)f(impro)o(v)o
(ement)e(in)j(perfor)n(-)-146 1165 y(mance)29 b(in)h(challenging)e
(source)i(separation)f(settings.)55 b(A)30 b(natural)-146
1265 y(e)o(xtension)35 b(of)h(this)h(w)o(ork)e(w)o(ould)h(be)g(to)h(in)
m(v)o(estigate)e(the)h(use)h(of)-146 1364 y(learned)32
b(representations)f(instead)i(\(or)g(on)f(top)h(of\))g(the)g(designed)
-146 1464 y(ones.)87 b(Future)40 b(w)o(ork)g(includes)h(testing)f(more)
h(thoroughly)d(the)-146 1564 y(potential)18 b(of)i(the)f(proposed)f
(model)h(in)h(combination)d(with)j(the)g(con-)-146 1663
y(v)n(olutional)k(neural)h(netw)o(orks)g(which)g(ha)n(v)o(e)g(been)g(v)
o(ery)g(successful)-146 1763 y(in)20 b(other)f(signal)h(and)g(image)g
(processing)e(problems.)534 1989 y Fu(7.)49 b(REFERENCES)p
0 TeXcolorgray -105 2174 a Ft([1])p 0 TeXcolorgray 40
w(P)-9 b(.)25 b(C.)g(Loizou,)41 b Fe(Speec)o(h)23 b(Enhancement:)30
b(Theory)24 b(and)f(Pr)o(ac-)33 2274 y(tice)p Ft(,)e(v)n(ol.)f(30,)28
b(CRC,)22 b(2007.)p 0 TeXcolorgray -105 2429 a([2])p
0 TeXcolorgray 40 w(E.)f(H)5 b(\250)-33 b(ansler)21 b(and)f(G.)h
(Schmidt,)31 b Fe(Speec)o(h)19 b(and)h(A)n(udio)g(Pr)l(ocess-)33
2529 y(ing)g(in)h(Adver)o(se)f(En)m(vir)l(onments)p Ft(,)28
b(Springer)m(,)18 b(2008.)p 0 TeXcolorgray -105 2684
a([3])p 0 TeXcolorgray 40 w(D.D.)h(Lee)g(and)g(H.S.)g(Seung,)26
b(\223Learning)17 b(parts)i(of)g(objects)g(by)33 2784
y(non-ne)o(gati)n(v)o(e)13 b(matrix)k(f)o(actorization,)-6
b(\224)21 b Fe(Natur)m(e)p Ft(,)d(v)n(ol.)f(401,)f(no.)33
2883 y(6755,)j(pp.)g(788\226791,)f(1999.)p 0 TeXcolorgray
-105 3039 a([4])p 0 TeXcolorgray 40 w(P)-9 b(.)20 b(Smaragdis,)f(B.)h
(Raj,)h(and)e(M.)g(Shashanka,)27 b(\223)-7 b(A)20 b(probabilis-)33
3138 y(tic)32 b(latent)f(v)n(ariable)f(model)g(for)h(acoustic)f
(modeling,)-6 b(\224)65 b Fe(Ad-)33 3238 y(vances)35
b(in)h(models)f(for)h(acoustic)e(pr)l(ocessing)o(,)39
b(NIPS)p Ft(,)c(v)n(ol.)33 3338 y(148,)19 b(2006.)p 0
TeXcolorgray -105 3493 a([5])p 0 TeXcolorgray 40 w(P)o(aris)f
(Smaragdis,)e(Cedric)h(Fe)n(v)n(otte,)g(G)h(Mysore,)f(Nasser)g(Mo-)33
3593 y(hammadiha,)36 b(and)d(Matthe)n(w)h(Hof)n(fman,)76
b(\223Static)35 b(and)e(dy-)33 3692 y(namic)38 b(source)f(separation)g
(using)g(nonne)o(gati)n(v)o(e)e(f)o(actoriza-)33 3792
y(tions:)49 b(A)32 b(uni\002ed)f(vie)n(w)-5 b(,)f(\224)68
b Fe(Signal)30 b(Pr)l(ocessing)i(Ma)o(gazine)o(,)33 3891
y(IEEE)p Ft(,)20 b(v)n(ol.)g(31,)f(no.)h(3,)g(pp.)f(66\22675,)f(2014.)p
0 TeXcolorgray -105 4047 a([6])p 0 TeXcolorgray 40 w(M.)40
b(N.)g(Schmidt)f(and)f(R.)j(K.)e(Olsson,)96 b(\223Single-channel)33
4146 y(speech)20 b(separation)f(using)g(sparse)h(non-ne)o(gati)n(v)o(e)
c(matrix)k(f)o(ac-)33 4246 y(torization,)-6 b(\224)28
b(in)21 b Fe(INTERSPEECH)p Ft(,)e(Sep)h(2006.)p 0 TeXcolorgray
-105 4401 a([7])p 0 TeXcolorgray 40 w(M.)58 b(V)-11 b(.)58
b(S.)g(Shashanka,)65 b(B.)59 b(Raj,)67 b(and)57 b(P)-9
b(.)58 b(Smaragdis,)33 4501 y(\223Sparse)21 b(Ov)o(ercomplete)d
(Decomposition)g(for)i(Single)g(Chan-)33 4601 y(nel)h(Speak)o(er)e
(Separation,)-6 b(\224)28 b(in)20 b Fe(ICASSP)p Ft(,)f(2007.)p
0 TeXcolorgray -105 4756 a([8])p 0 TeXcolorgray 40 w(C.)52
b(Joder)m(,)57 b(F)-7 b(.)51 b(W)-7 b(eninger)m(,)57
b(F)-7 b(.)52 b(Eyben,)k(D.)51 b(V)-5 b(irette,)58 b(and)33
4856 y(B.)39 b(Schuller)m(,)89 b(\223Real-time)37 b(speech)h
(separation)e(by)i(semi-)33 4955 y(supervised)58 b(nonne)o(gati)n(v)o
(e)e(matrix)i(f)o(actorization,)-6 b(\224)162 b(in)33
5055 y Fe(L)-5 b(V)g(A/ICA)p Ft(,)21 b(2012,)d(pp.)i(322\226329.)p
0 TeXcolorgray -105 5210 a([9])p 0 TeXcolorgray 40 w(Z.)37
b(Duan,)k(G.)c(J.)h(Mysore,)i(and)d(P)-9 b(.)37 b(Smaragdis,)86
b(\223Online)33 5310 y(plca)16 b(for)f(real-time)g(semi-supervised)f
(source)h(separation,)-6 b(\224)19 b(in)33 5409 y Fe(L)-5
b(V)g(A/ICA)p Ft(,)21 b(2012,)d(pp.)i(34\22641.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2027 83 a([10])p 0 TeXcolorgray
40 w(M.)g(N.)h(Schmidt,)e(J.)i(Larsen,)f(and)g(F)-7 b(.-T)h(.)20
b(Hsiao,)30 b(\223W)m(ind)20 b(noise)2207 183 y(reduction)g(using)i
(non-ne)o(gati)n(v)o(e)c(sparse)23 b(coding,)-6 b(\224)34
b(in)23 b Fe(MLSP)p Ft(,)2207 282 y(Aug)c(2007,)g(pp.)g(431\226436.)p
0 TeXcolorgray 2027 460 a([11])p 0 TeXcolorgray 40 w(Nasser)k
(Mohammadiha,)e(P)o(aris)i(Smaragdis,)f(and)h(Arne)f(Lei-)2207
560 y(jon,)h(\223Supervised)16 b(and)h(unsupervised)e(speech)i
(enhancement)2207 660 y(using)i(nonne)o(gati)n(v)o(e)d(matrix)k(f)o
(actorization,)-6 b(\224)27 b Fe(A)n(udio,)19 b(Speec)o(h,)2207
759 y(and)27 b(Langua)o(g)o(e)f(Pr)l(ocessing)o(,)j(IEEE)f(T)-5
b(r)o(ansactions)27 b(on)p Ft(,)i(v)n(ol.)2207 859 y(21,)19
b(no.)h(10,)f(pp.)h(2140\2262151,)c(2013.)p 0 TeXcolorgray
2027 1037 a([12])p 0 TeXcolorgray 40 w(C.)30 b(F)5 b(\264)-33
b(ev)n(otte,)60 b(\223Majorization-minimization)26 b(algorithm)h(for)
2207 1137 y(smooth)d(itakura-saito)g(nonne)o(gati)n(v)o(e)e(matrix)j(f)
o(actorization,)-6 b(\224)2207 1236 y(in)20 b Fe(ICASSP)p
Ft(.)f(IEEE,)g(2011,)g(pp.)g(1980\2261983.)p 0 TeXcolorgray
2027 1415 a([13])p 0 TeXcolorgray 40 w(K.)k(W)-8 b(.)25
b(W)m(ilson,)f(B.)g(Raj,)h(P)-9 b(.)23 b(Smaragdis,)g(and)g(A.)h(Di)n
(v)n(akaran,)2207 1514 y(\223Speech)i(denoising)f(using)h(nonne)o(gati)
n(v)o(e)e(matrix)i(f)o(actoriza-)2207 1614 y(tion)20
b(with)g(priors,)-6 b(\224)28 b(in)21 b Fe(ICASSP)p Ft(,)e(2008,)f(pp.)
i(4029\2264032.)p 0 TeXcolorgray 2027 1792 a([14])p 0
TeXcolorgray 40 w(G.)31 b(J.)h(Mysore)e(and)h(P)-9 b(.)32
b(Smaragdis,)66 b(\223)-7 b(A)32 b(non-ne)o(gati)n(v)o(e)27
b(ap-)2207 1892 y(proach)35 b(to)i(semi-supervised)e(separation)g(of)i
(speech)f(from)2207 1991 y(noise)25 b(with)g(the)h(use)f(of)h(temporal)
e(dynamics,)-6 b(\224)45 b(in)26 b Fe(ICASSP)p Ft(,)2207
2091 y(2011,)18 b(pp.)i(17\22620.)p 0 TeXcolorgray 2027
2269 a([15])p 0 TeXcolorgray 40 w(J.)31 b(Han,)j(G.)d(J.)h(Mysore,)h
(and)d(B.)i(P)o(ardo,)66 b(\223)-7 b(Audio)30 b(imputa-)2207
2369 y(tion)c(using)f(the)h(non-ne)o(gati)n(v)o(e)d(hidden)h(mark)o(o)o
(v)h(model,)-6 b(\224)49 b(in)2207 2468 y Fe(L)-5 b(V)g(A/ICA)p
Ft(,)20 b(2012,)f(pp.)g(347\226355.)p 0 TeXcolorgray
2027 2647 a([16])p 0 TeXcolorgray 40 w(C.)39 b(F)5 b(\264)-33
b(ev)n(otte,)43 b(J.)d(Le)f(Roux,)k(and)38 b(J.)h(R.)h(Hershe)o(y)-5
b(,)92 b(\223Non-)2207 2746 y(ne)o(gati)n(v)o(e)29 b(dynamical)h
(system)h(with)h(application)e(to)h(speech)2207 2846
y(and)19 b(audio,)-6 b(\224)28 b(in)21 b Fe(ICASSP)p
Ft(,)e(2013.)p 0 TeXcolorgray 2027 3024 a([17])p 0 TeXcolorgray
40 w(Nasser)24 b(Mohammadiha)e(and)i(Arne)g(Leijon,)42
b(\223Nonne)o(gati)n(v)o(e)2207 3124 y(hmm)15 b(for)h(babble)g(noise)g
(deri)n(v)o(ed)f(from)h(speech)g(hmm:)22 b(Appli-)2207
3223 y(cation)i(to)i(speech)f(enhancement,)-6 b(\224)45
b Fe(IEEE)24 b(T)-5 b(r)o(ansactions)25 b(on)2207 3323
y(A)n(udio,)19 b(Speec)o(h)f(and)h(Langua)o(g)o(e)f(Pr)l(ocessing)p
Ft(,)i(v)n(ol.)f(21,)h(no.)f(5,)2207 3423 y(pp.)g(998\2261011,)e(2013.)
p 0 TeXcolorgray 2027 3601 a([18])p 0 TeXcolorgray 40
w(R.)32 b(W)-8 b(.)32 b(Gerchber)o(g)d(and)i(W)-8 b(.)32
b(Owen)f(Saxton,)67 b(\223A)31 b(practical)2207 3700
y(algorithm)16 b(for)h(the)g(determination)f(of)h(the)h(phase)f(from)f
(image)2207 3800 y(and)k(dif)n(fraction)f(plane)i(pictures,)-6
b(\224)31 b Fe(Optik)p Ft(,)21 b(v)n(ol.)g(35,)g(pp.)f(237\226)2207
3900 y(246,)f(1972.)p 0 TeXcolorgray 2027 4078 a([19])p
0 TeXcolorgray 40 w(Joakim)26 b(And)5 b(\264)-33 b(en)27
b(and)f(St)5 b(\264)-33 b(ephane)27 b(Mallat,)54 b(\223Deep)26
b(scattering)2207 4177 y(spectrum,)-6 b(\224)28 b Fe(arXiv)20
b(pr)m(eprint)g(arXiv:1304.6763)p Ft(,)15 b(2013.)p 0
TeXcolorgray 2027 4356 a([20])p 0 TeXcolorgray 40 w(Joan)25
b(Bruna)g(and)h(St)5 b(\264)-33 b(ephane)24 b(Mallat,)49
b(\223In)m(v)n(ariant)23 b(scattering)2207 4455 y(con)m(v)n(olution)h
(netw)o(orks,)-6 b(\224)54 b Fe(P)-7 b(attern)27 b(Analysis)g(and)g
(Mac)o(hine)2207 4555 y(Intellig)o(ence)o(,)g(IEEE)g(T)-5
b(r)o(ansactions)27 b(on)p Ft(,)h(v)n(ol.)f(35,)i(no.)e(8,)h(pp.)2207
4655 y(1872\2261886,)16 b(2013.)p 0 TeXcolorgray 2027
4833 a([21])p 0 TeXcolorgray 40 w(Joan)f(Bruna,)k Fe(Scattering)14
b(Repr)m(esentations)g(for)i(Reco)o(gnition)p Ft(,)2207
4932 y(Ph.D.)j(thesis,)i(P)o(alaiseau,)f(Ecole)g(polytechnique,)d
(2013.)p 0 TeXcolorgray 2027 5111 a([22])p 0 TeXcolorgray
40 w(G.)j(W)-7 b(olf,)20 b(S.)g(Mallat,)g(and)f(S.)h(Shamma,)27
b(\223)-7 b(Audio)19 b(source)g(sep-)2207 5210 y(aration)30
b(with)g(time-frequenc)o(y)e(v)o(elocities,)-6 b(\224)65
b Fe(International)2207 5310 y(W)-8 b(orkshop)24 b(on)g(Mac)o(hine)f
(Learning)h(for)h(Signal)e(Pr)l(ocessing)p Ft(,)2207
5409 y(2014.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray -146 83 a Ft([23])p 0 TeXcolorgray
39 w(Joan)48 b(Bruna)f(and)h(St)5 b(\264)-33 b(ephane)47
b(Mallat,)125 b(\223)-7 b(Audio)47 b(te)o(xture)33 183
y(synthesis)41 b(with)g(scattering)g(moments,)-6 b(\224)99
b Fe(arXiv)41 b(pr)m(eprint)33 282 y(arXiv:1311.0407)p
Ft(,)16 b(2013.)p 0 TeXcolorgray -146 448 a([24])p 0
TeXcolorgray 39 w(Rodolphe)22 b(Jenatton,)h(R)5 b(\264)-33
b(emi)23 b(Gribon)m(v)n(al,)f(and)h(Francis)g(Bach,)33
548 y(\223Local)45 b(stability)h(and)f(rob)n(ustness)g(of)g(sparse)g
(dictionary)33 648 y(learning)d(in)i(the)f(presence)g(of)g(noise,)-6
b(\224)109 b Fe(arXiv)43 b(pr)m(eprint)33 747 y(arXiv:1210.0685)p
Ft(,)16 b(2012.)p 0 TeXcolorgray -146 913 a([25])p 0
TeXcolorgray 39 w(C.)i(F)5 b(\264)-33 b(ev)n(otte)17
b(and)f(J.)i(Idier)m(,)j(\223)-7 b(Algorithms)16 b(for)h(nonne)o(gati)n
(v)o(e)c(ma-)33 1013 y(trix)24 b(f)o(actorization)e(with)i(the)g
Fr(\014)t Ft(-di)n(v)o(er)o(gence,)-6 b(\224)39 b Fe(Neur)o(al)24
b(Com-)33 1112 y(putation)p Ft(,)19 b(v)n(ol.)h(23,)f(no.)h(9,)g(pp.)f
(2421\2262456,)d(2011.)p 0 TeXcolorgray -146 1279 a([26])p
0 TeXcolorgray 39 w(M.)38 b(Cook)o(e,)k(J.)c(Bark)o(er)m(,)k(S.)c
(Cunningham,)i(and)d(X.)h(Shao,)33 1378 y(\223)-7 b(An)27
b(audio-visual)e(corpus)g(for)h(speech)g(perception)e(and)i(au-)33
1478 y(tomatic)18 b(speech)f(recognition,)-6 b(\224)22
b Fe(J)n(.)c(of)g(the)f(Acoustical)g(Society)33 1577
y(of)k(America)p Ft(,)f(v)n(ol.)f(120,)g(pp.)h(2421,)f(2006.)p
0 TeXcolorgray -146 1743 a([27])p 0 TeXcolorgray 39 w(D.)30
b(Pearce)g(and)f(H.-G.)g(Hirsch,)62 b(\223The)29 b(aurora)f(e)o
(xperimen-)33 1843 y(tal)22 b(frame)n(w)o(ork)d(for)i(the)g
(performance)e(e)n(v)n(aluation)g(of)i(speech)33 1943
y(recognition)16 b(systems)j(under)e(noisy)h(conditions,)-6
b(\224)24 b(in)19 b Fe(INTER-)33 2042 y(SPEECH)p Ft(,)h(2000,)e(pp.)i
(29\22632.)p 0 TeXcolorgray -146 2208 a([28])p 0 TeXcolorgray
39 w(E.)g(V)-5 b(incent,)19 b(R.)h(Gribon)m(v)n(al,)d(and)i(C.)h(F)5
b(\264)-33 b(ev)n(otte,)27 b(\223Performance)33 2308
y(measurement)g(in)h(blind)f(audio)g(source)g(separation,)-6
b(\224)55 b Fe(IEEE)33 2408 y(T)-5 b(r)o(ans.)26 b(on)g(A)n(udio,)f
(Speec)o(h,)h(and)e(Lang)o(.)h(Pr)l(oc.)p Ft(,)i(v)n(ol.)e(14,)h(no.)33
2507 y(4,)20 b(pp.)g(1462\2261469,)c(2006.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
